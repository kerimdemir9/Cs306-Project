[1, 14:18:12] Apply changes to CS306-Project: Applying object changes ...
[1, 14:18:21] Applying changes to cs306-project...: 
[1, 14:18:22] : Changes applied to cs306-project
[1, 14:18:23] Apply changes to CS306-Project: Changes applied
[2, 14:19:30] CREATE TABLE continents( 
 continent_code VARCHAR(5), 
 name VARCHAR(50), 
 PRIMARY KEY (continent_code) 
): Running...
[2, 14:19:30] CREATE TABLE continents( 
 continent_code VARCHAR(5), 
 name VARCHAR(50), 
 PRIMARY KEY (continent_code) 
): 0 row(s) affected
[3, 14:19:30] CREATE TABLE countries( 
 iso_code VARCHAR(5), 
 name VARCHAR(50), 
 PRIMARY KEY (iso_code) 
): Running...
[3, 14:19:30] CREATE TABLE countries( 
 iso_code VARCHAR(5), 
 name VARCHAR(50), 
 PRIMARY KEY (iso_code) 
): 0 row(s) affected
[4, 14:19:30] CREATE TABLE locatedin( 
 iso_code VARCHAR(5), 
 continent_code VARCHAR(5) NOT NULL, 
 PRIMARY KEY (iso_code), 
 FOREIGN KEY (iso_code) REFERENCES countries (iso_code) ON DELETE CASCADE, 
 FOREIGN KEY (continent_code) REFERENCES continents (continent_code) ON 
DELETE CASCADE 
): Running...
[4, 14:19:30] CREATE TABLE locatedin( 
 iso_code VARCHAR(5), 
 continent_code VARCHAR(5) NOT NULL, 
 PRIMARY KEY (iso_code), 
 FOREIGN KEY (iso_code) REFERENCES countries (iso_code) ON DELETE CASCADE, 
 FOREIGN KEY (continent_code) REFERENCES continents (continent_code) ON 
DELETE CASCADE 
): 0 row(s) affected
[5, 14:19:30] CREATE TABLE health_deaths ( 
 iso_code VARCHAR(5) NOT NULL, 
 year INT, 
 deaths_by_child_stunting INT, 
 deaths_by_meningitis INT, 
 deaths_by_cardiovascular_diseases INT, 
 deaths_by_chronic_respiratory_diseases INT, 
 deaths_by_hiv_aids INT, 
 deaths_by_high_systolic_blood_pressure INT, 
 deaths_by_low_birth_weight INT, 
 deaths_by_child_wasting INT, 
 deaths_by_unsafe_sex INT, 
 deaths_by_low_physical_activity INT, 
 deaths_by_high_fasting_plasma_glucose INT, 
 deaths_by_high_body_mass_index INT, 
 deaths_by_no_access_to_handwashing_facility INT, 
 deaths_by_low_bone_mineral_density INT, 
 PRIMARY KEY (iso_code, year), 
 FOREIGN KEY (iso_code) REFERENCES countries(iso_code) ON 
DELETE CASCADE 
): Running...
[5, 14:19:30] CREATE TABLE health_deaths ( 
 iso_code VARCHAR(5) NOT NULL, 
 year INT, 
 deaths_by_child_stunting INT, 
 deaths_by_meningitis INT, 
 deaths_by_cardiovascular_diseases INT, 
 deaths_by_chronic_respiratory_diseases INT, 
 deaths_by_hiv_aids INT, 
 deaths_by_high_systolic_blood_pressure INT, 
 deaths_by_low_birth_weight INT, 
 deaths_by_child_wasting INT, 
 deaths_by_unsafe_sex INT, 
 deaths_by_low_physical_activity INT, 
 deaths_by_high_fasting_plasma_glucose INT, 
 deaths_by_high_body_mass_index INT, 
 deaths_by_no_access_to_handwashing_facility INT, 
 deaths_by_low_bone_mineral_density INT, 
 PRIMARY KEY (iso_code, year), 
 FOREIGN KEY (iso_code) REFERENCES countries(iso_code) ON 
DELETE CASCADE 
): 0 row(s) affected
[6, 14:19:30] CREATE TABLE diet_deaths ( 
 iso_code VARCHAR(5) NOT NULL, 
 year INT, 
 deaths_by_nutritional_deficiencies INT, 
 deaths_by_protein_energy_malnutrition INT, 
 deaths_by_vitamin_A_deficiency INT, 
 deaths_by_discontinued_breastfeeding INT, 
 deaths_by_non_exclusive_breastfeeding INT, 
 deaths_by_iron_deficiency INT, 
 deaths_by_diet_high_in_sodium INT, 
 deaths_by_diet_low_in_whole_grains INT, 
 deaths_by_diet_low_in_fruits INT, 
 PRIMARY KEY (iso_code, year), 
 FOREIGN KEY (iso_code) REFERENCES countries(iso_code) ON 
DELETE CASCADE 
): Running...
[6, 14:19:30] CREATE TABLE diet_deaths ( 
 iso_code VARCHAR(5) NOT NULL, 
 year INT, 
 deaths_by_nutritional_deficiencies INT, 
 deaths_by_protein_energy_malnutrition INT, 
 deaths_by_vitamin_A_deficiency INT, 
 deaths_by_discontinued_breastfeeding INT, 
 deaths_by_non_exclusive_breastfeeding INT, 
 deaths_by_iron_deficiency INT, 
 deaths_by_diet_high_in_sodium INT, 
 deaths_by_diet_low_in_whole_grains INT, 
 deaths_by_diet_low_in_fruits INT, 
 PRIMARY KEY (iso_code, year), 
 FOREIGN KEY (iso_code) REFERENCES countries(iso_code) ON 
DELETE CASCADE 
): 0 row(s) affected
[7, 14:19:30] CREATE TABLE nature_deaths ( 
 iso_code VARCHAR(5) NOT NULL, 
 year INT, 
 deaths_by_outdoor_air_pollution INT, 
 deaths_by_unsafe_water_source INT, 
 deaths_by_household_air_pollution_from_solid_fuels INT, 
 deaths_by_air_pollution INT, 
 deaths_by_unsafe_sanitation INT, 
 PRIMARY KEY (iso_code, year), 
 FOREIGN KEY (iso_code) REFERENCES countries(iso_code) ON 
DELETE CASCADE 
): Running...
[7, 14:19:30] CREATE TABLE nature_deaths ( 
 iso_code VARCHAR(5) NOT NULL, 
 year INT, 
 deaths_by_outdoor_air_pollution INT, 
 deaths_by_unsafe_water_source INT, 
 deaths_by_household_air_pollution_from_solid_fuels INT, 
 deaths_by_air_pollution INT, 
 deaths_by_unsafe_sanitation INT, 
 PRIMARY KEY (iso_code, year), 
 FOREIGN KEY (iso_code) REFERENCES countries(iso_code) ON 
DELETE CASCADE 
): 0 row(s) affected
[8, 14:19:30] CREATE TABLE substance_deaths ( 
 iso_code VARCHAR(5) NOT NULL, 
 year INT, 
 deaths_by_tobacco INT, 
 deaths_by_drug_use INT, 
 deaths_by_alcohol_use INT, 
 deaths_by_smoking INT, 
 deaths_by_secondhand_smoke INT, 
 PRIMARY KEY (iso_code, year), 
 FOREIGN KEY (iso_code) REFERENCES countries(iso_code) ON 
DELETE CASCADE 
): Running...
[8, 14:19:30] CREATE TABLE substance_deaths ( 
 iso_code VARCHAR(5) NOT NULL, 
 year INT, 
 deaths_by_tobacco INT, 
 deaths_by_drug_use INT, 
 deaths_by_alcohol_use INT, 
 deaths_by_smoking INT, 
 deaths_by_secondhand_smoke INT, 
 PRIMARY KEY (iso_code, year), 
 FOREIGN KEY (iso_code) REFERENCES countries(iso_code) ON 
DELETE CASCADE 
): 0 row(s) affected
[9, 14:19:30] CREATE TABLE emissions ( 
 iso_code VARCHAR(5) NOT NULL, 
 year INT, 
 nitrogen_oxide_in_tonnes_NOx REAL, 
 sulphur_dioxide_in_tonnes_SO2 REAL, 
 carbon_monoxide_in_tonnes_CO REAL, 
 ammonia_in_tonnes_NH3 REAL, 
 PRIMARY KEY (iso_code, year), 
 FOREIGN KEY (iso_code) REFERENCES countries(iso_code) ON 
DELETE CASCADE 
): Running...
[9, 14:19:30] CREATE TABLE emissions ( 
 iso_code VARCHAR(5) NOT NULL, 
 year INT, 
 nitrogen_oxide_in_tonnes_NOx REAL, 
 sulphur_dioxide_in_tonnes_SO2 REAL, 
 carbon_monoxide_in_tonnes_CO REAL, 
 ammonia_in_tonnes_NH3 REAL, 
 PRIMARY KEY (iso_code, year), 
 FOREIGN KEY (iso_code) REFERENCES countries(iso_code) ON 
DELETE CASCADE 
): 0 row(s) affected
[10, 14:20:39] SHOW SESSION VARIABLES LIKE 'lower_case_table_names': Executing 
[10, 14:20:39] SHOW SESSION VARIABLES LIKE 'lower_case_table_names': OK
[11, 14:20:39] SHOW DATABASES: Executing 
[11, 14:20:39] SHOW DATABASES: OK
[12, 14:20:43] SHOW SESSION VARIABLES LIKE 'lower_case_table_names': Executing 
[12, 14:20:43] SHOW SESSION VARIABLES LIKE 'lower_case_table_names': OK
[13, 14:20:43] SHOW COLUMNS FROM `cs306-project`.`continents`: Executing 
[13, 14:20:43] SHOW COLUMNS FROM `cs306-project`.`continents`: OK
[14, 14:20:48] PREPARE stmt FROM 'INSERT INTO `cs306-project`.`continents` (`name`,`continent_code`) VALUES(?,?)': Executing 
[14, 14:20:48] PREPARE stmt FROM 'INSERT INTO `cs306-project`.`continents` (`name`,`continent_code`) VALUES(?,?)': OK
[15, 14:20:48] DEALLOCATE PREPARE stmt: Executing 
[15, 14:20:48] DEALLOCATE PREPARE stmt: OK
[16, 14:20:55] SHOW SESSION VARIABLES LIKE 'lower_case_table_names': Executing 
[16, 14:20:55] SHOW SESSION VARIABLES LIKE 'lower_case_table_names': OK
[17, 14:20:55] SHOW DATABASES: Executing 
[17, 14:20:55] SHOW DATABASES: OK
[18, 14:21:06] SHOW SESSION VARIABLES LIKE 'lower_case_table_names': Executing 
[18, 14:21:06] SHOW SESSION VARIABLES LIKE 'lower_case_table_names': OK
[19, 14:21:06] SHOW DATABASES: Executing 
[19, 14:21:06] SHOW DATABASES: OK
[20, 14:21:08] SHOW SESSION VARIABLES LIKE 'lower_case_table_names': Executing 
[20, 14:21:08] SHOW SESSION VARIABLES LIKE 'lower_case_table_names': OK
[21, 14:21:08] SHOW COLUMNS FROM `cs306-project`.`countries`: Executing 
[21, 14:21:08] SHOW COLUMNS FROM `cs306-project`.`countries`: OK
[22, 14:21:14] PREPARE stmt FROM 'INSERT INTO `cs306-project`.`countries` (`name`,`iso_code`) VALUES(?,?)': Executing 
[22, 14:21:14] PREPARE stmt FROM 'INSERT INTO `cs306-project`.`countries` (`name`,`iso_code`) VALUES(?,?)': OK
[23, 14:21:15] DEALLOCATE PREPARE stmt: Executing 
[23, 14:21:15] DEALLOCATE PREPARE stmt: OK
[24, 14:21:20] PREPARE stmt FROM 'INSERT INTO `cs306-project`.`countries` (`name`,`iso_code`) VALUES(?,?)': Executing 
[24, 14:21:20] PREPARE stmt FROM 'INSERT INTO `cs306-project`.`countries` (`name`,`iso_code`) VALUES(?,?)': OK
[25, 14:21:21] DEALLOCATE PREPARE stmt: Executing 
[25, 14:21:21] DEALLOCATE PREPARE stmt: OK
[26, 14:21:35] SHOW SESSION VARIABLES LIKE 'lower_case_table_names': Executing 
[26, 14:21:35] SHOW SESSION VARIABLES LIKE 'lower_case_table_names': OK
[27, 14:21:35] SHOW DATABASES: Executing 
[27, 14:21:35] SHOW DATABASES: OK
[28, 14:21:36] SHOW SESSION VARIABLES LIKE 'lower_case_table_names': Executing 
[28, 14:21:36] SHOW SESSION VARIABLES LIKE 'lower_case_table_names': OK
[29, 14:21:36] SHOW COLUMNS FROM `cs306-project`.`locatedin`: Executing 
[29, 14:21:36] SHOW COLUMNS FROM `cs306-project`.`locatedin`: OK
[30, 14:21:40] PREPARE stmt FROM 'INSERT INTO `cs306-project`.`locatedin` (`iso_code`,`continent_code`) VALUES(?,?)': Executing 
[30, 14:21:40] PREPARE stmt FROM 'INSERT INTO `cs306-project`.`locatedin` (`iso_code`,`continent_code`) VALUES(?,?)': OK
[31, 14:21:41] DEALLOCATE PREPARE stmt: Executing 
[31, 14:21:41] DEALLOCATE PREPARE stmt: OK
[32, 14:21:54] SELECT * FROM `cs306-project`.continents
LIMIT 0, 1000
: Running...
[32, 14:21:54] SELECT * FROM `cs306-project`.continents
LIMIT 0, 1000
: Fetching...
[32, 14:21:54] SELECT * FROM `cs306-project`.continents
LIMIT 0, 1000
: 8 row(s) returned
[33, 14:22:00] SELECT * FROM `cs306-project`.countries
LIMIT 0, 1000
: Running...
[33, 14:22:00] SELECT * FROM `cs306-project`.countries
LIMIT 0, 1000
: Fetching...
[33, 14:22:00] SELECT * FROM `cs306-project`.countries
LIMIT 0, 1000
: 228 row(s) returned
[34, 14:22:04] SELECT * FROM `cs306-project`.locatedin
LIMIT 0, 1000
: Running...
[34, 14:22:04] SELECT * FROM `cs306-project`.locatedin
LIMIT 0, 1000
: Fetching...
[34, 14:22:04] SELECT * FROM `cs306-project`.locatedin
LIMIT 0, 1000
: 228 row(s) returned
[35, 14:22:26] SHOW SESSION VARIABLES LIKE 'lower_case_table_names': Executing 
[35, 14:22:26] SHOW SESSION VARIABLES LIKE 'lower_case_table_names': OK
[36, 14:22:26] SHOW DATABASES: Executing 
[36, 14:22:26] SHOW DATABASES: OK
[37, 14:22:28] SHOW SESSION VARIABLES LIKE 'lower_case_table_names': Executing 
[37, 14:22:28] SHOW SESSION VARIABLES LIKE 'lower_case_table_names': OK
[38, 14:22:28] SHOW COLUMNS FROM `cs306-project`.`diet_deaths`: Executing 
[38, 14:22:28] SHOW COLUMNS FROM `cs306-project`.`diet_deaths`: OK
[39, 14:24:50] PREPARE stmt FROM 'INSERT INTO `cs306-project`.`diet_deaths` (`iso_code`,`iso_code`,`year`,`deaths_by_nutritional_deficiencies`,`deaths_by_protein_energy_malnutrition`,`deaths_by_vitamin_A_deficiency`,`deaths_by_discontinued_breastfeeding`,`deaths_by_non_exclusive_breastfeeding`,`deaths_by_iron_deficiency`,`deaths_by_diet_high_in_sodium`,`deaths_by_diet_low_in_whole_grains`,`deaths_by_diet_low_in_fruits`) VALUES(?,?,?,?,?,?,?,?,?,?,?,?)': Executing 
[39, 14:24:50] PREPARE stmt FROM 'INSERT INTO `cs306-project`.`diet_deaths` (`iso_code`,`iso_code`,`year`,`deaths_by_nutritional_deficiencies`,`deaths_by_protein_energy_malnutrition`,`deaths_by_vitamin_A_deficiency`,`deaths_by_discontinued_breastfeeding`,`deaths_by_non_exclusive_breastfeeding`,`deaths_by_iron_deficiency`,`deaths_by_diet_high_in_sodium`,`deaths_by_diet_low_in_whole_grains`,`deaths_by_diet_low_in_fruits`) VALUES(?,?,?,?,?,?,?,?,?,?,?,?)': Error Code: 1110
Column 'iso_code' specified twice
[40, 14:24:55] PREPARE stmt FROM 'INSERT INTO `cs306-project`.`diet_deaths` (`iso_code`,`year`,`deaths_by_nutritional_deficiencies`,`deaths_by_protein_energy_malnutrition`,`deaths_by_vitamin_A_deficiency`,`deaths_by_discontinued_breastfeeding`,`deaths_by_non_exclusive_breastfeeding`,`deaths_by_iron_deficiency`,`deaths_by_diet_high_in_sodium`,`deaths_by_diet_low_in_whole_grains`,`deaths_by_diet_low_in_fruits`) VALUES(?,?,?,?,?,?,?,?,?,?,?)': Executing 
[40, 14:24:55] PREPARE stmt FROM 'INSERT INTO `cs306-project`.`diet_deaths` (`iso_code`,`year`,`deaths_by_nutritional_deficiencies`,`deaths_by_protein_energy_malnutrition`,`deaths_by_vitamin_A_deficiency`,`deaths_by_discontinued_breastfeeding`,`deaths_by_non_exclusive_breastfeeding`,`deaths_by_iron_deficiency`,`deaths_by_diet_high_in_sodium`,`deaths_by_diet_low_in_whole_grains`,`deaths_by_diet_low_in_fruits`) VALUES(?,?,?,?,?,?,?,?,?,?,?)': OK
[41, 14:25:53] DEALLOCATE PREPARE stmt: Executing 
[41, 14:25:53] DEALLOCATE PREPARE stmt: OK
[42, 14:26:43] SHOW SESSION VARIABLES LIKE 'lower_case_table_names': Executing 
[42, 14:26:43] SHOW SESSION VARIABLES LIKE 'lower_case_table_names': OK
[43, 14:26:43] SHOW DATABASES: Executing 
[43, 14:26:43] SHOW DATABASES: OK
[44, 14:26:44] SHOW SESSION VARIABLES LIKE 'lower_case_table_names': Executing 
[44, 14:26:44] SHOW SESSION VARIABLES LIKE 'lower_case_table_names': OK
[45, 14:26:44] SHOW COLUMNS FROM `cs306-project`.`emissions`: Executing 
[45, 14:26:44] SHOW COLUMNS FROM `cs306-project`.`emissions`: OK
[46, 14:26:53] PREPARE stmt FROM 'INSERT INTO `cs306-project`.`emissions` (`iso_code`,`year`,`nitrogen_oxide_in_tonnes_NOx`,`sulphur_dioxide_in_tonnes_SO2`,`carbon_monoxide_in_tonnes_CO`,`ammonia_in_tonnes_NH3`) VALUES(?,?,?,?,?,?)': Executing 
[46, 14:26:53] PREPARE stmt FROM 'INSERT INTO `cs306-project`.`emissions` (`iso_code`,`year`,`nitrogen_oxide_in_tonnes_NOx`,`sulphur_dioxide_in_tonnes_SO2`,`carbon_monoxide_in_tonnes_CO`,`ammonia_in_tonnes_NH3`) VALUES(?,?,?,?,?,?)': OK
[47, 14:27:24] DEALLOCATE PREPARE stmt: Executing 
[47, 14:27:24] DEALLOCATE PREPARE stmt: OK
[48, 14:28:00] SELECT * FROM `cs306-project`.emissions
LIMIT 0, 1000
: Running...
[48, 14:28:00] SELECT * FROM `cs306-project`.emissions
LIMIT 0, 1000
: Fetching...
[48, 14:28:00] SELECT * FROM `cs306-project`.emissions
LIMIT 0, 1000
: 1000 row(s) returned
[49, 14:28:18] SHOW SESSION VARIABLES LIKE 'lower_case_table_names': Executing 
[49, 14:28:18] SHOW SESSION VARIABLES LIKE 'lower_case_table_names': OK
[50, 14:28:18] SHOW DATABASES: Executing 
[50, 14:28:18] SHOW DATABASES: OK
[51, 14:28:20] SHOW SESSION VARIABLES LIKE 'lower_case_table_names': Executing 
[51, 14:28:20] SHOW SESSION VARIABLES LIKE 'lower_case_table_names': OK
[52, 14:28:20] SHOW COLUMNS FROM `cs306-project`.`health_deaths`: Executing 
[52, 14:28:20] SHOW COLUMNS FROM `cs306-project`.`health_deaths`: OK
[53, 14:28:58] PREPARE stmt FROM 'INSERT INTO `cs306-project`.`health_deaths` (`iso_code`,`year`,`deaths_by_meningitis`,`deaths_by_cardiovascular_diseases`,`deaths_by_chronic_respiratory_diseases`,`deaths_by_hiv_aids`,`deaths_by_high_systolic_blood_pressure`,`deaths_by_low_birth_weight`,`deaths_by_child_wasting`,`deaths_by_unsafe_sex`,`deaths_by_low_physical_activity`,`deaths_by_high_fasting_plasma_glucose`,`deaths_by_high_body_mass_index`,`deaths_by_no_access_to_handwashing_facility`,`deaths_by_low_bone_mineral_density`,`deaths_by_child_stunting`) VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)': Executing 
[53, 14:28:58] PREPARE stmt FROM 'INSERT INTO `cs306-project`.`health_deaths` (`iso_code`,`year`,`deaths_by_meningitis`,`deaths_by_cardiovascular_diseases`,`deaths_by_chronic_respiratory_diseases`,`deaths_by_hiv_aids`,`deaths_by_high_systolic_blood_pressure`,`deaths_by_low_birth_weight`,`deaths_by_child_wasting`,`deaths_by_unsafe_sex`,`deaths_by_low_physical_activity`,`deaths_by_high_fasting_plasma_glucose`,`deaths_by_high_body_mass_index`,`deaths_by_no_access_to_handwashing_facility`,`deaths_by_low_bone_mineral_density`,`deaths_by_child_stunting`) VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)': OK
[54, 14:30:03] DEALLOCATE PREPARE stmt: Executing 
[54, 14:30:03] DEALLOCATE PREPARE stmt: OK
[55, 14:31:38] SELECT * FROM `cs306-project`.health_deaths
LIMIT 0, 1000
: Running...
[55, 14:31:38] SELECT * FROM `cs306-project`.health_deaths
LIMIT 0, 1000
: Fetching...
[55, 14:31:39] SELECT * FROM `cs306-project`.health_deaths
LIMIT 0, 1000
: 1000 row(s) returned
[56, 14:31:45] SELECT * FROM `cs306-project`.nature_deaths
LIMIT 0, 1000
: Running...
[56, 14:31:45] SELECT * FROM `cs306-project`.nature_deaths
LIMIT 0, 1000
: Fetching...
[56, 14:31:45] SELECT * FROM `cs306-project`.nature_deaths
LIMIT 0, 1000
: 0 row(s) returned
[57, 14:31:54] SHOW SESSION VARIABLES LIKE 'lower_case_table_names': Executing 
[57, 14:31:54] SHOW SESSION VARIABLES LIKE 'lower_case_table_names': OK
[58, 14:31:54] SHOW DATABASES: Executing 
[58, 14:31:54] SHOW DATABASES: OK
[59, 14:31:54] SHOW SESSION VARIABLES LIKE 'lower_case_table_names': Executing 
[59, 14:31:54] SHOW SESSION VARIABLES LIKE 'lower_case_table_names': OK
[60, 14:31:54] SHOW COLUMNS FROM `cs306-project`.`nature_deaths`: Executing 
[60, 14:31:54] SHOW COLUMNS FROM `cs306-project`.`nature_deaths`: OK
[61, 14:32:52] PREPARE stmt FROM 'INSERT INTO `cs306-project`.`nature_deaths` (`iso_code`,`year`,`deaths_by_outdoor_air_pollution`,`deaths_by_unsafe_water_source`,`deaths_by_household_air_pollution_from_solid_fuels`,`deaths_by_air_pollution`,`deaths_by_unsafe_sanitation`) VALUES(?,?,?,?,?,?,?)': Executing 
[61, 14:32:52] PREPARE stmt FROM 'INSERT INTO `cs306-project`.`nature_deaths` (`iso_code`,`year`,`deaths_by_outdoor_air_pollution`,`deaths_by_unsafe_water_source`,`deaths_by_household_air_pollution_from_solid_fuels`,`deaths_by_air_pollution`,`deaths_by_unsafe_sanitation`) VALUES(?,?,?,?,?,?,?)': OK
[62, 14:33:33] DEALLOCATE PREPARE stmt: Executing 
[62, 14:33:33] DEALLOCATE PREPARE stmt: OK
[63, 14:33:47] SELECT * FROM `cs306-project`.nature_deaths
LIMIT 0, 1000
: Running...
[63, 14:33:47] SELECT * FROM `cs306-project`.nature_deaths
LIMIT 0, 1000
: Fetching...
[63, 14:33:47] SELECT * FROM `cs306-project`.nature_deaths
LIMIT 0, 1000
: 1000 row(s) returned
[64, 14:33:54] SHOW SESSION VARIABLES LIKE 'lower_case_table_names': Executing 
[64, 14:33:54] SHOW SESSION VARIABLES LIKE 'lower_case_table_names': OK
[65, 14:33:54] SHOW DATABASES: Executing 
[65, 14:33:54] SHOW DATABASES: OK
[66, 14:33:55] SHOW SESSION VARIABLES LIKE 'lower_case_table_names': Executing 
[66, 14:33:55] SHOW SESSION VARIABLES LIKE 'lower_case_table_names': OK
[67, 14:33:55] SHOW COLUMNS FROM `cs306-project`.`substance_deaths`: Executing 
[67, 14:33:55] SHOW COLUMNS FROM `cs306-project`.`substance_deaths`: OK
[68, 14:34:21] PREPARE stmt FROM 'INSERT INTO `cs306-project`.`substance_deaths` (`iso_code`,`year`,`deaths_by_tobacco`,`deaths_by_drug_use`,`deaths_by_alcohol_use`,`deaths_by_secondhand_smoke`,`deaths_by_smoking`) VALUES(?,?,?,?,?,?,?)': Executing 
[68, 14:34:21] PREPARE stmt FROM 'INSERT INTO `cs306-project`.`substance_deaths` (`iso_code`,`year`,`deaths_by_tobacco`,`deaths_by_drug_use`,`deaths_by_alcohol_use`,`deaths_by_secondhand_smoke`,`deaths_by_smoking`) VALUES(?,?,?,?,?,?,?)': OK
[69, 14:34:58] DEALLOCATE PREPARE stmt: Executing 
[69, 14:34:58] DEALLOCATE PREPARE stmt: OK
[1, 18:32:15] SELECT * FROM `cs306-project`.emissions
LIMIT 0, 1000
: Running...
[1, 18:32:15] SELECT * FROM `cs306-project`.emissions
LIMIT 0, 1000
: Fetching...
[1, 18:32:15] SELECT * FROM `cs306-project`.emissions
LIMIT 0, 1000
: 1000 row(s) returned
[2, 18:33:48] SELECT  AVG(nitrogen_oxide_in_tonnes_NOx) as "Average NOx",  AVG(sulphur_dioxide_in_tonnes_SO2) as "Average SO2",AVG(carbon_monoxide_in_tonnes_CO) as "Average CO",AVG(ammonia_in_tonnes_NH3) as "Average NH3"
FROM `cs306-project`.emissions
group by iso_code
LIMIT 0, 1000
: Running...
[2, 18:33:48] SELECT  AVG(nitrogen_oxide_in_tonnes_NOx) as "Average NOx",  AVG(sulphur_dioxide_in_tonnes_SO2) as "Average SO2",AVG(carbon_monoxide_in_tonnes_CO) as "Average CO",AVG(ammonia_in_tonnes_NH3) as "Average NH3"
FROM `cs306-project`.emissions
group by iso_code
LIMIT 0, 1000
: Fetching...
[2, 18:33:48] SELECT  AVG(nitrogen_oxide_in_tonnes_NOx) as "Average NOx",  AVG(sulphur_dioxide_in_tonnes_SO2) as "Average SO2",AVG(carbon_monoxide_in_tonnes_CO) as "Average CO",AVG(ammonia_in_tonnes_NH3) as "Average NH3"
FROM `cs306-project`.emissions
group by iso_code
LIMIT 0, 1000
: 198 row(s) returned
[3, 18:34:06] SELECT  iso_code, AVG(nitrogen_oxide_in_tonnes_NOx) as "Average NOx",  AVG(sulphur_dioxide_in_tonnes_SO2) as "Average SO2",AVG(carbon_monoxide_in_tonnes_CO) as "Average CO",AVG(ammonia_in_tonnes_NH3) as "Average NH3"
FROM `cs306-project`.emissions
group by iso_code
LIMIT 0, 1000
: Running...
[3, 18:34:06] SELECT  iso_code, AVG(nitrogen_oxide_in_tonnes_NOx) as "Average NOx",  AVG(sulphur_dioxide_in_tonnes_SO2) as "Average SO2",AVG(carbon_monoxide_in_tonnes_CO) as "Average CO",AVG(ammonia_in_tonnes_NH3) as "Average NH3"
FROM `cs306-project`.emissions
group by iso_code
LIMIT 0, 1000
: Fetching...
[3, 18:34:06] SELECT  iso_code, AVG(nitrogen_oxide_in_tonnes_NOx) as "Average NOx",  AVG(sulphur_dioxide_in_tonnes_SO2) as "Average SO2",AVG(carbon_monoxide_in_tonnes_CO) as "Average CO",AVG(ammonia_in_tonnes_NH3) as "Average NH3"
FROM `cs306-project`.emissions
group by iso_code
LIMIT 0, 1000
: 198 row(s) returned
[4, 18:34:15] SELECT * FROM `cs306-project`.emissions
LIMIT 0, 1000
: Running...
[4, 18:34:15] SELECT * FROM `cs306-project`.emissions
LIMIT 0, 1000
: Fetching...
[4, 18:34:15] SELECT * FROM `cs306-project`.emissions
LIMIT 0, 1000
: 1000 row(s) returned
[5, 18:35:27] SELECT  iso_code, AVG(nitrogen_oxide_in_tonnes_NOx) as "Average Emission of NOx (in Tonnes)",  AVG(sulphur_dioxide_in_tonnes_SO2) as "Average Emission of SO2 (in Tonnes)",AVG(carbon_monoxide_in_tonnes_CO) as "Average Emission of CO (in Tonnes)",AVG(ammonia_in_tonnes_NH3) as "Average Emission of NH3 (in Tonnes)"
FROM `cs306-project`.emissions
group by iso_code
LIMIT 0, 1000
: Running...
[5, 18:35:27] SELECT  iso_code, AVG(nitrogen_oxide_in_tonnes_NOx) as "Average Emission of NOx (in Tonnes)",  AVG(sulphur_dioxide_in_tonnes_SO2) as "Average Emission of SO2 (in Tonnes)",AVG(carbon_monoxide_in_tonnes_CO) as "Average Emission of CO (in Tonnes)",AVG(ammonia_in_tonnes_NH3) as "Average Emission of NH3 (in Tonnes)"
FROM `cs306-project`.emissions
group by iso_code
LIMIT 0, 1000
: Fetching...
[5, 18:35:27] SELECT  iso_code, AVG(nitrogen_oxide_in_tonnes_NOx) as "Average Emission of NOx (in Tonnes)",  AVG(sulphur_dioxide_in_tonnes_SO2) as "Average Emission of SO2 (in Tonnes)",AVG(carbon_monoxide_in_tonnes_CO) as "Average Emission of CO (in Tonnes)",AVG(ammonia_in_tonnes_NH3) as "Average Emission of NH3 (in Tonnes)"
FROM `cs306-project`.emissions
group by iso_code
LIMIT 0, 1000
: 198 row(s) returned
[6, 18:36:05] SELECT  iso_code, round(AVG(nitrogen_oxide_in_tonnes_NOx), 3) as "Average Emission of NOx (in Tonnes)",  AVG(sulphur_dioxide_in_tonnes_SO2) as "Average Emission of SO2 (in Tonnes)",AVG(carbon_monoxide_in_tonnes_CO) as "Average Emission of CO (in Tonnes)",AVG(ammonia_in_tonnes_NH3) as "Average Emission of NH3 (in Tonnes)"
FROM `cs306-project`.emissions
group by iso_code
LIMIT 0, 1000
: Running...
[6, 18:36:05] SELECT  iso_code, round(AVG(nitrogen_oxide_in_tonnes_NOx), 3) as "Average Emission of NOx (in Tonnes)",  AVG(sulphur_dioxide_in_tonnes_SO2) as "Average Emission of SO2 (in Tonnes)",AVG(carbon_monoxide_in_tonnes_CO) as "Average Emission of CO (in Tonnes)",AVG(ammonia_in_tonnes_NH3) as "Average Emission of NH3 (in Tonnes)"
FROM `cs306-project`.emissions
group by iso_code
LIMIT 0, 1000
: Fetching...
[6, 18:36:05] SELECT  iso_code, round(AVG(nitrogen_oxide_in_tonnes_NOx), 3) as "Average Emission of NOx (in Tonnes)",  AVG(sulphur_dioxide_in_tonnes_SO2) as "Average Emission of SO2 (in Tonnes)",AVG(carbon_monoxide_in_tonnes_CO) as "Average Emission of CO (in Tonnes)",AVG(ammonia_in_tonnes_NH3) as "Average Emission of NH3 (in Tonnes)"
FROM `cs306-project`.emissions
group by iso_code
LIMIT 0, 1000
: 198 row(s) returned
[7, 18:36:59] SELECT  iso_code, round(AVG(nitrogen_oxide_in_tonnes_NOx), 3) as "Average Emission of NOx (in Tonnes)",  round(AVG(sulphur_dioxide_in_tonnes_SO2), 3) as "Average Emission of SO2 (in Tonnes)",
round(AVG(carbon_monoxide_in_tonnes_CO), 3) as "Average Emission of CO (in Tonnes)", round(AVG(ammonia_in_tonnes_NH3),3) as "Average Emission of NH3 (in Tonnes)"
FROM `cs306-project`.emissions
group by iso_code
LIMIT 0, 1000
: Running...
[7, 18:36:59] SELECT  iso_code, round(AVG(nitrogen_oxide_in_tonnes_NOx), 3) as "Average Emission of NOx (in Tonnes)",  round(AVG(sulphur_dioxide_in_tonnes_SO2), 3) as "Average Emission of SO2 (in Tonnes)",
round(AVG(carbon_monoxide_in_tonnes_CO), 3) as "Average Emission of CO (in Tonnes)", round(AVG(ammonia_in_tonnes_NH3),3) as "Average Emission of NH3 (in Tonnes)"
FROM `cs306-project`.emissions
group by iso_code
LIMIT 0, 1000
: Fetching...
[7, 18:36:59] SELECT  iso_code, round(AVG(nitrogen_oxide_in_tonnes_NOx), 3) as "Average Emission of NOx (in Tonnes)",  round(AVG(sulphur_dioxide_in_tonnes_SO2), 3) as "Average Emission of SO2 (in Tonnes)",
round(AVG(carbon_monoxide_in_tonnes_CO), 3) as "Average Emission of CO (in Tonnes)", round(AVG(ammonia_in_tonnes_NH3),3) as "Average Emission of NH3 (in Tonnes)"
FROM `cs306-project`.emissions
group by iso_code
LIMIT 0, 1000
: 198 row(s) returned
[8, 18:38:34] SELECT  iso_code, round(AVG(nitrogen_oxide_in_tonnes_NOx), 3) as "Average Emission of NOx (in Tonnes)",  round(AVG(sulphur_dioxide_in_tonnes_SO2), 3) as "Average Emission of SO2 (in Tonnes)",
round(AVG(carbon_monoxide_in_tonnes_CO), 3) as "Average Emission of CO (in Tonnes)", round(AVG(ammonia_in_tonnes_NH3),3) as "Average Emission of NH3 (in Tonnes)", 
MAX(nitrogen_oxide_in_tonnes_NOx) as "Max Emission of NOx (in Tonnes)", MAX(sulphur_dioxide_in_tonnes_SO2) as "Max Emission of SO2 (in Tonnes)",
MAX(carbon_monoxide_in_tonnes_CO) as "Max Emission of CO (in Tonnes)", MAX(ammonia_in_tonnes_NH3) as "Max Emission of NH3 (in Tonnes)"
FROM `cs306-project`.emissions
group by iso_code
LIMIT 0, 1000
: Running...
[8, 18:38:34] SELECT  iso_code, round(AVG(nitrogen_oxide_in_tonnes_NOx), 3) as "Average Emission of NOx (in Tonnes)",  round(AVG(sulphur_dioxide_in_tonnes_SO2), 3) as "Average Emission of SO2 (in Tonnes)",
round(AVG(carbon_monoxide_in_tonnes_CO), 3) as "Average Emission of CO (in Tonnes)", round(AVG(ammonia_in_tonnes_NH3),3) as "Average Emission of NH3 (in Tonnes)", 
MAX(nitrogen_oxide_in_tonnes_NOx) as "Max Emission of NOx (in Tonnes)", MAX(sulphur_dioxide_in_tonnes_SO2) as "Max Emission of SO2 (in Tonnes)",
MAX(carbon_monoxide_in_tonnes_CO) as "Max Emission of CO (in Tonnes)", MAX(ammonia_in_tonnes_NH3) as "Max Emission of NH3 (in Tonnes)"
FROM `cs306-project`.emissions
group by iso_code
LIMIT 0, 1000
: Fetching...
[8, 18:38:34] SELECT  iso_code, round(AVG(nitrogen_oxide_in_tonnes_NOx), 3) as "Average Emission of NOx (in Tonnes)",  round(AVG(sulphur_dioxide_in_tonnes_SO2), 3) as "Average Emission of SO2 (in Tonnes)",
round(AVG(carbon_monoxide_in_tonnes_CO), 3) as "Average Emission of CO (in Tonnes)", round(AVG(ammonia_in_tonnes_NH3),3) as "Average Emission of NH3 (in Tonnes)", 
MAX(nitrogen_oxide_in_tonnes_NOx) as "Max Emission of NOx (in Tonnes)", MAX(sulphur_dioxide_in_tonnes_SO2) as "Max Emission of SO2 (in Tonnes)",
MAX(carbon_monoxide_in_tonnes_CO) as "Max Emission of CO (in Tonnes)", MAX(ammonia_in_tonnes_NH3) as "Max Emission of NH3 (in Tonnes)"
FROM `cs306-project`.emissions
group by iso_code
LIMIT 0, 1000
: 198 row(s) returned
[9, 18:39:10] SELECT  iso_code, round(AVG(nitrogen_oxide_in_tonnes_NOx), 3) as "Average Emission of NOx (in Tonnes)",  round(AVG(sulphur_dioxide_in_tonnes_SO2), 3) as "Average Emission of SO2 (in Tonnes)",
round(AVG(carbon_monoxide_in_tonnes_CO), 3) as "Average Emission of CO (in Tonnes)", round(AVG(ammonia_in_tonnes_NH3),3) as "Average Emission of NH3 (in Tonnes)", 
round(MAX(nitrogen_oxide_in_tonnes_NOx),3) as "Max Emission of NOx (in Tonnes)", round(MAX(sulphur_dioxide_in_tonnes_SO2),3) as "Max Emission of SO2 (in Tonnes)",
round(MAX(carbon_monoxide_in_tonnes_CO),3) as "Max Emission of CO (in Tonnes)", round(MAX(ammonia_in_tonnes_NH3),3) as "Max Emission of NH3 (in Tonnes)"
FROM `cs306-project`.emissions
group by iso_code
LIMIT 0, 1000
: Running...
[9, 18:39:10] SELECT  iso_code, round(AVG(nitrogen_oxide_in_tonnes_NOx), 3) as "Average Emission of NOx (in Tonnes)",  round(AVG(sulphur_dioxide_in_tonnes_SO2), 3) as "Average Emission of SO2 (in Tonnes)",
round(AVG(carbon_monoxide_in_tonnes_CO), 3) as "Average Emission of CO (in Tonnes)", round(AVG(ammonia_in_tonnes_NH3),3) as "Average Emission of NH3 (in Tonnes)", 
round(MAX(nitrogen_oxide_in_tonnes_NOx),3) as "Max Emission of NOx (in Tonnes)", round(MAX(sulphur_dioxide_in_tonnes_SO2),3) as "Max Emission of SO2 (in Tonnes)",
round(MAX(carbon_monoxide_in_tonnes_CO),3) as "Max Emission of CO (in Tonnes)", round(MAX(ammonia_in_tonnes_NH3),3) as "Max Emission of NH3 (in Tonnes)"
FROM `cs306-project`.emissions
group by iso_code
LIMIT 0, 1000
: Fetching...
[9, 18:39:10] SELECT  iso_code, round(AVG(nitrogen_oxide_in_tonnes_NOx), 3) as "Average Emission of NOx (in Tonnes)",  round(AVG(sulphur_dioxide_in_tonnes_SO2), 3) as "Average Emission of SO2 (in Tonnes)",
round(AVG(carbon_monoxide_in_tonnes_CO), 3) as "Average Emission of CO (in Tonnes)", round(AVG(ammonia_in_tonnes_NH3),3) as "Average Emission of NH3 (in Tonnes)", 
round(MAX(nitrogen_oxide_in_tonnes_NOx),3) as "Max Emission of NOx (in Tonnes)", round(MAX(sulphur_dioxide_in_tonnes_SO2),3) as "Max Emission of SO2 (in Tonnes)",
round(MAX(carbon_monoxide_in_tonnes_CO),3) as "Max Emission of CO (in Tonnes)", round(MAX(ammonia_in_tonnes_NH3),3) as "Max Emission of NH3 (in Tonnes)"
FROM `cs306-project`.emissions
group by iso_code
LIMIT 0, 1000
: 198 row(s) returned
[10, 18:40:07] SELECT  iso_code, round(AVG(nitrogen_oxide_in_tonnes_NOx), 3) as "Average Emission of NOx (in Tonnes)",  round(AVG(sulphur_dioxide_in_tonnes_SO2), 3) as "Average Emission of SO2 (in Tonnes)",
round(AVG(carbon_monoxide_in_tonnes_CO), 3) as "Average Emission of CO (in Tonnes)", round(AVG(ammonia_in_tonnes_NH3),3) as "Average Emission of NH3 (in Tonnes)", 
round(MAX(nitrogen_oxide_in_tonnes_NOx),3) as "Max Emission of NOx (in Tonnes)", round(MAX(sulphur_dioxide_in_tonnes_SO2),3) as "Max Emission of SO2 (in Tonnes)",
round(MAX(carbon_monoxide_in_tonnes_CO),3) as "Max Emission of CO (in Tonnes)", round(MAX(ammonia_in_tonnes_NH3),3) as "Max Emission of NH3 (in Tonnes)",
round(MIN(nitrogen_oxide_in_tonnes_NOx),3) as "MIN Emission of NOx (in Tonnes)", round(MIN(sulphur_dioxide_in_tonnes_SO2),3) as "MIN Emission of SO2 (in Tonnes)",
round(MIN(carbon_monoxide_in_tonnes_CO),3) as "MIN Emission of CO (in Tonnes)", round(MIN(ammonia_in_tonnes_NH3),3) as "MIN Emission of NH3 (in Tonnes)"
FROM `cs306-project`.emissions
group by iso_code
LIMIT 0, 1000
: Running...
[10, 18:40:07] SELECT  iso_code, round(AVG(nitrogen_oxide_in_tonnes_NOx), 3) as "Average Emission of NOx (in Tonnes)",  round(AVG(sulphur_dioxide_in_tonnes_SO2), 3) as "Average Emission of SO2 (in Tonnes)",
round(AVG(carbon_monoxide_in_tonnes_CO), 3) as "Average Emission of CO (in Tonnes)", round(AVG(ammonia_in_tonnes_NH3),3) as "Average Emission of NH3 (in Tonnes)", 
round(MAX(nitrogen_oxide_in_tonnes_NOx),3) as "Max Emission of NOx (in Tonnes)", round(MAX(sulphur_dioxide_in_tonnes_SO2),3) as "Max Emission of SO2 (in Tonnes)",
round(MAX(carbon_monoxide_in_tonnes_CO),3) as "Max Emission of CO (in Tonnes)", round(MAX(ammonia_in_tonnes_NH3),3) as "Max Emission of NH3 (in Tonnes)",
round(MIN(nitrogen_oxide_in_tonnes_NOx),3) as "MIN Emission of NOx (in Tonnes)", round(MIN(sulphur_dioxide_in_tonnes_SO2),3) as "MIN Emission of SO2 (in Tonnes)",
round(MIN(carbon_monoxide_in_tonnes_CO),3) as "MIN Emission of CO (in Tonnes)", round(MIN(ammonia_in_tonnes_NH3),3) as "MIN Emission of NH3 (in Tonnes)"
FROM `cs306-project`.emissions
group by iso_code
LIMIT 0, 1000
: Fetching...
[10, 18:40:07] SELECT  iso_code, round(AVG(nitrogen_oxide_in_tonnes_NOx), 3) as "Average Emission of NOx (in Tonnes)",  round(AVG(sulphur_dioxide_in_tonnes_SO2), 3) as "Average Emission of SO2 (in Tonnes)",
round(AVG(carbon_monoxide_in_tonnes_CO), 3) as "Average Emission of CO (in Tonnes)", round(AVG(ammonia_in_tonnes_NH3),3) as "Average Emission of NH3 (in Tonnes)", 
round(MAX(nitrogen_oxide_in_tonnes_NOx),3) as "Max Emission of NOx (in Tonnes)", round(MAX(sulphur_dioxide_in_tonnes_SO2),3) as "Max Emission of SO2 (in Tonnes)",
round(MAX(carbon_monoxide_in_tonnes_CO),3) as "Max Emission of CO (in Tonnes)", round(MAX(ammonia_in_tonnes_NH3),3) as "Max Emission of NH3 (in Tonnes)",
round(MIN(nitrogen_oxide_in_tonnes_NOx),3) as "MIN Emission of NOx (in Tonnes)", round(MIN(sulphur_dioxide_in_tonnes_SO2),3) as "MIN Emission of SO2 (in Tonnes)",
round(MIN(carbon_monoxide_in_tonnes_CO),3) as "MIN Emission of CO (in Tonnes)", round(MIN(ammonia_in_tonnes_NH3),3) as "MIN Emission of NH3 (in Tonnes)"
FROM `cs306-project`.emissions
group by iso_code
LIMIT 0, 1000
: 198 row(s) returned
[11, 18:40:33] SELECT * FROM `cs306-project`.health_deaths
LIMIT 0, 1000
: Running...
[11, 18:40:33] SELECT * FROM `cs306-project`.health_deaths
LIMIT 0, 1000
: Fetching...
[11, 18:40:33] SELECT * FROM `cs306-project`.health_deaths
LIMIT 0, 1000
: 1000 row(s) returned
[12, 18:43:38] SELECT * FROM `cs306-project`.emissions
LIMIT 0, 1000
: Running...
[12, 18:43:38] SELECT * FROM `cs306-project`.emissions
LIMIT 0, 1000
: Fetching...
[12, 18:43:38] SELECT * FROM `cs306-project`.emissions
LIMIT 0, 1000
: 1000 row(s) returned
[13, 18:45:47] SELECT * FROM `cs306-project`.diet_deaths
LIMIT 0, 1000
: Running...
[13, 18:45:47] SELECT * FROM `cs306-project`.diet_deaths
LIMIT 0, 1000
: Fetching...
[13, 18:45:48] SELECT * FROM `cs306-project`.diet_deaths
LIMIT 0, 1000
: 1000 row(s) returned
[14, 18:46:13] SELECT  iso_code, round(AVG(nitrogen_oxide_in_tonnes_NOx), 3) as "Average Emission of NOx (in Tonnes)",  round(AVG(sulphur_dioxide_in_tonnes_SO2), 3) as "Average Emission of SO2 (in Tonnes)",
round(AVG(carbon_monoxide_in_tonnes_CO), 3) as "Average Emission of CO (in Tonnes)", round(AVG(ammonia_in_tonnes_NH3),3) as "Average Emission of NH3 (in Tonnes)", 
round(MAX(nitrogen_oxide_in_tonnes_NOx),3) as "Max Emission of NOx (in Tonnes)", round(MAX(sulphur_dioxide_in_tonnes_SO2),3) as "Max Emission of SO2 (in Tonnes)",
round(MAX(carbon_monoxide_in_tonnes_CO),3) as "Max Emission of CO (in Tonnes)", round(MAX(ammonia_in_tonnes_NH3),3) as "Max Emission of NH3 (in Tonnes)",
round(MIN(nitrogen_oxide_in_tonnes_NOx),3) as "MIN Emission of NOx (in Tonnes)", round(MIN(sulphur_dioxide_in_tonnes_SO2),3) as "MIN Emission of SO2 (in Tonnes)",
round(MIN(carbon_monoxide_in_tonnes_CO),3) as "MIN Emission of CO (in Tonnes)", round(MIN(ammonia_in_tonnes_NH3),3) as "MIN Emission of NH3 (in Tonnes)"
FROM `cs306-project`.emissions
group by iso_code
LIMIT 0, 1000
: Running...
[14, 18:46:13] SELECT  iso_code, round(AVG(nitrogen_oxide_in_tonnes_NOx), 3) as "Average Emission of NOx (in Tonnes)",  round(AVG(sulphur_dioxide_in_tonnes_SO2), 3) as "Average Emission of SO2 (in Tonnes)",
round(AVG(carbon_monoxide_in_tonnes_CO), 3) as "Average Emission of CO (in Tonnes)", round(AVG(ammonia_in_tonnes_NH3),3) as "Average Emission of NH3 (in Tonnes)", 
round(MAX(nitrogen_oxide_in_tonnes_NOx),3) as "Max Emission of NOx (in Tonnes)", round(MAX(sulphur_dioxide_in_tonnes_SO2),3) as "Max Emission of SO2 (in Tonnes)",
round(MAX(carbon_monoxide_in_tonnes_CO),3) as "Max Emission of CO (in Tonnes)", round(MAX(ammonia_in_tonnes_NH3),3) as "Max Emission of NH3 (in Tonnes)",
round(MIN(nitrogen_oxide_in_tonnes_NOx),3) as "MIN Emission of NOx (in Tonnes)", round(MIN(sulphur_dioxide_in_tonnes_SO2),3) as "MIN Emission of SO2 (in Tonnes)",
round(MIN(carbon_monoxide_in_tonnes_CO),3) as "MIN Emission of CO (in Tonnes)", round(MIN(ammonia_in_tonnes_NH3),3) as "MIN Emission of NH3 (in Tonnes)"
FROM `cs306-project`.emissions
group by iso_code
LIMIT 0, 1000
: Fetching...
[14, 18:46:13] SELECT  iso_code, round(AVG(nitrogen_oxide_in_tonnes_NOx), 3) as "Average Emission of NOx (in Tonnes)",  round(AVG(sulphur_dioxide_in_tonnes_SO2), 3) as "Average Emission of SO2 (in Tonnes)",
round(AVG(carbon_monoxide_in_tonnes_CO), 3) as "Average Emission of CO (in Tonnes)", round(AVG(ammonia_in_tonnes_NH3),3) as "Average Emission of NH3 (in Tonnes)", 
round(MAX(nitrogen_oxide_in_tonnes_NOx),3) as "Max Emission of NOx (in Tonnes)", round(MAX(sulphur_dioxide_in_tonnes_SO2),3) as "Max Emission of SO2 (in Tonnes)",
round(MAX(carbon_monoxide_in_tonnes_CO),3) as "Max Emission of CO (in Tonnes)", round(MAX(ammonia_in_tonnes_NH3),3) as "Max Emission of NH3 (in Tonnes)",
round(MIN(nitrogen_oxide_in_tonnes_NOx),3) as "MIN Emission of NOx (in Tonnes)", round(MIN(sulphur_dioxide_in_tonnes_SO2),3) as "MIN Emission of SO2 (in Tonnes)",
round(MIN(carbon_monoxide_in_tonnes_CO),3) as "MIN Emission of CO (in Tonnes)", round(MIN(ammonia_in_tonnes_NH3),3) as "MIN Emission of NH3 (in Tonnes)"
FROM `cs306-project`.emissions
group by iso_code
LIMIT 0, 1000
: 198 row(s) returned
[15, 18:46:25] SELECT  iso_code, round(AVG(nitrogen_oxide_in_tonnes_NOx), 3) as "Average Emission of NOx (in Tonnes)",  round(AVG(sulphur_dioxide_in_tonnes_SO2), 3) as "Average Emission of SO2 (in Tonnes)",
round(AVG(carbon_monoxide_in_tonnes_CO), 3) as "Average Emission of CO (in Tonnes)", round(AVG(ammonia_in_tonnes_NH3),3) as "Average Emission of NH3 (in Tonnes)", 
round(MAX(nitrogen_oxide_in_tonnes_NOx),3) as "Max Emission of NOx (in Tonnes)", round(MAX(sulphur_dioxide_in_tonnes_SO2),3) as "Max Emission of SO2 (in Tonnes)",
round(MAX(carbon_monoxide_in_tonnes_CO),3) as "Max Emission of CO (in Tonnes)", round(MAX(ammonia_in_tonnes_NH3),3) as "Max Emission of NH3 (in Tonnes)",
round(MIN(nitrogen_oxide_in_tonnes_NOx),3) as "MIN Emission of NOx (in Tonnes)", round(MIN(sulphur_dioxide_in_tonnes_SO2),3) as "MIN Emission of SO2 (in Tonnes)",
round(MIN(carbon_monoxide_in_tonnes_CO),3) as "MIN Emission of CO (in Tonnes)", round(MIN(ammonia_in_tonnes_NH3),3) as "MIN Emission of NH3 (in Tonnes)"
FROM `cs306-project`.emissions
LIMIT 0, 1000
: Running...
[15, 18:46:25] SELECT  iso_code, round(AVG(nitrogen_oxide_in_tonnes_NOx), 3) as "Average Emission of NOx (in Tonnes)",  round(AVG(sulphur_dioxide_in_tonnes_SO2), 3) as "Average Emission of SO2 (in Tonnes)",
round(AVG(carbon_monoxide_in_tonnes_CO), 3) as "Average Emission of CO (in Tonnes)", round(AVG(ammonia_in_tonnes_NH3),3) as "Average Emission of NH3 (in Tonnes)", 
round(MAX(nitrogen_oxide_in_tonnes_NOx),3) as "Max Emission of NOx (in Tonnes)", round(MAX(sulphur_dioxide_in_tonnes_SO2),3) as "Max Emission of SO2 (in Tonnes)",
round(MAX(carbon_monoxide_in_tonnes_CO),3) as "Max Emission of CO (in Tonnes)", round(MAX(ammonia_in_tonnes_NH3),3) as "Max Emission of NH3 (in Tonnes)",
round(MIN(nitrogen_oxide_in_tonnes_NOx),3) as "MIN Emission of NOx (in Tonnes)", round(MIN(sulphur_dioxide_in_tonnes_SO2),3) as "MIN Emission of SO2 (in Tonnes)",
round(MIN(carbon_monoxide_in_tonnes_CO),3) as "MIN Emission of CO (in Tonnes)", round(MIN(ammonia_in_tonnes_NH3),3) as "MIN Emission of NH3 (in Tonnes)"
FROM `cs306-project`.emissions
LIMIT 0, 1000
: Error Code: 1140. In aggregated query without GROUP BY, expression #1 of SELECT list contains nonaggregated column 'cs306-project.emissions.iso_code'; this is incompatible with sql_mode=only_full_group_by
[16, 18:46:31] SELECT  iso_code, round(AVG(nitrogen_oxide_in_tonnes_NOx), 3) as "Average Emission of NOx (in Tonnes)",  round(AVG(sulphur_dioxide_in_tonnes_SO2), 3) as "Average Emission of SO2 (in Tonnes)",
round(AVG(carbon_monoxide_in_tonnes_CO), 3) as "Average Emission of CO (in Tonnes)", round(AVG(ammonia_in_tonnes_NH3),3) as "Average Emission of NH3 (in Tonnes)", 
round(MAX(nitrogen_oxide_in_tonnes_NOx),3) as "Max Emission of NOx (in Tonnes)", round(MAX(sulphur_dioxide_in_tonnes_SO2),3) as "Max Emission of SO2 (in Tonnes)",
round(MAX(carbon_monoxide_in_tonnes_CO),3) as "Max Emission of CO (in Tonnes)", round(MAX(ammonia_in_tonnes_NH3),3) as "Max Emission of NH3 (in Tonnes)",
round(MIN(nitrogen_oxide_in_tonnes_NOx),3) as "MIN Emission of NOx (in Tonnes)", round(MIN(sulphur_dioxide_in_tonnes_SO2),3) as "MIN Emission of SO2 (in Tonnes)",
round(MIN(carbon_monoxide_in_tonnes_CO),3) as "MIN Emission of CO (in Tonnes)", round(MIN(ammonia_in_tonnes_NH3),3) as "MIN Emission of NH3 (in Tonnes)"
FROM `cs306-project`.emissions
group by iso_code
LIMIT 0, 1000
: Running...
[16, 18:46:31] SELECT  iso_code, round(AVG(nitrogen_oxide_in_tonnes_NOx), 3) as "Average Emission of NOx (in Tonnes)",  round(AVG(sulphur_dioxide_in_tonnes_SO2), 3) as "Average Emission of SO2 (in Tonnes)",
round(AVG(carbon_monoxide_in_tonnes_CO), 3) as "Average Emission of CO (in Tonnes)", round(AVG(ammonia_in_tonnes_NH3),3) as "Average Emission of NH3 (in Tonnes)", 
round(MAX(nitrogen_oxide_in_tonnes_NOx),3) as "Max Emission of NOx (in Tonnes)", round(MAX(sulphur_dioxide_in_tonnes_SO2),3) as "Max Emission of SO2 (in Tonnes)",
round(MAX(carbon_monoxide_in_tonnes_CO),3) as "Max Emission of CO (in Tonnes)", round(MAX(ammonia_in_tonnes_NH3),3) as "Max Emission of NH3 (in Tonnes)",
round(MIN(nitrogen_oxide_in_tonnes_NOx),3) as "MIN Emission of NOx (in Tonnes)", round(MIN(sulphur_dioxide_in_tonnes_SO2),3) as "MIN Emission of SO2 (in Tonnes)",
round(MIN(carbon_monoxide_in_tonnes_CO),3) as "MIN Emission of CO (in Tonnes)", round(MIN(ammonia_in_tonnes_NH3),3) as "MIN Emission of NH3 (in Tonnes)"
FROM `cs306-project`.emissions
group by iso_code
LIMIT 0, 1000
: Fetching...
[16, 18:46:31] SELECT  iso_code, round(AVG(nitrogen_oxide_in_tonnes_NOx), 3) as "Average Emission of NOx (in Tonnes)",  round(AVG(sulphur_dioxide_in_tonnes_SO2), 3) as "Average Emission of SO2 (in Tonnes)",
round(AVG(carbon_monoxide_in_tonnes_CO), 3) as "Average Emission of CO (in Tonnes)", round(AVG(ammonia_in_tonnes_NH3),3) as "Average Emission of NH3 (in Tonnes)", 
round(MAX(nitrogen_oxide_in_tonnes_NOx),3) as "Max Emission of NOx (in Tonnes)", round(MAX(sulphur_dioxide_in_tonnes_SO2),3) as "Max Emission of SO2 (in Tonnes)",
round(MAX(carbon_monoxide_in_tonnes_CO),3) as "Max Emission of CO (in Tonnes)", round(MAX(ammonia_in_tonnes_NH3),3) as "Max Emission of NH3 (in Tonnes)",
round(MIN(nitrogen_oxide_in_tonnes_NOx),3) as "MIN Emission of NOx (in Tonnes)", round(MIN(sulphur_dioxide_in_tonnes_SO2),3) as "MIN Emission of SO2 (in Tonnes)",
round(MIN(carbon_monoxide_in_tonnes_CO),3) as "MIN Emission of CO (in Tonnes)", round(MIN(ammonia_in_tonnes_NH3),3) as "MIN Emission of NH3 (in Tonnes)"
FROM `cs306-project`.emissions
group by iso_code
LIMIT 0, 1000
: 198 row(s) returned
[17, 18:46:52] SELECT * FROM `cs306-project`.nature_deaths
LIMIT 0, 1000
: Running...
[17, 18:46:52] SELECT * FROM `cs306-project`.nature_deaths
LIMIT 0, 1000
: Fetching...
[17, 18:46:52] SELECT * FROM `cs306-project`.nature_deaths
LIMIT 0, 1000
: 1000 row(s) returned
[18, 18:49:34] SELECT iso_code as "Country Code", 
nitrogen_oxide_in_tonnes_NOx as "Emission of NOx in Tonnes",
sulphur_dioxide_in_tonnes_SO2 as "Emission of SO2 in Tonnes",
carbon_monoxide_in_tonnes_CO as "Emission of CO in Tonnes",
ammonia_in_tonnes_NH3 as "Emission of NH3 in Tonnes"
FROM emissions
WHERE AVG(AVG(nitrogen_oxide_in_tonnes_NOx),AVG(sulphur_dioxide_in_tonnes_SO2),AVG(carbon_monoxide_in_tonnes_CO),AVG(ammonia_in_tonnes_NH3))
GROUP BY iso_Code: Running...
[18, 18:49:34] SELECT iso_code as "Country Code", 
nitrogen_oxide_in_tonnes_NOx as "Emission of NOx in Tonnes",
sulphur_dioxide_in_tonnes_SO2 as "Emission of SO2 in Tonnes",
carbon_monoxide_in_tonnes_CO as "Emission of CO in Tonnes",
ammonia_in_tonnes_NH3 as "Emission of NH3 in Tonnes"
FROM emissions
WHERE AVG(AVG(nitrogen_oxide_in_tonnes_NOx),AVG(sulphur_dioxide_in_tonnes_SO2),AVG(carbon_monoxide_in_tonnes_CO),AVG(ammonia_in_tonnes_NH3))
GROUP BY iso_Code: Error Code: 1064. You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ',AVG(sulphur_dioxide_in_tonnes_SO2),AVG(carbon_monoxide_in_tonnes_CO),AVG(ammoni' at line 7
[19, 18:49:50] SELECT iso_code as "Country Code", 
nitrogen_oxide_in_tonnes_NOx as "Emission of NOx in Tonnes",
sulphur_dioxide_in_tonnes_SO2 as "Emission of SO2 in Tonnes",
carbon_monoxide_in_tonnes_CO as "Emission of CO in Tonnes",
ammonia_in_tonnes_NH3 as "Emission of NH3 in Tonnes"
FROM emissions
-- WHERE AVG(AVG(nitrogen_oxide_in_tonnes_NOx),AVG(sulphur_dioxide_in_tonnes_SO2),AVG(carbon_monoxide_in_tonnes_CO),AVG(ammonia_in_tonnes_NH3))
GROUP BY iso_Code
LIMIT 0, 1000
: Running...
[19, 18:49:50] SELECT iso_code as "Country Code", 
nitrogen_oxide_in_tonnes_NOx as "Emission of NOx in Tonnes",
sulphur_dioxide_in_tonnes_SO2 as "Emission of SO2 in Tonnes",
carbon_monoxide_in_tonnes_CO as "Emission of CO in Tonnes",
ammonia_in_tonnes_NH3 as "Emission of NH3 in Tonnes"
FROM emissions
-- WHERE AVG(AVG(nitrogen_oxide_in_tonnes_NOx),AVG(sulphur_dioxide_in_tonnes_SO2),AVG(carbon_monoxide_in_tonnes_CO),AVG(ammonia_in_tonnes_NH3))
GROUP BY iso_Code
LIMIT 0, 1000
: Error Code: 1055. Expression #2 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'cs306-project.emissions.nitrogen_oxide_in_tonnes_NOx' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by
[20, 18:50:24] SELECT iso_code as "Country Code", 
AVG(nitrogen_oxide_in_tonnes_NOx) as "Emission of NOx in Tonnes",
AVG(sulphur_dioxide_in_tonnes_SO2) as "Emission of SO2 in Tonnes",
AVG(carbon_monoxide_in_tonnes_CO) as "Emission of CO in Tonnes",
AVG(ammonia_in_tonnes_NH3) as "Emission of NH3 in Tonnes"
FROM emissions
-- WHERE AVG(AVG(nitrogen_oxide_in_tonnes_NOx),AVG(sulphur_dioxide_in_tonnes_SO2),AVG(carbon_monoxide_in_tonnes_CO),AVG(ammonia_in_tonnes_NH3))
GROUP BY iso_Code
LIMIT 0, 1000
: Running...
[20, 18:50:24] SELECT iso_code as "Country Code", 
AVG(nitrogen_oxide_in_tonnes_NOx) as "Emission of NOx in Tonnes",
AVG(sulphur_dioxide_in_tonnes_SO2) as "Emission of SO2 in Tonnes",
AVG(carbon_monoxide_in_tonnes_CO) as "Emission of CO in Tonnes",
AVG(ammonia_in_tonnes_NH3) as "Emission of NH3 in Tonnes"
FROM emissions
-- WHERE AVG(AVG(nitrogen_oxide_in_tonnes_NOx),AVG(sulphur_dioxide_in_tonnes_SO2),AVG(carbon_monoxide_in_tonnes_CO),AVG(ammonia_in_tonnes_NH3))
GROUP BY iso_Code
LIMIT 0, 1000
: Fetching...
[20, 18:50:24] SELECT iso_code as "Country Code", 
AVG(nitrogen_oxide_in_tonnes_NOx) as "Emission of NOx in Tonnes",
AVG(sulphur_dioxide_in_tonnes_SO2) as "Emission of SO2 in Tonnes",
AVG(carbon_monoxide_in_tonnes_CO) as "Emission of CO in Tonnes",
AVG(ammonia_in_tonnes_NH3) as "Emission of NH3 in Tonnes"
FROM emissions
-- WHERE AVG(AVG(nitrogen_oxide_in_tonnes_NOx),AVG(sulphur_dioxide_in_tonnes_SO2),AVG(carbon_monoxide_in_tonnes_CO),AVG(ammonia_in_tonnes_NH3))
GROUP BY iso_Code
LIMIT 0, 1000
: 198 row(s) returned
[21, 18:52:13] SELECT iso_code as "Country Code", 
AVG(AVG(nitrogen_oxide_in_tonnes_NOx)) as "Emission of NOx in Tonnes",
AVG(AVG(sulphur_dioxide_in_tonnes_SO2)) as "Emission of SO2 in Tonnes",
AVG(AVG(carbon_monoxide_in_tonnes_CO)) as "Emission of CO in Tonnes",
AVG(AVG(ammonia_in_tonnes_NH3)) as "Emission of NH3 in Tonnes"
FROM emissions
-- WHERE AVG(AVG(nitrogen_oxide_in_tonnes_NOx),AVG(sulphur_dioxide_in_tonnes_SO2),AVG(carbon_monoxide_in_tonnes_CO),AVG(ammonia_in_tonnes_NH3))
GROUP BY iso_Code
LIMIT 0, 1000
: Running...
[21, 18:52:13] SELECT iso_code as "Country Code", 
AVG(AVG(nitrogen_oxide_in_tonnes_NOx)) as "Emission of NOx in Tonnes",
AVG(AVG(sulphur_dioxide_in_tonnes_SO2)) as "Emission of SO2 in Tonnes",
AVG(AVG(carbon_monoxide_in_tonnes_CO)) as "Emission of CO in Tonnes",
AVG(AVG(ammonia_in_tonnes_NH3)) as "Emission of NH3 in Tonnes"
FROM emissions
-- WHERE AVG(AVG(nitrogen_oxide_in_tonnes_NOx),AVG(sulphur_dioxide_in_tonnes_SO2),AVG(carbon_monoxide_in_tonnes_CO),AVG(ammonia_in_tonnes_NH3))
GROUP BY iso_Code
LIMIT 0, 1000
: Error Code: 1111. Invalid use of group function
[22, 18:52:18] SELECT iso_code as "Country Code", 
AVG(AVG(nitrogen_oxide_in_tonnes_NOx)) as "Emission of NOx in Tonnes",
AVG(AVG(sulphur_dioxide_in_tonnes_SO2)) as "Emission of SO2 in Tonnes",
AVG(AVG(carbon_monoxide_in_tonnes_CO)) as "Emission of CO in Tonnes",
AVG(AVG(ammonia_in_tonnes_NH3)) as "Emission of NH3 in Tonnes"
FROM emissions
-- WHERE AVG(AVG(nitrogen_oxide_in_tonnes_NOx),AVG(sulphur_dioxide_in_tonnes_SO2),AVG(carbon_monoxide_in_tonnes_CO),AVG(ammonia_in_tonnes_NH3))
LIMIT 0, 1000
: Running...
[22, 18:52:18] SELECT iso_code as "Country Code", 
AVG(AVG(nitrogen_oxide_in_tonnes_NOx)) as "Emission of NOx in Tonnes",
AVG(AVG(sulphur_dioxide_in_tonnes_SO2)) as "Emission of SO2 in Tonnes",
AVG(AVG(carbon_monoxide_in_tonnes_CO)) as "Emission of CO in Tonnes",
AVG(AVG(ammonia_in_tonnes_NH3)) as "Emission of NH3 in Tonnes"
FROM emissions
-- WHERE AVG(AVG(nitrogen_oxide_in_tonnes_NOx),AVG(sulphur_dioxide_in_tonnes_SO2),AVG(carbon_monoxide_in_tonnes_CO),AVG(ammonia_in_tonnes_NH3))
LIMIT 0, 1000
: Error Code: 1111. Invalid use of group function
[23, 18:52:24] SELECT iso_code as "Country Code", 
AVG(nitrogen_oxide_in_tonnes_NOx) as "Emission of NOx in Tonnes",
AVG(sulphur_dioxide_in_tonnes_SO2) as "Emission of SO2 in Tonnes",
AVG(carbon_monoxide_in_tonnes_CO) as "Emission of CO in Tonnes",
AVG(ammonia_in_tonnes_NH3) as "Emission of NH3 in Tonnes"
FROM emissions
-- WHERE AVG(AVG(nitrogen_oxide_in_tonnes_NOx),AVG(sulphur_dioxide_in_tonnes_SO2),AVG(carbon_monoxide_in_tonnes_CO),AVG(ammonia_in_tonnes_NH3))
GROUP BY iso_Code
LIMIT 0, 1000
: Running...
[23, 18:52:24] SELECT iso_code as "Country Code", 
AVG(nitrogen_oxide_in_tonnes_NOx) as "Emission of NOx in Tonnes",
AVG(sulphur_dioxide_in_tonnes_SO2) as "Emission of SO2 in Tonnes",
AVG(carbon_monoxide_in_tonnes_CO) as "Emission of CO in Tonnes",
AVG(ammonia_in_tonnes_NH3) as "Emission of NH3 in Tonnes"
FROM emissions
-- WHERE AVG(AVG(nitrogen_oxide_in_tonnes_NOx),AVG(sulphur_dioxide_in_tonnes_SO2),AVG(carbon_monoxide_in_tonnes_CO),AVG(ammonia_in_tonnes_NH3))
GROUP BY iso_Code
LIMIT 0, 1000
: Fetching...
[23, 18:52:24] SELECT iso_code as "Country Code", 
AVG(nitrogen_oxide_in_tonnes_NOx) as "Emission of NOx in Tonnes",
AVG(sulphur_dioxide_in_tonnes_SO2) as "Emission of SO2 in Tonnes",
AVG(carbon_monoxide_in_tonnes_CO) as "Emission of CO in Tonnes",
AVG(ammonia_in_tonnes_NH3) as "Emission of NH3 in Tonnes"
FROM emissions
-- WHERE AVG(AVG(nitrogen_oxide_in_tonnes_NOx),AVG(sulphur_dioxide_in_tonnes_SO2),AVG(carbon_monoxide_in_tonnes_CO),AVG(ammonia_in_tonnes_NH3))
GROUP BY iso_Code
LIMIT 0, 1000
: 198 row(s) returned
[24, 18:55:02] CREATE VIEW Average Emission AS
SELECT iso_code as "Country Code", 
AVG(nitrogen_oxide_in_tonnes_NOx) as "Emission of NOx in Tonnes",
AVG(sulphur_dioxide_in_tonnes_SO2) as "Emission of SO2 in Tonnes",
AVG(carbon_monoxide_in_tonnes_CO) as "Emission of CO in Tonnes",
AVG(ammonia_in_tonnes_NH3) as "Emission of NH3 in Tonnes"
FROM emissions
-- WHERE AVG(AVG(nitrogen_oxide_in_tonnes_NOx),AVG(sulphur_dioxide_in_tonnes_SO2),AVG(carbon_monoxide_in_tonnes_CO),AVG(ammonia_in_tonnes_NH3))
GROUP BY iso_Code: Running...
[24, 18:55:02] CREATE VIEW Average Emission AS
SELECT iso_code as "Country Code", 
AVG(nitrogen_oxide_in_tonnes_NOx) as "Emission of NOx in Tonnes",
AVG(sulphur_dioxide_in_tonnes_SO2) as "Emission of SO2 in Tonnes",
AVG(carbon_monoxide_in_tonnes_CO) as "Emission of CO in Tonnes",
AVG(ammonia_in_tonnes_NH3) as "Emission of NH3 in Tonnes"
FROM emissions
-- WHERE AVG(AVG(nitrogen_oxide_in_tonnes_NOx),AVG(sulphur_dioxide_in_tonnes_SO2),AVG(carbon_monoxide_in_tonnes_CO),AVG(ammonia_in_tonnes_NH3))
GROUP BY iso_Code: Error Code: 1064. You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'Emission AS
SELECT iso_code as "Country Code", 
AVG(nitrogen_oxide_in_tonnes_NOx' at line 1
[25, 18:56:41] CREATE VIEW Average_Emission AS
SELECT iso_code as "Country Code", 
AVG(nitrogen_oxide_in_tonnes_NOx) as "Emission of NOx in Tonnes",
AVG(sulphur_dioxide_in_tonnes_SO2) as "Emission of SO2 in Tonnes",
AVG(carbon_monoxide_in_tonnes_CO) as "Emission of CO in Tonnes",
AVG(ammonia_in_tonnes_NH3) as "Emission of NH3 in Tonnes"
FROM emissions
-- WHERE AVG(AVG(nitrogen_oxide_in_tonnes_NOx),AVG(sulphur_dioxide_in_tonnes_SO2),AVG(carbon_monoxide_in_tonnes_CO),AVG(ammonia_in_tonnes_NH3))
GROUP BY iso_Code: Running...
[25, 18:56:42] CREATE VIEW Average_Emission AS
SELECT iso_code as "Country Code", 
AVG(nitrogen_oxide_in_tonnes_NOx) as "Emission of NOx in Tonnes",
AVG(sulphur_dioxide_in_tonnes_SO2) as "Emission of SO2 in Tonnes",
AVG(carbon_monoxide_in_tonnes_CO) as "Emission of CO in Tonnes",
AVG(ammonia_in_tonnes_NH3) as "Emission of NH3 in Tonnes"
FROM emissions
-- WHERE AVG(AVG(nitrogen_oxide_in_tonnes_NOx),AVG(sulphur_dioxide_in_tonnes_SO2),AVG(carbon_monoxide_in_tonnes_CO),AVG(ammonia_in_tonnes_NH3))
GROUP BY iso_Code: 0 row(s) affected
[26, 18:57:02] SELECT *
FROM Average_Emission
LIMIT 0, 1000
: Running...
[26, 18:57:02] SELECT *
FROM Average_Emission
LIMIT 0, 1000
: Fetching...
[26, 18:57:02] SELECT *
FROM Average_Emission
LIMIT 0, 1000
: 198 row(s) returned
[27, 18:58:22] ALTER TABLE Average_Emission RENAME COLUMN Emission of NOx in Tonnes TO Emission_of_NOx_in_Tonnes: Running...
[27, 18:58:22] ALTER TABLE Average_Emission RENAME COLUMN Emission of NOx in Tonnes TO Emission_of_NOx_in_Tonnes: Error Code: 1064. You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'of NOx in Tonnes TO Emission_of_NOx_in_Tonnes' at line 1
[28, 18:58:39] ALTER TABLE Average_Emission RENAME COLUMN "Emission of NOx in Tonnes" TO Emission_of_NOx_in_Tonnes: Running...
[28, 18:58:39] ALTER TABLE Average_Emission RENAME COLUMN "Emission of NOx in Tonnes" TO Emission_of_NOx_in_Tonnes: Error Code: 1064. You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '"Emission of NOx in Tonnes" TO Emission_of_NOx_in_Tonnes' at line 1
[29, 18:59:30] DROP VIEW IF EXISTS Average_Emission: Running...
[29, 18:59:30] DROP VIEW IF EXISTS Average_Emission: 0 row(s) affected
[30, 18:59:30] CREATE VIEW Average_Emission AS
SELECT iso_code as "Country Code", 
AVG(nitrogen_oxide_in_tonnes_NOx) as "Emission_of_NOx_in_Tonnes",
AVG(sulphur_dioxide_in_tonnes_SO2) as "Emission_of_SO2_in_Tonnes",
AVG(carbon_monoxide_in_tonnes_CO) as "Emission_of_CO_in_Tonnes",
AVG(ammonia_in_tonnes_NH3) as "Emission_of_NH3_in_Tonnes"
FROM emissions
-- WHERE AVG(AVG(nitrogen_oxide_in_tonnes_NOx),AVG(sulphur_dioxide_in_tonnes_SO2),AVG(carbon_monoxide_in_tonnes_CO),AVG(ammonia_in_tonnes_NH3))
GROUP BY iso_Code: Running...
[30, 18:59:30] CREATE VIEW Average_Emission AS
SELECT iso_code as "Country Code", 
AVG(nitrogen_oxide_in_tonnes_NOx) as "Emission_of_NOx_in_Tonnes",
AVG(sulphur_dioxide_in_tonnes_SO2) as "Emission_of_SO2_in_Tonnes",
AVG(carbon_monoxide_in_tonnes_CO) as "Emission_of_CO_in_Tonnes",
AVG(ammonia_in_tonnes_NH3) as "Emission_of_NH3_in_Tonnes"
FROM emissions
-- WHERE AVG(AVG(nitrogen_oxide_in_tonnes_NOx),AVG(sulphur_dioxide_in_tonnes_SO2),AVG(carbon_monoxide_in_tonnes_CO),AVG(ammonia_in_tonnes_NH3))
GROUP BY iso_Code: 0 row(s) affected
[31, 18:59:43] SELECT * 
FROM Average_Emission
LIMIT 0, 1000
: Running...
[31, 18:59:43] SELECT * 
FROM Average_Emission
LIMIT 0, 1000
: Fetching...
[31, 18:59:43] SELECT * 
FROM Average_Emission
LIMIT 0, 1000
: 198 row(s) returned
[32, 19:00:05] SELECT AVG(Emission_of_NOx_in_Tonnes) as "AVG"
FROM Average_Emission
LIMIT 0, 1000
: Running...
[32, 19:00:05] SELECT AVG(Emission_of_NOx_in_Tonnes) as "AVG"
FROM Average_Emission
LIMIT 0, 1000
: Fetching...
[32, 19:00:05] SELECT AVG(Emission_of_NOx_in_Tonnes) as "AVG"
FROM Average_Emission
LIMIT 0, 1000
: 1 row(s) returned
[33, 19:00:49] SELECT *
FROM Average_Emission
LIMIT 0, 1000
: Running...
[33, 19:00:49] SELECT *
FROM Average_Emission
LIMIT 0, 1000
: Fetching...
[33, 19:00:49] SELECT *
FROM Average_Emission
LIMIT 0, 1000
: 198 row(s) returned
[34, 19:01:56] SELECT 
AVG(Emission_of_NOx_in_Tonnes) as "Average emission NOx Worldwide", 
AVG(Emission_of_SO2_in_Tonnes) as "Average emission SO2x Worldwide", 
AVG(Emission_of_CO_in_Tonnes) as "Average emission NOx Worldwide", 
AVG(Emission_of_NH3_in_Tonnes) as "Average emission NH3x Worldwide" 
FROM Average_Emission
LIMIT 0, 1000
: Running...
[34, 19:01:56] SELECT 
AVG(Emission_of_NOx_in_Tonnes) as "Average emission NOx Worldwide", 
AVG(Emission_of_SO2_in_Tonnes) as "Average emission SO2x Worldwide", 
AVG(Emission_of_CO_in_Tonnes) as "Average emission NOx Worldwide", 
AVG(Emission_of_NH3_in_Tonnes) as "Average emission NH3x Worldwide" 
FROM Average_Emission
LIMIT 0, 1000
: Fetching...
[34, 19:01:56] SELECT 
AVG(Emission_of_NOx_in_Tonnes) as "Average emission NOx Worldwide", 
AVG(Emission_of_SO2_in_Tonnes) as "Average emission SO2x Worldwide", 
AVG(Emission_of_CO_in_Tonnes) as "Average emission NOx Worldwide", 
AVG(Emission_of_NH3_in_Tonnes) as "Average emission NH3x Worldwide" 
FROM Average_Emission
LIMIT 0, 1000
: 1 row(s) returned
[35, 19:02:12] SELECT 
"Worldwide",
AVG(Emission_of_NOx_in_Tonnes) as "Average emission NOx Worldwide", 
AVG(Emission_of_SO2_in_Tonnes) as "Average emission SO2x Worldwide", 
AVG(Emission_of_CO_in_Tonnes) as "Average emission NOx Worldwide", 
AVG(Emission_of_NH3_in_Tonnes) as "Average emission NH3x Worldwide" 
FROM Average_Emission
LIMIT 0, 1000
: Running...
[35, 19:02:12] SELECT 
"Worldwide",
AVG(Emission_of_NOx_in_Tonnes) as "Average emission NOx Worldwide", 
AVG(Emission_of_SO2_in_Tonnes) as "Average emission SO2x Worldwide", 
AVG(Emission_of_CO_in_Tonnes) as "Average emission NOx Worldwide", 
AVG(Emission_of_NH3_in_Tonnes) as "Average emission NH3x Worldwide" 
FROM Average_Emission
LIMIT 0, 1000
: Fetching...
[35, 19:02:12] SELECT 
"Worldwide",
AVG(Emission_of_NOx_in_Tonnes) as "Average emission NOx Worldwide", 
AVG(Emission_of_SO2_in_Tonnes) as "Average emission SO2x Worldwide", 
AVG(Emission_of_CO_in_Tonnes) as "Average emission NOx Worldwide", 
AVG(Emission_of_NH3_in_Tonnes) as "Average emission NH3x Worldwide" 
FROM Average_Emission
LIMIT 0, 1000
: 1 row(s) returned
[36, 19:02:28] SELECT 
"Worldwide",
AVG(Emission_of_NOx_in_Tonnes) as "Average emission NOx", 
AVG(Emission_of_SO2_in_Tonnes) as "Average emission SO2x", 
AVG(Emission_of_CO_in_Tonnes) as "Average emission NOx", 
AVG(Emission_of_NH3_in_Tonnes) as "Average emission NH3x" 
FROM Average_Emission
LIMIT 0, 1000
: Running...
[36, 19:02:28] SELECT 
"Worldwide",
AVG(Emission_of_NOx_in_Tonnes) as "Average emission NOx", 
AVG(Emission_of_SO2_in_Tonnes) as "Average emission SO2x", 
AVG(Emission_of_CO_in_Tonnes) as "Average emission NOx", 
AVG(Emission_of_NH3_in_Tonnes) as "Average emission NH3x" 
FROM Average_Emission
LIMIT 0, 1000
: Fetching...
[36, 19:02:28] SELECT 
"Worldwide",
AVG(Emission_of_NOx_in_Tonnes) as "Average emission NOx", 
AVG(Emission_of_SO2_in_Tonnes) as "Average emission SO2x", 
AVG(Emission_of_CO_in_Tonnes) as "Average emission NOx", 
AVG(Emission_of_NH3_in_Tonnes) as "Average emission NH3x" 
FROM Average_Emission
LIMIT 0, 1000
: 1 row(s) returned
[37, 19:03:10] SELECT 
"Worldwide",
ROUND(AVG(Emission_of_NOx_in_Tonnes), 3) as "Average emission NOx", 
ROUND(AVG(Emission_of_SO2_in_Tonnes), 3) as "Average emission SO2x", 
ROUND(AVG(Emission_of_CO_in_Tonnes), 3) as "Average emission NOx", 
ROUND(AVG(Emission_of_NH3_in_Tonnes), 3) as "Average emission NH3x" 
FROM Average_Emission
LIMIT 0, 1000
: Running...
[37, 19:03:10] SELECT 
"Worldwide",
ROUND(AVG(Emission_of_NOx_in_Tonnes), 3) as "Average emission NOx", 
ROUND(AVG(Emission_of_SO2_in_Tonnes), 3) as "Average emission SO2x", 
ROUND(AVG(Emission_of_CO_in_Tonnes), 3) as "Average emission NOx", 
ROUND(AVG(Emission_of_NH3_in_Tonnes), 3) as "Average emission NH3x" 
FROM Average_Emission
LIMIT 0, 1000
: Fetching...
[37, 19:03:10] SELECT 
"Worldwide",
ROUND(AVG(Emission_of_NOx_in_Tonnes), 3) as "Average emission NOx", 
ROUND(AVG(Emission_of_SO2_in_Tonnes), 3) as "Average emission SO2x", 
ROUND(AVG(Emission_of_CO_in_Tonnes), 3) as "Average emission NOx", 
ROUND(AVG(Emission_of_NH3_in_Tonnes), 3) as "Average emission NH3x" 
FROM Average_Emission
LIMIT 0, 1000
: 1 row(s) returned
[38, 19:05:39] RENAME TABLE Average_Emission 
TO Worldwide_Emission: Running...
[38, 19:05:39] RENAME TABLE Average_Emission 
TO Worldwide_Emission: 0 row(s) affected
[39, 19:06:05] SELECT *
FROM Worldwide_Emission
LIMIT 0, 1000
: Running...
[39, 19:06:05] SELECT *
FROM Worldwide_Emission
LIMIT 0, 1000
: Fetching...
[39, 19:06:05] SELECT *
FROM Worldwide_Emission
LIMIT 0, 1000
: 198 row(s) returned
[40, 19:06:32] DROP VIEW IF EXISTS Average_Emission: Running...
[40, 19:06:32] DROP VIEW IF EXISTS Average_Emission: 0 row(s) affected, 1 warning(s):
1051 Unknown table 'cs306-project.average_emission'
[41, 19:08:03] SELECT *
FROM Average_Emission
LIMIT 0, 1000
: Running...
[41, 19:08:03] SELECT *
FROM Average_Emission
LIMIT 0, 1000
: Error Code: 1146. Table 'cs306-project.average_emission' doesn't exist
[42, 19:08:07] DROP VIEW IF EXISTS Average_Emission: Running...
[42, 19:08:07] DROP VIEW IF EXISTS Average_Emission: 0 row(s) affected, 1 warning(s):
1051 Unknown table 'cs306-project.average_emission'
[43, 19:08:07] CREATE VIEW Average_Emission AS
SELECT iso_code as "Country Code", 
AVG(nitrogen_oxide_in_tonnes_NOx) as "Emission_of_NOx_in_Tonnes",
AVG(sulphur_dioxide_in_tonnes_SO2) as "Emission_of_SO2_in_Tonnes",
AVG(carbon_monoxide_in_tonnes_CO) as "Emission_of_CO_in_Tonnes",
AVG(ammonia_in_tonnes_NH3) as "Emission_of_NH3_in_Tonnes"
FROM emissions
-- WHERE AVG(AVG(nitrogen_oxide_in_tonnes_NOx),AVG(sulphur_dioxide_in_tonnes_SO2),AVG(carbon_monoxide_in_tonnes_CO),AVG(ammonia_in_tonnes_NH3))
GROUP BY iso_Code: Running...
[43, 19:08:07] CREATE VIEW Average_Emission AS
SELECT iso_code as "Country Code", 
AVG(nitrogen_oxide_in_tonnes_NOx) as "Emission_of_NOx_in_Tonnes",
AVG(sulphur_dioxide_in_tonnes_SO2) as "Emission_of_SO2_in_Tonnes",
AVG(carbon_monoxide_in_tonnes_CO) as "Emission_of_CO_in_Tonnes",
AVG(ammonia_in_tonnes_NH3) as "Emission_of_NH3_in_Tonnes"
FROM emissions
-- WHERE AVG(AVG(nitrogen_oxide_in_tonnes_NOx),AVG(sulphur_dioxide_in_tonnes_SO2),AVG(carbon_monoxide_in_tonnes_CO),AVG(ammonia_in_tonnes_NH3))
GROUP BY iso_Code: 0 row(s) affected
[44, 19:08:10] SELECT *
FROM Average_Emission
LIMIT 0, 1000
: Running...
[44, 19:08:10] SELECT *
FROM Average_Emission
LIMIT 0, 1000
: Fetching...
[44, 19:08:10] SELECT *
FROM Average_Emission
LIMIT 0, 1000
: 198 row(s) returned
[45, 19:08:29] CREATE VIEW Worldwide_Emissions AS 
SELECT 
		"Worldwide",
		AVG(Emission_of_NOx_in_Tonnes) as "Average emission NOx", 
		AVG(Emission_of_SO2_in_Tonnes) as "Average emission SO2x", 
		AVG(Emission_of_CO_in_Tonnes) as "Average emission NOx", 
		AVG(Emission_of_NH3_in_Tonnes) as "Average emission NH3x" 
		FROM Average_Emission: Running...
[45, 19:08:29] CREATE VIEW Worldwide_Emissions AS 
SELECT 
		"Worldwide",
		AVG(Emission_of_NOx_in_Tonnes) as "Average emission NOx", 
		AVG(Emission_of_SO2_in_Tonnes) as "Average emission SO2x", 
		AVG(Emission_of_CO_in_Tonnes) as "Average emission NOx", 
		AVG(Emission_of_NH3_in_Tonnes) as "Average emission NH3x" 
		FROM Average_Emission: Error Code: 1060. Duplicate column name 'Average emission NOx'
[46, 19:08:45] CREATE VIEW Worldwide_Emissions AS 
SELECT 
		"Worldwide",
		AVG(Emission_of_NOx_in_Tonnes) as "Average emission NOx", 
		AVG(Emission_of_SO2_in_Tonnes) as "Average emission SO2x", 
		AVG(Emission_of_CO_in_Tonnes) as "Average emission CO", 
		AVG(Emission_of_NH3_in_Tonnes) as "Average emission NH3x" 
		FROM Average_Emission: Running...
[46, 19:08:45] CREATE VIEW Worldwide_Emissions AS 
SELECT 
		"Worldwide",
		AVG(Emission_of_NOx_in_Tonnes) as "Average emission NOx", 
		AVG(Emission_of_SO2_in_Tonnes) as "Average emission SO2x", 
		AVG(Emission_of_CO_in_Tonnes) as "Average emission CO", 
		AVG(Emission_of_NH3_in_Tonnes) as "Average emission NH3x" 
		FROM Average_Emission: 0 row(s) affected
[47, 19:08:53] SELECT *
FROM Worldwide_Emissions
LIMIT 0, 1000
: Running...
[47, 19:08:53] SELECT *
FROM Worldwide_Emissions
LIMIT 0, 1000
: Fetching...
[47, 19:08:53] SELECT *
FROM Worldwide_Emissions
LIMIT 0, 1000
: 1 row(s) returned
[48, 19:10:42] SELECT *
FROM Worldwide_Emissions
LIMIT 0, 1000
: Running...
[48, 19:10:42] SELECT *
FROM Worldwide_Emissions
LIMIT 0, 1000
: Fetching...
[48, 19:10:42] SELECT *
FROM Worldwide_Emissions
LIMIT 0, 1000
: 1 row(s) returned
[49, 19:10:46] SELECT *
FROM Average_Emission
LIMIT 0, 1000
: Running...
[49, 19:10:46] SELECT *
FROM Average_Emission
LIMIT 0, 1000
: Fetching...
[49, 19:10:46] SELECT *
FROM Average_Emission
LIMIT 0, 1000
: 198 row(s) returned
[50, 19:11:40] RENAME TABLE Average_Emission
TO Average_Emission_by_Countries: Running...
[50, 19:11:40] RENAME TABLE Average_Emission
TO Average_Emission_by_Countries: 0 row(s) affected
[51, 19:12:15] SELECT * 
FROM Average_Emission_by_Countries
LIMIT 0, 1000
: Running...
[51, 19:12:15] SELECT * 
FROM Average_Emission_by_Countries
LIMIT 0, 1000
: Fetching...
[51, 19:12:15] SELECT * 
FROM Average_Emission_by_Countries
LIMIT 0, 1000
: 198 row(s) returned
[52, 19:12:36] SELECT *
FROM Worldwide_Emissions
LIMIT 0, 1000
: Running...
[52, 19:12:36] SELECT *
FROM Worldwide_Emissions
LIMIT 0, 1000
: Error Code: 1356. View 'cs306-project.worldwide_emissions' references invalid table(s) or column(s) or function(s) or definer/invoker of view lack rights to use them
[53, 19:12:50] SELECT *
FROM Worldwide_Emissions
LIMIT 0, 1000
: Running...
[53, 19:12:50] SELECT *
FROM Worldwide_Emissions
LIMIT 0, 1000
: Error Code: 1356. View 'cs306-project.worldwide_emissions' references invalid table(s) or column(s) or function(s) or definer/invoker of view lack rights to use them
[54, 19:13:59] DROP VIEW IF EXISTS Worldwide_Emissions: Running...
[54, 19:13:59] DROP VIEW IF EXISTS Worldwide_Emissions: 0 row(s) affected
[55, 19:13:59] CREATE VIEW Worldwide_Emissions AS 
SELECT 
		"Worldwide",
		AVG(Emission_of_NOx_in_Tonnes) as "Average emission NOx", 
		AVG(Emission_of_SO2_in_Tonnes) as "Average emission SO2x", 
		AVG(Emission_of_CO_in_Tonnes) as "Average emission CO", 
		AVG(Emission_of_NH3_in_Tonnes) as "Average emission NH3x" 
		FROM Average_Emission: Running...
[55, 19:13:59] CREATE VIEW Worldwide_Emissions AS 
SELECT 
		"Worldwide",
		AVG(Emission_of_NOx_in_Tonnes) as "Average emission NOx", 
		AVG(Emission_of_SO2_in_Tonnes) as "Average emission SO2x", 
		AVG(Emission_of_CO_in_Tonnes) as "Average emission CO", 
		AVG(Emission_of_NH3_in_Tonnes) as "Average emission NH3x" 
		FROM Average_Emission: Error Code: 1146. Table 'cs306-project.average_emission' doesn't exist
[56, 19:14:11] DROP VIEW IF EXISTS Worldwide_Emissions: Running...
[56, 19:14:11] DROP VIEW IF EXISTS Worldwide_Emissions: 0 row(s) affected, 1 warning(s):
1051 Unknown table 'cs306-project.worldwide_emissions'
[57, 19:14:11] CREATE VIEW Worldwide_Emissions AS 
SELECT 
		"Worldwide",
		AVG(Emission_of_NOx_in_Tonnes) as "Average emission NOx", 
		AVG(Emission_of_SO2_in_Tonnes) as "Average emission SO2x", 
		AVG(Emission_of_CO_in_Tonnes) as "Average emission CO", 
		AVG(Emission_of_NH3_in_Tonnes) as "Average emission NH3x" 
		FROM Average_Emission_by_Countries: Running...
[57, 19:14:11] CREATE VIEW Worldwide_Emissions AS 
SELECT 
		"Worldwide",
		AVG(Emission_of_NOx_in_Tonnes) as "Average emission NOx", 
		AVG(Emission_of_SO2_in_Tonnes) as "Average emission SO2x", 
		AVG(Emission_of_CO_in_Tonnes) as "Average emission CO", 
		AVG(Emission_of_NH3_in_Tonnes) as "Average emission NH3x" 
		FROM Average_Emission_by_Countries: 0 row(s) affected
[58, 19:14:23] SELECT *
FROM Worldwide_Emissions
LIMIT 0, 1000
: Running...
[58, 19:14:23] SELECT *
FROM Worldwide_Emissions
LIMIT 0, 1000
: Fetching...
[58, 19:14:23] SELECT *
FROM Worldwide_Emissions
LIMIT 0, 1000
: 1 row(s) returned
[59, 19:15:45] SELECT *
FROM Worldwide_Emissions
LIMIT 0, 1000
: Running...
[59, 19:15:45] SELECT *
FROM Worldwide_Emissions
LIMIT 0, 1000
: Fetching...
[59, 19:15:45] SELECT *
FROM Worldwide_Emissions
LIMIT 0, 1000
: 1 row(s) returned
[60, 19:17:09] DROP VIEW IF EXISTS Worldwide_Emissions: Running...
[60, 19:17:09] DROP VIEW IF EXISTS Worldwide_Emissions: 0 row(s) affected
[61, 19:17:09] CREATE VIEW Worldwide_Emissions AS 
SELECT 
		"Worldwide",
		AVG(Emission_of_NOx_in_Tonnes) as "Average_emission_NOx", 
		AVG(Emission_of_SO2_in_Tonnes) as "Average_emission_SO2x", 
		AVG(Emission_of_CO_in_Tonnes) as "Average_emission_CO", 
		AVG(Emission_of_NH3_in_Tonnes) as "Average_emission_NH3x" 
		FROM Average_Emission_by_Countries: Running...
[61, 19:17:09] CREATE VIEW Worldwide_Emissions AS 
SELECT 
		"Worldwide",
		AVG(Emission_of_NOx_in_Tonnes) as "Average_emission_NOx", 
		AVG(Emission_of_SO2_in_Tonnes) as "Average_emission_SO2x", 
		AVG(Emission_of_CO_in_Tonnes) as "Average_emission_CO", 
		AVG(Emission_of_NH3_in_Tonnes) as "Average_emission_NH3x" 
		FROM Average_Emission_by_Countries: 0 row(s) affected
[62, 19:17:11] DROP VIEW IF EXISTS Worldwide_Emissions: Running...
[62, 19:17:11] DROP VIEW IF EXISTS Worldwide_Emissions: 0 row(s) affected
[63, 19:17:11] CREATE VIEW Worldwide_Emissions AS 
SELECT 
		"Worldwide",
		AVG(Emission_of_NOx_in_Tonnes) as "Average_emission_NOx", 
		AVG(Emission_of_SO2_in_Tonnes) as "Average_emission_SO2x", 
		AVG(Emission_of_CO_in_Tonnes) as "Average_emission_CO", 
		AVG(Emission_of_NH3_in_Tonnes) as "Average_emission_NH3x" 
		FROM Average_Emission_by_Countries: Running...
[63, 19:17:11] CREATE VIEW Worldwide_Emissions AS 
SELECT 
		"Worldwide",
		AVG(Emission_of_NOx_in_Tonnes) as "Average_emission_NOx", 
		AVG(Emission_of_SO2_in_Tonnes) as "Average_emission_SO2x", 
		AVG(Emission_of_CO_in_Tonnes) as "Average_emission_CO", 
		AVG(Emission_of_NH3_in_Tonnes) as "Average_emission_NH3x" 
		FROM Average_Emission_by_Countries: 0 row(s) affected
[64, 19:36:58] SELECT iso_code
FROM Average_Emission_by_Countries AC , Worldwide_Emissions WW
WHERE AC.Emission_of_NOx_in_Tonnes > WW.Average_emission_NOx
LIMIT 0, 1000
: Running...
[64, 19:36:58] SELECT iso_code
FROM Average_Emission_by_Countries AC , Worldwide_Emissions WW
WHERE AC.Emission_of_NOx_in_Tonnes > WW.Average_emission_NOx
LIMIT 0, 1000
: Error Code: 1054. Unknown column 'iso_code' in 'field list'
[65, 19:37:11] SELECT AC.iso_code
FROM Average_Emission_by_Countries AC , Worldwide_Emissions WW
WHERE AC.Emission_of_NOx_in_Tonnes > WW.Average_emission_NOx
LIMIT 0, 1000
: Running...
[65, 19:37:11] SELECT AC.iso_code
FROM Average_Emission_by_Countries AC , Worldwide_Emissions WW
WHERE AC.Emission_of_NOx_in_Tonnes > WW.Average_emission_NOx
LIMIT 0, 1000
: Error Code: 1054. Unknown column 'AC.iso_code' in 'field list'
[66, 19:37:17] SELECT * 
FROM Average_Emission_by_Countries
LIMIT 0, 1000
: Running...
[66, 19:37:17] SELECT * 
FROM Average_Emission_by_Countries
LIMIT 0, 1000
: Fetching...
[66, 19:37:17] SELECT * 
FROM Average_Emission_by_Countries
LIMIT 0, 1000
: 198 row(s) returned
[67, 19:37:39] DROP VIEW IF EXISTS Average_Emission: Running...
[67, 19:37:39] DROP VIEW IF EXISTS Average_Emission: 0 row(s) affected, 1 warning(s):
1051 Unknown table 'cs306-project.average_emission'
[68, 19:37:39] CREATE VIEW Average_Emission AS
SELECT iso_code 
AVG(nitrogen_oxide_in_tonnes_NOx) as "Emission_of_NOx_in_Tonnes",
AVG(sulphur_dioxide_in_tonnes_SO2) as "Emission_of_SO2_in_Tonnes",
AVG(carbon_monoxide_in_tonnes_CO) as "Emission_of_CO_in_Tonnes",
AVG(ammonia_in_tonnes_NH3) as "Emission_of_NH3_in_Tonnes"
FROM emissions
-- WHERE AVG(AVG(nitrogen_oxide_in_tonnes_NOx),AVG(sulphur_dioxide_in_tonnes_SO2),AVG(carbon_monoxide_in_tonnes_CO),AVG(ammonia_in_tonnes_NH3))
GROUP BY iso_Code: Running...
[68, 19:37:39] CREATE VIEW Average_Emission AS
SELECT iso_code 
AVG(nitrogen_oxide_in_tonnes_NOx) as "Emission_of_NOx_in_Tonnes",
AVG(sulphur_dioxide_in_tonnes_SO2) as "Emission_of_SO2_in_Tonnes",
AVG(carbon_monoxide_in_tonnes_CO) as "Emission_of_CO_in_Tonnes",
AVG(ammonia_in_tonnes_NH3) as "Emission_of_NH3_in_Tonnes"
FROM emissions
-- WHERE AVG(AVG(nitrogen_oxide_in_tonnes_NOx),AVG(sulphur_dioxide_in_tonnes_SO2),AVG(carbon_monoxide_in_tonnes_CO),AVG(ammonia_in_tonnes_NH3))
GROUP BY iso_Code: Error Code: 1064. You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(nitrogen_oxide_in_tonnes_NOx) as "Emission_of_NOx_in_Tonnes",
AVG(sulphur_dioxi' at line 3
[69, 19:37:50] DROP VIEW IF EXISTS Average_Emission: Running...
[69, 19:37:50] DROP VIEW IF EXISTS Average_Emission: 0 row(s) affected, 1 warning(s):
1051 Unknown table 'cs306-project.average_emission'
[70, 19:37:50] CREATE VIEW Average_Emission AS
SELECT iso_code,
AVG(nitrogen_oxide_in_tonnes_NOx) as "Emission_of_NOx_in_Tonnes",
AVG(sulphur_dioxide_in_tonnes_SO2) as "Emission_of_SO2_in_Tonnes",
AVG(carbon_monoxide_in_tonnes_CO) as "Emission_of_CO_in_Tonnes",
AVG(ammonia_in_tonnes_NH3) as "Emission_of_NH3_in_Tonnes"
FROM emissions
-- WHERE AVG(AVG(nitrogen_oxide_in_tonnes_NOx),AVG(sulphur_dioxide_in_tonnes_SO2),AVG(carbon_monoxide_in_tonnes_CO),AVG(ammonia_in_tonnes_NH3))
GROUP BY iso_Code: Running...
[70, 19:37:50] CREATE VIEW Average_Emission AS
SELECT iso_code,
AVG(nitrogen_oxide_in_tonnes_NOx) as "Emission_of_NOx_in_Tonnes",
AVG(sulphur_dioxide_in_tonnes_SO2) as "Emission_of_SO2_in_Tonnes",
AVG(carbon_monoxide_in_tonnes_CO) as "Emission_of_CO_in_Tonnes",
AVG(ammonia_in_tonnes_NH3) as "Emission_of_NH3_in_Tonnes"
FROM emissions
-- WHERE AVG(AVG(nitrogen_oxide_in_tonnes_NOx),AVG(sulphur_dioxide_in_tonnes_SO2),AVG(carbon_monoxide_in_tonnes_CO),AVG(ammonia_in_tonnes_NH3))
GROUP BY iso_Code: 0 row(s) affected
[71, 19:38:13] RENAME TABLE Average_Emission
TO Average_Emission_by_Countries: Running...
[71, 19:38:13] RENAME TABLE Average_Emission
TO Average_Emission_by_Countries: Error Code: 1050. Table 'average_emission_by_countries' already exists
[72, 19:38:33] DROP VIEW IF EXISTS Average_Emission_by_Countries: Running...
[72, 19:38:33] DROP VIEW IF EXISTS Average_Emission_by_Countries: 0 row(s) affected
[73, 19:38:40] RENAME TABLE Average_Emission
TO Average_Emission_by_Countries: Running...
[73, 19:38:40] RENAME TABLE Average_Emission
TO Average_Emission_by_Countries: 0 row(s) affected
[74, 19:38:44] SELECT *
FROM Average_Emission_by_Countries
LIMIT 0, 1000
: Running...
[74, 19:38:44] SELECT *
FROM Average_Emission_by_Countries
LIMIT 0, 1000
: Fetching...
[74, 19:38:44] SELECT *
FROM Average_Emission_by_Countries
LIMIT 0, 1000
: 198 row(s) returned
[75, 19:38:53] SELECT AC.iso_code
FROM Average_Emission_by_Countries AC , Worldwide_Emissions WW
WHERE AC.Emission_of_NOx_in_Tonnes > WW.Average_emission_NOx
LIMIT 0, 1000
: Running...
[75, 19:38:53] SELECT AC.iso_code
FROM Average_Emission_by_Countries AC , Worldwide_Emissions WW
WHERE AC.Emission_of_NOx_in_Tonnes > WW.Average_emission_NOx
LIMIT 0, 1000
: Fetching...
[75, 19:38:53] SELECT AC.iso_code
FROM Average_Emission_by_Countries AC , Worldwide_Emissions WW
WHERE AC.Emission_of_NOx_in_Tonnes > WW.Average_emission_NOx
LIMIT 0, 1000
: 21 row(s) returned
[76, 19:39:15] SELECT COUNT(*)
FROM Average_Emission_by_Countries AC , Worldwide_Emissions WW
WHERE AC.Emission_of_NOx_in_Tonnes > WW.Average_emission_NOx
LIMIT 0, 1000
: Running...
[76, 19:39:15] SELECT COUNT(*)
FROM Average_Emission_by_Countries AC , Worldwide_Emissions WW
WHERE AC.Emission_of_NOx_in_Tonnes > WW.Average_emission_NOx
LIMIT 0, 1000
: Fetching...
[76, 19:39:15] SELECT COUNT(*)
FROM Average_Emission_by_Countries AC , Worldwide_Emissions WW
WHERE AC.Emission_of_NOx_in_Tonnes > WW.Average_emission_NOx
LIMIT 0, 1000
: 1 row(s) returned
[77, 19:44:07] SELECT iso_code -- has 21 countries
FROM Average_Emission_by_Countries AC , Worldwide_Emissions WW
WHERE AC.Emission_of_SO2_in_Tonnes > WW.Emission_of_SO2_in_Tonnes
LIMIT 0, 1000
: Running...
[77, 19:44:07] SELECT iso_code -- has 21 countries
FROM Average_Emission_by_Countries AC , Worldwide_Emissions WW
WHERE AC.Emission_of_SO2_in_Tonnes > WW.Emission_of_SO2_in_Tonnes
LIMIT 0, 1000
: Error Code: 1054. Unknown column 'WW.Emission_of_SO2_in_Tonnes' in 'where clause'
[1, 13:08:35] SELECT iso_code -- has 21 countries
FROM Average_Emission_by_Countries AC , Worldwide_Emissions WW
WHERE AC.Emission_of_SO2_in_Tonnes > WW.Emission_of_SO2_in_Tonnes
LIMIT 0, 1000
: Running...
[1, 13:08:35] SELECT iso_code -- has 21 countries
FROM Average_Emission_by_Countries AC , Worldwide_Emissions WW
WHERE AC.Emission_of_SO2_in_Tonnes > WW.Emission_of_SO2_in_Tonnes
LIMIT 0, 1000
: Error Code: 1054. Unknown column 'WW.Emission_of_SO2_in_Tonnes' in 'where clause'
[2, 13:08:48] SELECT *
FROM Worldwide_Emissions
LIMIT 0, 1000
: Running...
[2, 13:08:48] SELECT *
FROM Worldwide_Emissions
LIMIT 0, 1000
: Fetching...
[2, 13:08:48] SELECT *
FROM Worldwide_Emissions
LIMIT 0, 1000
: 1 row(s) returned
[3, 13:09:59] ALTER TABLE Worldwide_Emissions 
RENAME COLUMN Average_emission_SO2x TO Average_emission_SO2: Running...
[3, 13:09:59] ALTER TABLE Worldwide_Emissions 
RENAME COLUMN Average_emission_SO2x TO Average_emission_SO2: Error Code: 1347. 'cs306-project.worldwide_emissions' is not BASE TABLE
[4, 13:10:15] DROP VIEW IF EXISTS Worldwide_Emissions: Running...
[4, 13:10:15] DROP VIEW IF EXISTS Worldwide_Emissions: 0 row(s) affected
[5, 13:10:15] CREATE VIEW Worldwide_Emissions AS 
SELECT 
		"Worldwide",
		AVG(Emission_of_NOx_in_Tonnes) as "Average_emission_NO", 
		AVG(Emission_of_SO2_in_Tonnes) as "Emission_of_SO2_in_Tonnes", 
		AVG(Emission_of_CO_in_Tonnes) as "Average_emission_CO", 
		AVG(Emission_of_NH3_in_Tonnes) as "Average_emission_NH3" 
		FROM Average_Emission_by_Countries: Running...
[5, 13:10:15] CREATE VIEW Worldwide_Emissions AS 
SELECT 
		"Worldwide",
		AVG(Emission_of_NOx_in_Tonnes) as "Average_emission_NO", 
		AVG(Emission_of_SO2_in_Tonnes) as "Emission_of_SO2_in_Tonnes", 
		AVG(Emission_of_CO_in_Tonnes) as "Average_emission_CO", 
		AVG(Emission_of_NH3_in_Tonnes) as "Average_emission_NH3" 
		FROM Average_Emission_by_Countries: 0 row(s) affected
[6, 13:10:19] SELECT *
FROM Worldwide_Emissions
LIMIT 0, 1000
: Running...
[6, 13:10:19] SELECT *
FROM Worldwide_Emissions
LIMIT 0, 1000
: Fetching...
[6, 13:10:19] SELECT *
FROM Worldwide_Emissions
LIMIT 0, 1000
: 1 row(s) returned
[7, 13:10:37] DROP VIEW IF EXISTS Worldwide_Emissions: Running...
[7, 13:10:37] DROP VIEW IF EXISTS Worldwide_Emissions: 0 row(s) affected
[8, 13:10:37] CREATE VIEW Worldwide_Emissions AS 
SELECT 
		"Worldwide",
		AVG(Emission_of_NOx_in_Tonnes) as "Average_emission_NO_in_Tonnes", 
		AVG(Emission_of_SO2_in_Tonnes) as "Emission_of_SO2_in_Tonnes", 
		AVG(Emission_of_CO_in_Tonnes) as "Average_emission_CO_in_Tonnes", 
		AVG(Emission_of_NH3_in_Tonnes) as "Average_emission_NH3_in_Tonnes" 
		FROM Average_Emission_by_Countries: Running...
[8, 13:10:37] CREATE VIEW Worldwide_Emissions AS 
SELECT 
		"Worldwide",
		AVG(Emission_of_NOx_in_Tonnes) as "Average_emission_NO_in_Tonnes", 
		AVG(Emission_of_SO2_in_Tonnes) as "Emission_of_SO2_in_Tonnes", 
		AVG(Emission_of_CO_in_Tonnes) as "Average_emission_CO_in_Tonnes", 
		AVG(Emission_of_NH3_in_Tonnes) as "Average_emission_NH3_in_Tonnes" 
		FROM Average_Emission_by_Countries: 0 row(s) affected
[9, 13:10:40] SELECT *
FROM Worldwide_Emissions
LIMIT 0, 1000
: Running...
[9, 13:10:40] SELECT *
FROM Worldwide_Emissions
LIMIT 0, 1000
: Fetching...
[9, 13:10:40] SELECT *
FROM Worldwide_Emissions
LIMIT 0, 1000
: 1 row(s) returned
[10, 13:10:56] DROP VIEW IF EXISTS Worldwide_Emissions: Running...
[10, 13:10:56] DROP VIEW IF EXISTS Worldwide_Emissions: 0 row(s) affected
[11, 13:10:56] CREATE VIEW Worldwide_Emissions AS 
SELECT 
		"Worldwide",
		AVG(Emission_of_NOx_in_Tonnes) as "Average_emission_NOx_in_Tonnes", 
		AVG(Emission_of_SO2_in_Tonnes) as "Emission_of_SO2_in_Tonnes", 
		AVG(Emission_of_CO_in_Tonnes) as "Average_emission_CO_in_Tonnes", 
		AVG(Emission_of_NH3_in_Tonnes) as "Average_emission_NH3_in_Tonnes" 
		FROM Average_Emission_by_Countries: Running...
[11, 13:10:56] CREATE VIEW Worldwide_Emissions AS 
SELECT 
		"Worldwide",
		AVG(Emission_of_NOx_in_Tonnes) as "Average_emission_NOx_in_Tonnes", 
		AVG(Emission_of_SO2_in_Tonnes) as "Emission_of_SO2_in_Tonnes", 
		AVG(Emission_of_CO_in_Tonnes) as "Average_emission_CO_in_Tonnes", 
		AVG(Emission_of_NH3_in_Tonnes) as "Average_emission_NH3_in_Tonnes" 
		FROM Average_Emission_by_Countries: 0 row(s) affected
[12, 13:11:05] SELECT *
FROM Worldwide_Emissions
LIMIT 0, 1000
: Running...
[12, 13:11:05] SELECT *
FROM Worldwide_Emissions
LIMIT 0, 1000
: Fetching...
[12, 13:11:05] SELECT *
FROM Worldwide_Emissions
LIMIT 0, 1000
: 1 row(s) returned
[13, 13:11:43] SELECT COUNT(*) -- has 21 countries
FROM Average_Emission_by_Countries AC , Worldwide_Emissions WW
WHERE AC.Emission_of_SO2_in_Tonnes > WW.Emission_of_SO2_in_Tonnes
LIMIT 0, 1000
: Running...
[13, 13:11:43] SELECT COUNT(*) -- has 21 countries
FROM Average_Emission_by_Countries AC , Worldwide_Emissions WW
WHERE AC.Emission_of_SO2_in_Tonnes > WW.Emission_of_SO2_in_Tonnes
LIMIT 0, 1000
: Fetching...
[13, 13:11:43] SELECT COUNT(*) -- has 21 countries
FROM Average_Emission_by_Countries AC , Worldwide_Emissions WW
WHERE AC.Emission_of_SO2_in_Tonnes > WW.Emission_of_SO2_in_Tonnes
LIMIT 0, 1000
: 1 row(s) returned
[14, 13:11:56] SELECT * 
FROM Average_Emission_by_Countries
LIMIT 0, 1000
: Running...
[14, 13:11:56] SELECT * 
FROM Average_Emission_by_Countries
LIMIT 0, 1000
: Fetching...
[14, 13:11:56] SELECT * 
FROM Average_Emission_by_Countries
LIMIT 0, 1000
: 198 row(s) returned
[15, 13:12:20] SELECT COUNT(*) -- has 21 countries
FROM Average_Emission_by_Countries AC , Worldwide_Emissions WW
WHERE AC.Emission_of_CO_in_Tonnes > WW.Average_emission_CO_in_Tonnes
LIMIT 0, 1000
: Running...
[15, 13:12:20] SELECT COUNT(*) -- has 21 countries
FROM Average_Emission_by_Countries AC , Worldwide_Emissions WW
WHERE AC.Emission_of_CO_in_Tonnes > WW.Average_emission_CO_in_Tonnes
LIMIT 0, 1000
: Fetching...
[15, 13:12:20] SELECT COUNT(*) -- has 21 countries
FROM Average_Emission_by_Countries AC , Worldwide_Emissions WW
WHERE AC.Emission_of_CO_in_Tonnes > WW.Average_emission_CO_in_Tonnes
LIMIT 0, 1000
: 1 row(s) returned
[16, 13:12:33] SELECT COUNT(*) -- has 21 countries
FROM Average_Emission_by_Countries AC , Worldwide_Emissions WW
WHERE AC.Emission_of_NH3_in_Tonnes > WW.Average_emission_NH3_in_Tonnes
LIMIT 0, 1000
: Running...
[16, 13:12:33] SELECT COUNT(*) -- has 21 countries
FROM Average_Emission_by_Countries AC , Worldwide_Emissions WW
WHERE AC.Emission_of_NH3_in_Tonnes > WW.Average_emission_NH3_in_Tonnes
LIMIT 0, 1000
: Fetching...
[16, 13:12:33] SELECT COUNT(*) -- has 21 countries
FROM Average_Emission_by_Countries AC , Worldwide_Emissions WW
WHERE AC.Emission_of_NH3_in_Tonnes > WW.Average_emission_NH3_in_Tonnes
LIMIT 0, 1000
: 1 row(s) returned
[17, 13:17:20] SELECT iso_code -- has 21 countries
	FROM Average_Emission_by_Countries AC , Worldwide_Emissions WW
	WHERE AC.Emission_of_NOx_in_Tonnes > WW.Average_emission_NOx_in_Tonnes
	UNION
	SELECT iso_code -- has 24 countries
	FROM Average_Emission_by_Countries AC , Worldwide_Emissions WW
	WHERE AC.Emission_of_SO2_in_Tonnes > WW.Emission_of_SO2_in_Tonnes
	UNION
	SELECT iso_code -- has 17 countries
	FROM Average_Emission_by_Countries AC , Worldwide_Emissions WW
	WHERE AC.Emission_of_CO_in_Tonnes > WW.Average_emission_CO_in_Tonnes
	UNION
	SELECT iso_code -- has 17 countries
	FROM Average_Emission_by_Countries AC , Worldwide_Emissions WW
	WHERE AC.Emission_of_NH3_in_Tonnes > WW.Average_emission_NH3_in_Tonnes: Running...
[17, 13:17:20] SELECT iso_code -- has 21 countries
	FROM Average_Emission_by_Countries AC , Worldwide_Emissions WW
	WHERE AC.Emission_of_NOx_in_Tonnes > WW.Average_emission_NOx_in_Tonnes
	UNION
	SELECT iso_code -- has 24 countries
	FROM Average_Emission_by_Countries AC , Worldwide_Emissions WW
	WHERE AC.Emission_of_SO2_in_Tonnes > WW.Emission_of_SO2_in_Tonnes
	UNION
	SELECT iso_code -- has 17 countries
	FROM Average_Emission_by_Countries AC , Worldwide_Emissions WW
	WHERE AC.Emission_of_CO_in_Tonnes > WW.Average_emission_CO_in_Tonnes
	UNION
	SELECT iso_code -- has 17 countries
	FROM Average_Emission_by_Countries AC , Worldwide_Emissions WW
	WHERE AC.Emission_of_NH3_in_Tonnes > WW.Average_emission_NH3_in_Tonnes: Fetching...
[17, 13:17:20] SELECT iso_code -- has 21 countries
	FROM Average_Emission_by_Countries AC , Worldwide_Emissions WW
	WHERE AC.Emission_of_NOx_in_Tonnes > WW.Average_emission_NOx_in_Tonnes
	UNION
	SELECT iso_code -- has 24 countries
	FROM Average_Emission_by_Countries AC , Worldwide_Emissions WW
	WHERE AC.Emission_of_SO2_in_Tonnes > WW.Emission_of_SO2_in_Tonnes
	UNION
	SELECT iso_code -- has 17 countries
	FROM Average_Emission_by_Countries AC , Worldwide_Emissions WW
	WHERE AC.Emission_of_CO_in_Tonnes > WW.Average_emission_CO_in_Tonnes
	UNION
	SELECT iso_code -- has 17 countries
	FROM Average_Emission_by_Countries AC , Worldwide_Emissions WW
	WHERE AC.Emission_of_NH3_in_Tonnes > WW.Average_emission_NH3_in_Tonnes: 32 row(s) returned
[18, 13:18:04] SELECT COUNT(*)
    FROM (
			SELECT iso_code -- has 21 countries
			FROM Average_Emission_by_Countries AC , Worldwide_Emissions WW
			WHERE AC.Emission_of_NOx_in_Tonnes > WW.Average_emission_NOx_in_Tonnes
			UNION
			SELECT iso_code -- has 24 countries
			FROM Average_Emission_by_Countries AC , Worldwide_Emissions WW
			WHERE AC.Emission_of_SO2_in_Tonnes > WW.Emission_of_SO2_in_Tonnes
			UNION
			SELECT iso_code -- has 17 countries
			FROM Average_Emission_by_Countries AC , Worldwide_Emissions WW
			WHERE AC.Emission_of_CO_in_Tonnes > WW.Average_emission_CO_in_Tonnes
			UNION
			SELECT iso_code -- has 17 countries
			FROM Average_Emission_by_Countries AC , Worldwide_Emissions WW
			WHERE AC.Emission_of_NH3_in_Tonnes > WW.Average_emission_NH3_in_Tonnes  )
LIMIT 0, 1000
: Running...
[18, 13:18:04] SELECT COUNT(*)
    FROM (
			SELECT iso_code -- has 21 countries
			FROM Average_Emission_by_Countries AC , Worldwide_Emissions WW
			WHERE AC.Emission_of_NOx_in_Tonnes > WW.Average_emission_NOx_in_Tonnes
			UNION
			SELECT iso_code -- has 24 countries
			FROM Average_Emission_by_Countries AC , Worldwide_Emissions WW
			WHERE AC.Emission_of_SO2_in_Tonnes > WW.Emission_of_SO2_in_Tonnes
			UNION
			SELECT iso_code -- has 17 countries
			FROM Average_Emission_by_Countries AC , Worldwide_Emissions WW
			WHERE AC.Emission_of_CO_in_Tonnes > WW.Average_emission_CO_in_Tonnes
			UNION
			SELECT iso_code -- has 17 countries
			FROM Average_Emission_by_Countries AC , Worldwide_Emissions WW
			WHERE AC.Emission_of_NH3_in_Tonnes > WW.Average_emission_NH3_in_Tonnes  )
LIMIT 0, 1000
: Error Code: 1248. Every derived table must have its own alias
[19, 13:18:25] DROP VIEW IF EXISTS countries_with_high_emission: Running...
[19, 13:18:25] DROP VIEW IF EXISTS countries_with_high_emission: 0 row(s) affected, 1 warning(s):
1051 Unknown table 'cs306-project.countries_with_high_emission'
[20, 13:18:25] CREATE VIEW countries_with_high_emission AS
SELECT iso_code -- has 21 countries
			FROM Average_Emission_by_Countries AC , Worldwide_Emissions WW
			WHERE AC.Emission_of_NOx_in_Tonnes > WW.Average_emission_NOx_in_Tonnes
			UNION
			SELECT iso_code -- has 24 countries
			FROM Average_Emission_by_Countries AC , Worldwide_Emissions WW
			WHERE AC.Emission_of_SO2_in_Tonnes > WW.Emission_of_SO2_in_Tonnes
			UNION
			SELECT iso_code -- has 17 countries
			FROM Average_Emission_by_Countries AC , Worldwide_Emissions WW
			WHERE AC.Emission_of_CO_in_Tonnes > WW.Average_emission_CO_in_Tonnes
			UNION
			SELECT iso_code -- has 17 countries
			FROM Average_Emission_by_Countries AC , Worldwide_Emissions WW
			WHERE AC.Emission_of_NH3_in_Tonnes > WW.Average_emission_NH3_in_Tonnes: Running...
[20, 13:18:25] CREATE VIEW countries_with_high_emission AS
SELECT iso_code -- has 21 countries
			FROM Average_Emission_by_Countries AC , Worldwide_Emissions WW
			WHERE AC.Emission_of_NOx_in_Tonnes > WW.Average_emission_NOx_in_Tonnes
			UNION
			SELECT iso_code -- has 24 countries
			FROM Average_Emission_by_Countries AC , Worldwide_Emissions WW
			WHERE AC.Emission_of_SO2_in_Tonnes > WW.Emission_of_SO2_in_Tonnes
			UNION
			SELECT iso_code -- has 17 countries
			FROM Average_Emission_by_Countries AC , Worldwide_Emissions WW
			WHERE AC.Emission_of_CO_in_Tonnes > WW.Average_emission_CO_in_Tonnes
			UNION
			SELECT iso_code -- has 17 countries
			FROM Average_Emission_by_Countries AC , Worldwide_Emissions WW
			WHERE AC.Emission_of_NH3_in_Tonnes > WW.Average_emission_NH3_in_Tonnes: 0 row(s) affected
[21, 13:18:51] SELECT * 
FROM countries_with_high_emission
LIMIT 0, 1000
: Running...
[21, 13:18:51] SELECT * 
FROM countries_with_high_emission
LIMIT 0, 1000
: Fetching...
[21, 13:18:51] SELECT * 
FROM countries_with_high_emission
LIMIT 0, 1000
: 32 row(s) returned
[22, 13:18:59] SELECT COUNT(*) 
FROM countries_with_high_emission
LIMIT 0, 1000
: Running...
[22, 13:18:59] SELECT COUNT(*) 
FROM countries_with_high_emission
LIMIT 0, 1000
: Fetching...
[22, 13:18:59] SELECT COUNT(*) 
FROM countries_with_high_emission
LIMIT 0, 1000
: 1 row(s) returned
[23, 13:19:33] SELECT iso_code -- has 21 countries
				FROM Average_Emission_by_Countries AC , Worldwide_Emissions WW
				WHERE AC.Emission_of_NOx_in_Tonnes > WW.Average_emission_NOx_in_Tonnes
				INTERSECT
				SELECT iso_code -- has 24 countries
				FROM Average_Emission_by_Countries AC , Worldwide_Emissions WW
				WHERE AC.Emission_of_SO2_in_Tonnes > WW.Emission_of_SO2_in_Tonnes
				INTERSECT
				SELECT iso_code -- has 17 countries
				FROM Average_Emission_by_Countries AC , Worldwide_Emissions WW
				WHERE AC.Emission_of_CO_in_Tonnes > WW.Average_emission_CO_in_Tonnes
				INTERSECT
				SELECT iso_code -- has 17 countries
				FROM Average_Emission_by_Countries AC , Worldwide_Emissions WW
				WHERE AC.Emission_of_NH3_in_Tonnes > WW.Average_emission_NH3_in_Tonnes: Running...
[23, 13:19:33] SELECT iso_code -- has 21 countries
				FROM Average_Emission_by_Countries AC , Worldwide_Emissions WW
				WHERE AC.Emission_of_NOx_in_Tonnes > WW.Average_emission_NOx_in_Tonnes
				INTERSECT
				SELECT iso_code -- has 24 countries
				FROM Average_Emission_by_Countries AC , Worldwide_Emissions WW
				WHERE AC.Emission_of_SO2_in_Tonnes > WW.Emission_of_SO2_in_Tonnes
				INTERSECT
				SELECT iso_code -- has 17 countries
				FROM Average_Emission_by_Countries AC , Worldwide_Emissions WW
				WHERE AC.Emission_of_CO_in_Tonnes > WW.Average_emission_CO_in_Tonnes
				INTERSECT
				SELECT iso_code -- has 17 countries
				FROM Average_Emission_by_Countries AC , Worldwide_Emissions WW
				WHERE AC.Emission_of_NH3_in_Tonnes > WW.Average_emission_NH3_in_Tonnes: Fetching...
[23, 13:19:33] SELECT iso_code -- has 21 countries
				FROM Average_Emission_by_Countries AC , Worldwide_Emissions WW
				WHERE AC.Emission_of_NOx_in_Tonnes > WW.Average_emission_NOx_in_Tonnes
				INTERSECT
				SELECT iso_code -- has 24 countries
				FROM Average_Emission_by_Countries AC , Worldwide_Emissions WW
				WHERE AC.Emission_of_SO2_in_Tonnes > WW.Emission_of_SO2_in_Tonnes
				INTERSECT
				SELECT iso_code -- has 17 countries
				FROM Average_Emission_by_Countries AC , Worldwide_Emissions WW
				WHERE AC.Emission_of_CO_in_Tonnes > WW.Average_emission_CO_in_Tonnes
				INTERSECT
				SELECT iso_code -- has 17 countries
				FROM Average_Emission_by_Countries AC , Worldwide_Emissions WW
				WHERE AC.Emission_of_NH3_in_Tonnes > WW.Average_emission_NH3_in_Tonnes: 9 row(s) returned
[24, 13:21:28] SELECT COUNT(*)
FROM countries_with_high_emission
LIMIT 0, 1000
: Running...
[24, 13:21:28] SELECT COUNT(*)
FROM countries_with_high_emission
LIMIT 0, 1000
: Fetching...
[24, 13:21:28] SELECT COUNT(*)
FROM countries_with_high_emission
LIMIT 0, 1000
: 1 row(s) returned
[25, 13:21:46] SELECT iso_code
FROM countries_with_high_emission
LIMIT 0, 1000
: Running...
[25, 13:21:46] SELECT iso_code
FROM countries_with_high_emission
LIMIT 0, 1000
: Fetching...
[25, 13:21:46] SELECT iso_code
FROM countries_with_high_emission
LIMIT 0, 1000
: 32 row(s) returned
[26, 13:22:26] SELECT * FROM nature_deaths
LIMIT 0, 1000
: Running...
[26, 13:22:26] SELECT * FROM nature_deaths
LIMIT 0, 1000
: Fetching...
[26, 13:22:26] SELECT * FROM nature_deaths
LIMIT 0, 1000
: 1000 row(s) returned
[27, 13:25:31] DROP VIEW IF EXISTS air_pollution_deaths: Running...
[27, 13:25:31] DROP VIEW IF EXISTS air_pollution_deaths: 0 row(s) affected, 1 warning(s):
1051 Unknown table 'cs306-project.air_pollution_deaths'
[28, 13:25:31] CREATE VIEW air_pollution_deaths AS 
SELECT iso_code,
	AVG(deaths_by_outdoor_air_pollution) AS Average_Deaths_by_Outdoor_Air_Pollution,
	AVG(deaths_by_household_air_pollution_from_solid_fuels) AS Average_Deaths_by_Household_Air_Pollution,
	AVG(deaths_by_air_pollution) AS Average_Deaths_by_Air_Pollution
GROUP BY iso_code: Running...
[28, 13:25:31] CREATE VIEW air_pollution_deaths AS 
SELECT iso_code,
	AVG(deaths_by_outdoor_air_pollution) AS Average_Deaths_by_Outdoor_Air_Pollution,
	AVG(deaths_by_household_air_pollution_from_solid_fuels) AS Average_Deaths_by_Household_Air_Pollution,
	AVG(deaths_by_air_pollution) AS Average_Deaths_by_Air_Pollution
GROUP BY iso_code: Error Code: 1054. Unknown column 'iso_code' in 'field list'
[29, 13:25:37] SELECT * 
FROM nature_deaths
LIMIT 0, 1000
: Running...
[29, 13:25:37] SELECT * 
FROM nature_deaths
LIMIT 0, 1000
: Fetching...
[29, 13:25:37] SELECT * 
FROM nature_deaths
LIMIT 0, 1000
: 1000 row(s) returned
[30, 13:25:57] DROP VIEW IF EXISTS air_pollution_deaths: Running...
[30, 13:25:57] DROP VIEW IF EXISTS air_pollution_deaths: 0 row(s) affected, 1 warning(s):
1051 Unknown table 'cs306-project.air_pollution_deaths'
[31, 13:25:57] CREATE VIEW air_pollution_deaths AS 
SELECT iso_code,
	AVG(deaths_by_outdoor_air_pollution) AS Average_Deaths_by_Outdoor_Air_Pollution,
	AVG(deaths_by_household_air_pollution_from_solid_fuels) AS Average_Deaths_by_Household_Air_Pollution,
	AVG(deaths_by_air_pollution) AS Average_Deaths_by_Air_Pollution
FROM nature_deaths
GROUP BY iso_code: Running...
[31, 13:25:57] CREATE VIEW air_pollution_deaths AS 
SELECT iso_code,
	AVG(deaths_by_outdoor_air_pollution) AS Average_Deaths_by_Outdoor_Air_Pollution,
	AVG(deaths_by_household_air_pollution_from_solid_fuels) AS Average_Deaths_by_Household_Air_Pollution,
	AVG(deaths_by_air_pollution) AS Average_Deaths_by_Air_Pollution
FROM nature_deaths
GROUP BY iso_code: 0 row(s) affected
[32, 13:26:10] SELECT *
FROM air_pollution_deaths
LIMIT 0, 1000
: Running...
[32, 13:26:10] SELECT *
FROM air_pollution_deaths
LIMIT 0, 1000
: Fetching...
[32, 13:26:10] SELECT *
FROM air_pollution_deaths
LIMIT 0, 1000
: 228 row(s) returned
[33, 13:27:21] DROP VIEW IF EXISTS air_pollution_deaths_of_countries: Running...
[33, 13:27:21] DROP VIEW IF EXISTS air_pollution_deaths_of_countries: 0 row(s) affected, 1 warning(s):
1051 Unknown table 'cs306-project.air_pollution_deaths_of_countries'
[34, 13:27:21] CREATE VIEW air_pollution_deaths AS 
SELECT iso_code,
	AVG(deaths_by_outdoor_air_pollution) AS Average_Deaths_by_Outdoor_Air_Pollution,
	AVG(deaths_by_household_air_pollution_from_solid_fuels) AS Average_Deaths_by_Household_Air_Pollution,
	AVG(deaths_by_air_pollution) AS Average_Deaths_by_Air_Pollution
FROM nature_deaths
GROUP BY iso_code: Running...
[34, 13:27:21] CREATE VIEW air_pollution_deaths AS 
SELECT iso_code,
	AVG(deaths_by_outdoor_air_pollution) AS Average_Deaths_by_Outdoor_Air_Pollution,
	AVG(deaths_by_household_air_pollution_from_solid_fuels) AS Average_Deaths_by_Household_Air_Pollution,
	AVG(deaths_by_air_pollution) AS Average_Deaths_by_Air_Pollution
FROM nature_deaths
GROUP BY iso_code: Error Code: 1050. Table 'air_pollution_deaths' already exists
[35, 13:27:28] DROP VIEW IF EXISTS air_pollution_deaths_of_countries: Running...
[35, 13:27:28] DROP VIEW IF EXISTS air_pollution_deaths_of_countries: 0 row(s) affected, 1 warning(s):
1051 Unknown table 'cs306-project.air_pollution_deaths_of_countries'
[36, 13:27:28] CREATE VIEW air_pollution_deaths_of_countries AS 
SELECT iso_code,
	AVG(deaths_by_outdoor_air_pollution) AS Average_Deaths_by_Outdoor_Air_Pollution,
	AVG(deaths_by_household_air_pollution_from_solid_fuels) AS Average_Deaths_by_Household_Air_Pollution,
	AVG(deaths_by_air_pollution) AS Average_Deaths_by_Air_Pollution
FROM nature_deaths
GROUP BY iso_code: Running...
[36, 13:27:28] CREATE VIEW air_pollution_deaths_of_countries AS 
SELECT iso_code,
	AVG(deaths_by_outdoor_air_pollution) AS Average_Deaths_by_Outdoor_Air_Pollution,
	AVG(deaths_by_household_air_pollution_from_solid_fuels) AS Average_Deaths_by_Household_Air_Pollution,
	AVG(deaths_by_air_pollution) AS Average_Deaths_by_Air_Pollution
FROM nature_deaths
GROUP BY iso_code: 0 row(s) affected
[37, 13:27:40] SELECT *
FROM air_pollution_deaths_of_countries
LIMIT 0, 1000
: Running...
[37, 13:27:40] SELECT *
FROM air_pollution_deaths_of_countries
LIMIT 0, 1000
: Fetching...
[37, 13:27:40] SELECT *
FROM air_pollution_deaths_of_countries
LIMIT 0, 1000
: 228 row(s) returned
[38, 13:29:21] DROP VIEW IF EXISTS air_pollution_deaths_worldwide: Running...
[38, 13:29:21] DROP VIEW IF EXISTS air_pollution_deaths_worldwide: 0 row(s) affected, 1 warning(s):
1051 Unknown table 'cs306-project.air_pollution_deaths_worldwide'
[39, 13:29:21] CREATE VIEW air_pollution_deaths_worldwide AS 
SELECT "WORLDWIDE",
	AVG(Average_Deaths_by_Outdoor_Air_Pollution) AS Average_Deaths_by_Outdoor_Air_Pollution_worldwide,
	AVG(Average_Deaths_by_Household_Air_Pollution) AS Average_Deaths_by_Household_Air_Pollution_worldwide,
	AVG(Average_Deaths_by_Air_Pollution) AS Average_Deaths_by_Air_Pollution_worldwide	
FROM air_pollution_deaths_of_countries: Running...
[39, 13:29:21] CREATE VIEW air_pollution_deaths_worldwide AS 
SELECT "WORLDWIDE",
	AVG(Average_Deaths_by_Outdoor_Air_Pollution) AS Average_Deaths_by_Outdoor_Air_Pollution_worldwide,
	AVG(Average_Deaths_by_Household_Air_Pollution) AS Average_Deaths_by_Household_Air_Pollution_worldwide,
	AVG(Average_Deaths_by_Air_Pollution) AS Average_Deaths_by_Air_Pollution_worldwide	
FROM air_pollution_deaths_of_countries: 0 row(s) affected
[40, 13:29:42] SELECT *
FROM air_pollution_deaths_worldwide
LIMIT 0, 1000
: Running...
[40, 13:29:42] SELECT *
FROM air_pollution_deaths_worldwide
LIMIT 0, 1000
: Fetching...
[40, 13:29:42] SELECT *
FROM air_pollution_deaths_worldwide
LIMIT 0, 1000
: 1 row(s) returned
[41, 13:31:53] SELECT *
FROM air_pollution_deaths_of_countries
LIMIT 0, 1000
: Running...
[41, 13:31:54] SELECT *
FROM air_pollution_deaths_of_countries
LIMIT 0, 1000
: Fetching...
[41, 13:31:54] SELECT *
FROM air_pollution_deaths_of_countries
LIMIT 0, 1000
: 228 row(s) returned
[42, 13:32:49] SELECT iso_code -- has 21 countries
				WHERE APC.Average_Deaths_by_Outdoor_Air_Pollution > APWW.Average_Deaths_by_Outdoor_Air_Pollution_worldwide: Running...
[42, 13:32:49] SELECT iso_code -- has 21 countries
				WHERE APC.Average_Deaths_by_Outdoor_Air_Pollution > APWW.Average_Deaths_by_Outdoor_Air_Pollution_worldwide: Error Code: 1054. Unknown column 'iso_code' in 'field list'
[43, 13:32:59] SELECT *
FROM air_pollution_deaths_worldwide
LIMIT 0, 1000
: Running...
[43, 13:32:59] SELECT *
FROM air_pollution_deaths_worldwide
LIMIT 0, 1000
: Fetching...
[43, 13:32:59] SELECT *
FROM air_pollution_deaths_worldwide
LIMIT 0, 1000
: 1 row(s) returned
[44, 13:33:05] SELECT *
FROM air_pollution_deaths_of_countries
LIMIT 0, 1000
: Running...
[44, 13:33:05] SELECT *
FROM air_pollution_deaths_of_countries
LIMIT 0, 1000
: Fetching...
[44, 13:33:05] SELECT *
FROM air_pollution_deaths_of_countries
LIMIT 0, 1000
: 228 row(s) returned
[45, 13:33:44] DROP VIEW IF EXISTS countries_with_high_deaths: Running...
[45, 13:33:44] DROP VIEW IF EXISTS countries_with_high_deaths: 0 row(s) affected, 1 warning(s):
1051 Unknown table 'cs306-project.countries_with_high_deaths'
[46, 13:33:44] CREATE VIEW countries_with_high_deaths AS
	SELECT iso_code -- has 21 countries
    FROM air_pollution_deaths_of_countries APC , air_pollution_deaths_worldwide APWW
	WHERE APC.Average_Deaths_by_Outdoor_Air_Pollution > APWW.Average_Deaths_by_Outdoor_Air_Pollution_worldwide
	UNION
	SELECT iso_code -- has 24 countries
	FROM air_pollution_deaths_of_countries APC , air_pollution_deaths_worldwide APWW
	WHERE APC.Average_Deaths_by_Household_Air_Pollution > APWW.Average_Deaths_by_Household_Air_Pollution_worldwide
	UNION
	SELECT iso_code -- has 17 countries
	FROM air_pollution_deaths_of_countries APC , air_pollution_deaths_worldwide APWW
	WHERE APC.Average_Deaths_by_Air_Pollution > APWW.Average_Deaths_by_Air_Pollution_worldwide: Running...
[46, 13:33:44] CREATE VIEW countries_with_high_deaths AS
	SELECT iso_code -- has 21 countries
    FROM air_pollution_deaths_of_countries APC , air_pollution_deaths_worldwide APWW
	WHERE APC.Average_Deaths_by_Outdoor_Air_Pollution > APWW.Average_Deaths_by_Outdoor_Air_Pollution_worldwide
	UNION
	SELECT iso_code -- has 24 countries
	FROM air_pollution_deaths_of_countries APC , air_pollution_deaths_worldwide APWW
	WHERE APC.Average_Deaths_by_Household_Air_Pollution > APWW.Average_Deaths_by_Household_Air_Pollution_worldwide
	UNION
	SELECT iso_code -- has 17 countries
	FROM air_pollution_deaths_of_countries APC , air_pollution_deaths_worldwide APWW
	WHERE APC.Average_Deaths_by_Air_Pollution > APWW.Average_Deaths_by_Air_Pollution_worldwide: 0 row(s) affected
[47, 13:33:56] SELECT *
FROM countries_with_high_deaths
LIMIT 0, 1000
: Running...
[47, 13:33:56] SELECT *
FROM countries_with_high_deaths
LIMIT 0, 1000
: Fetching...
[47, 13:33:56] SELECT *
FROM countries_with_high_deaths
LIMIT 0, 1000
: 29 row(s) returned
[48, 13:34:34] SELECT *
FROM countries_with_high_deaths, countries_with_high_emission
LIMIT 0, 1000
: Running...
[48, 13:34:34] SELECT *
FROM countries_with_high_deaths, countries_with_high_emission
LIMIT 0, 1000
: Fetching...
[48, 13:34:34] SELECT *
FROM countries_with_high_deaths, countries_with_high_emission
LIMIT 0, 1000
: 928 row(s) returned
[49, 13:35:13] SELECT CHD.iso_code
FROM countries_with_high_deaths CHD, countries_with_high_emission CHE
WHERE CHD.iso_code = CHE.iso_code
LIMIT 0, 1000
: Running...
[49, 13:35:13] SELECT CHD.iso_code
FROM countries_with_high_deaths CHD, countries_with_high_emission CHE
WHERE CHD.iso_code = CHE.iso_code
LIMIT 0, 1000
: Fetching...
[49, 13:35:13] SELECT CHD.iso_code
FROM countries_with_high_deaths CHD, countries_with_high_emission CHE
WHERE CHD.iso_code = CHE.iso_code
LIMIT 0, 1000
: 10 row(s) returned
[50, 13:35:53] SELECT COUNT(*) -- has 
FROM countries_with_high_deaths CHD, countries_with_high_emission CHE
WHERE CHD.iso_code = CHE.iso_code
LIMIT 0, 1000
: Running...
[50, 13:35:53] SELECT COUNT(*) -- has 
FROM countries_with_high_deaths CHD, countries_with_high_emission CHE
WHERE CHD.iso_code = CHE.iso_code
LIMIT 0, 1000
: Fetching...
[50, 13:35:53] SELECT COUNT(*) -- has 
FROM countries_with_high_deaths CHD, countries_with_high_emission CHE
WHERE CHD.iso_code = CHE.iso_code
LIMIT 0, 1000
: 1 row(s) returned
[51, 13:36:19] SELECT COUNT(*) -- has 17 countries
	FROM air_pollution_deaths_of_countries APC , air_pollution_deaths_worldwide APWW
	WHERE APC.Average_Deaths_by_Air_Pollution > APWW.Average_Deaths_by_Air_Pollution_worldwide
LIMIT 0, 1000
: Running...
[51, 13:36:19] SELECT COUNT(*) -- has 17 countries
	FROM air_pollution_deaths_of_countries APC , air_pollution_deaths_worldwide APWW
	WHERE APC.Average_Deaths_by_Air_Pollution > APWW.Average_Deaths_by_Air_Pollution_worldwide
LIMIT 0, 1000
: Fetching...
[51, 13:36:19] SELECT COUNT(*) -- has 17 countries
	FROM air_pollution_deaths_of_countries APC , air_pollution_deaths_worldwide APWW
	WHERE APC.Average_Deaths_by_Air_Pollution > APWW.Average_Deaths_by_Air_Pollution_worldwide
LIMIT 0, 1000
: 1 row(s) returned
[52, 13:36:35] SELECT COUNT(*) -- has 24 countries
	FROM air_pollution_deaths_of_countries APC , air_pollution_deaths_worldwide APWW
	WHERE APC.Average_Deaths_by_Household_Air_Pollution > APWW.Average_Deaths_by_Household_Air_Pollution_worldwide
LIMIT 0, 1000
: Running...
[52, 13:36:35] SELECT COUNT(*) -- has 24 countries
	FROM air_pollution_deaths_of_countries APC , air_pollution_deaths_worldwide APWW
	WHERE APC.Average_Deaths_by_Household_Air_Pollution > APWW.Average_Deaths_by_Household_Air_Pollution_worldwide
LIMIT 0, 1000
: Fetching...
[52, 13:36:35] SELECT COUNT(*) -- has 24 countries
	FROM air_pollution_deaths_of_countries APC , air_pollution_deaths_worldwide APWW
	WHERE APC.Average_Deaths_by_Household_Air_Pollution > APWW.Average_Deaths_by_Household_Air_Pollution_worldwide
LIMIT 0, 1000
: 1 row(s) returned
[53, 13:36:43] SELECT COUNT(*) -- has 21 countries
    FROM air_pollution_deaths_of_countries APC , air_pollution_deaths_worldwide APWW
	WHERE APC.Average_Deaths_by_Outdoor_Air_Pollution > APWW.Average_Deaths_by_Outdoor_Air_Pollution_worldwide
LIMIT 0, 1000
: Running...
[53, 13:36:43] SELECT COUNT(*) -- has 21 countries
    FROM air_pollution_deaths_of_countries APC , air_pollution_deaths_worldwide APWW
	WHERE APC.Average_Deaths_by_Outdoor_Air_Pollution > APWW.Average_Deaths_by_Outdoor_Air_Pollution_worldwide
LIMIT 0, 1000
: Fetching...
[53, 13:36:43] SELECT COUNT(*) -- has 21 countries
    FROM air_pollution_deaths_of_countries APC , air_pollution_deaths_worldwide APWW
	WHERE APC.Average_Deaths_by_Outdoor_Air_Pollution > APWW.Average_Deaths_by_Outdoor_Air_Pollution_worldwide
LIMIT 0, 1000
: 1 row(s) returned
[54, 13:37:22] SELECT COUNT(*)
FROM countries_with_high_deaths
LIMIT 0, 1000
: Running...
[54, 13:37:22] SELECT COUNT(*)
FROM countries_with_high_deaths
LIMIT 0, 1000
: Fetching...
[54, 13:37:22] SELECT COUNT(*)
FROM countries_with_high_deaths
LIMIT 0, 1000
: 1 row(s) returned
[55, 13:43:18] SELECT iso_code -- has 10 countries
FROM countries_with_high_deaths
EXCEPT
SELECT iso_code -- has 10 countries
FROM countries_with_high_emission: Running...
[55, 13:43:18] SELECT iso_code -- has 10 countries
FROM countries_with_high_deaths
EXCEPT
SELECT iso_code -- has 10 countries
FROM countries_with_high_emission: Fetching...
[55, 13:43:18] SELECT iso_code -- has 10 countries
FROM countries_with_high_deaths
EXCEPT
SELECT iso_code -- has 10 countries
FROM countries_with_high_emission: 19 row(s) returned
[56, 13:43:47] SELECT COUNT(*)
FROM (

SELECT iso_code -- has 10 countries
FROM countries_with_high_deaths
EXCEPT
SELECT iso_code -- has 10 countries
FROM countries_with_high_emission 
): Running...
[56, 13:43:47] SELECT COUNT(*)
FROM (

SELECT iso_code -- has 10 countries
FROM countries_with_high_deaths
EXCEPT
SELECT iso_code -- has 10 countries
FROM countries_with_high_emission 
): Error Code: 1248. Every derived table must have its own alias
[57, 13:44:36] DROP VIEW IF EXISTS Left_Outer: Running...
[57, 13:44:36] DROP VIEW IF EXISTS Left_Outer: 0 row(s) affected, 1 warning(s):
1051 Unknown table 'cs306-project.left_outer'
[58, 13:44:36] CREATE VIEW Left_Outer AS
SELECT iso_code -- has 10 countries
FROM countries_with_high_deaths
EXCEPT
SELECT iso_code -- has 10 countries
FROM countries_with_high_emission: Running...
[58, 13:44:36] CREATE VIEW Left_Outer AS
SELECT iso_code -- has 10 countries
FROM countries_with_high_deaths
EXCEPT
SELECT iso_code -- has 10 countries
FROM countries_with_high_emission: 0 row(s) affected
[59, 13:44:51] SELECT *
FROM Left_Outer
LIMIT 0, 1000
: Running...
[59, 13:44:51] SELECT *
FROM Left_Outer
LIMIT 0, 1000
: Fetching...
[59, 13:44:51] SELECT *
FROM Left_Outer
LIMIT 0, 1000
: 19 row(s) returned
[60, 13:44:58] SELECT COUNT(*)
FROM Left_Outer
LIMIT 0, 1000
: Running...
[60, 13:44:58] SELECT COUNT(*)
FROM Left_Outer
LIMIT 0, 1000
: Fetching...
[60, 13:44:58] SELECT COUNT(*)
FROM Left_Outer
LIMIT 0, 1000
: 1 row(s) returned
[61, 13:45:42] SELECT *
FROM countries_with_high_deaths LEFT OUTER JOIN countries_with_high_emission: Running...
[61, 13:45:42] SELECT *
FROM countries_with_high_deaths LEFT OUTER JOIN countries_with_high_emission: Error Code: 1064. You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' at line 2
[62, 13:46:55] SELECT *
FROM countries_with_high_deaths LEFT OUTER JOIN countries_with_high_emission
ON iso_code
LIMIT 0, 1000
: Running...
[62, 13:46:55] SELECT *
FROM countries_with_high_deaths LEFT OUTER JOIN countries_with_high_emission
ON iso_code
LIMIT 0, 1000
: Error Code: 1052. Column 'iso_code' in on clause is ambiguous
[63, 13:47:08] SELECT *
FROM countries_with_high_deaths LEFT OUTER JOIN countries_with_high_emission
ON countries_with_high_deaths.iso_code
LIMIT 0, 1000
: Running...
[63, 13:47:08] SELECT *
FROM countries_with_high_deaths LEFT OUTER JOIN countries_with_high_emission
ON countries_with_high_deaths.iso_code
LIMIT 0, 1000
: Fetching...
[63, 13:47:08] SELECT *
FROM countries_with_high_deaths LEFT OUTER JOIN countries_with_high_emission
ON countries_with_high_deaths.iso_code
LIMIT 0, 1000
: 29 row(s) returned
[64, 13:47:17] SELECT COUNT(*)
FROM countries_with_high_deaths LEFT OUTER JOIN countries_with_high_emission
ON countries_with_high_deaths.iso_code
LIMIT 0, 1000
: Running...
[64, 13:47:17] SELECT COUNT(*)
FROM countries_with_high_deaths LEFT OUTER JOIN countries_with_high_emission
ON countries_with_high_deaths.iso_code
LIMIT 0, 1000
: Fetching...
[64, 13:47:17] SELECT COUNT(*)
FROM countries_with_high_deaths LEFT OUTER JOIN countries_with_high_emission
ON countries_with_high_deaths.iso_code
LIMIT 0, 1000
: 1 row(s) returned
[65, 13:47:21] SELECT COUNT(*)
FROM Left_Outer
LIMIT 0, 1000
: Running...
[65, 13:47:21] SELECT COUNT(*)
FROM Left_Outer
LIMIT 0, 1000
: Fetching...
[65, 13:47:21] SELECT COUNT(*)
FROM Left_Outer
LIMIT 0, 1000
: 1 row(s) returned
[66, 13:47:43] SELECT COUNT(*)
FROM countries_with_high_deaths LEFT OUTER JOIN countries_with_high_emission
ON countries_with_high_deaths.iso_code = countries_with_high_emission.iso_code
LIMIT 0, 1000
: Running...
[66, 13:47:43] SELECT COUNT(*)
FROM countries_with_high_deaths LEFT OUTER JOIN countries_with_high_emission
ON countries_with_high_deaths.iso_code = countries_with_high_emission.iso_code
LIMIT 0, 1000
: Fetching...
[66, 13:47:43] SELECT COUNT(*)
FROM countries_with_high_deaths LEFT OUTER JOIN countries_with_high_emission
ON countries_with_high_deaths.iso_code = countries_with_high_emission.iso_code
LIMIT 0, 1000
: 1 row(s) returned
[67, 13:47:52] SELECT *
FROM countries_with_high_deaths LEFT OUTER JOIN countries_with_high_emission
ON countries_with_high_deaths.iso_code = countries_with_high_emission.iso_code
LIMIT 0, 1000
: Running...
[67, 13:47:52] SELECT *
FROM countries_with_high_deaths LEFT OUTER JOIN countries_with_high_emission
ON countries_with_high_deaths.iso_code = countries_with_high_emission.iso_code
LIMIT 0, 1000
: Fetching...
[67, 13:47:52] SELECT *
FROM countries_with_high_deaths LEFT OUTER JOIN countries_with_high_emission
ON countries_with_high_deaths.iso_code = countries_with_high_emission.iso_code
LIMIT 0, 1000
: 29 row(s) returned
[68, 13:48:36] SELECT COUNT(*)
FROM countries_with_high_deaths LEFT OUTER JOIN countries_with_high_emission
ON countries_with_high_deaths.iso_code != countries_with_high_emission.iso_code
LIMIT 0, 1000
: Running...
[68, 13:48:36] SELECT COUNT(*)
FROM countries_with_high_deaths LEFT OUTER JOIN countries_with_high_emission
ON countries_with_high_deaths.iso_code != countries_with_high_emission.iso_code
LIMIT 0, 1000
: Fetching...
[68, 13:48:36] SELECT COUNT(*)
FROM countries_with_high_deaths LEFT OUTER JOIN countries_with_high_emission
ON countries_with_high_deaths.iso_code != countries_with_high_emission.iso_code
LIMIT 0, 1000
: 1 row(s) returned
[69, 13:48:47] SELECT *
FROM countries_with_high_deaths LEFT OUTER JOIN countries_with_high_emission
ON countries_with_high_deaths.iso_code != countries_with_high_emission.iso_code
LIMIT 0, 1000
: Running...
[69, 13:48:47] SELECT *
FROM countries_with_high_deaths LEFT OUTER JOIN countries_with_high_emission
ON countries_with_high_deaths.iso_code != countries_with_high_emission.iso_code
LIMIT 0, 1000
: Fetching...
[69, 13:48:47] SELECT *
FROM countries_with_high_deaths LEFT OUTER JOIN countries_with_high_emission
ON countries_with_high_deaths.iso_code != countries_with_high_emission.iso_code
LIMIT 0, 1000
: 918 row(s) returned
[70, 13:52:39] SELECT COUNT(*)
FROM countries_with_high_deaths LEFT OUTER JOIN countries_with_high_emission
ON countries_with_high_emission.iso_code = NULL
LIMIT 0, 1000
: Running...
[70, 13:52:39] SELECT COUNT(*)
FROM countries_with_high_deaths LEFT OUTER JOIN countries_with_high_emission
ON countries_with_high_emission.iso_code = NULL
LIMIT 0, 1000
: Fetching...
[70, 13:52:39] SELECT COUNT(*)
FROM countries_with_high_deaths LEFT OUTER JOIN countries_with_high_emission
ON countries_with_high_emission.iso_code = NULL
LIMIT 0, 1000
: 1 row(s) returned
[71, 13:52:50] SELECT *
FROM countries_with_high_deaths LEFT OUTER JOIN countries_with_high_emission
ON countries_with_high_emission.iso_code = NULL
LIMIT 0, 1000
: Running...
[71, 13:52:50] SELECT *
FROM countries_with_high_deaths LEFT OUTER JOIN countries_with_high_emission
ON countries_with_high_emission.iso_code = NULL
LIMIT 0, 1000
: Fetching...
[71, 13:52:50] SELECT *
FROM countries_with_high_deaths LEFT OUTER JOIN countries_with_high_emission
ON countries_with_high_emission.iso_code = NULL
LIMIT 0, 1000
: 29 row(s) returned
[72, 13:53:28] SELECT *
FROM countries_with_high_deaths LEFT OUTER JOIN countries_with_high_emission
ON countries_with_high_deaths.iso_code = countries_with_high_emission.iso_code
LIMIT 0, 1000
: Running...
[72, 13:53:28] SELECT *
FROM countries_with_high_deaths LEFT OUTER JOIN countries_with_high_emission
ON countries_with_high_deaths.iso_code = countries_with_high_emission.iso_code
LIMIT 0, 1000
: Fetching...
[72, 13:53:28] SELECT *
FROM countries_with_high_deaths LEFT OUTER JOIN countries_with_high_emission
ON countries_with_high_deaths.iso_code = countries_with_high_emission.iso_code
LIMIT 0, 1000
: 29 row(s) returned
[73, 13:53:51] SELECT *
FROM countries_with_high_deaths LEFT OUTER JOIN countries_with_high_emission
ON NULL = countries_with_high_emission.iso_code
LIMIT 0, 1000
: Running...
[73, 13:53:51] SELECT *
FROM countries_with_high_deaths LEFT OUTER JOIN countries_with_high_emission
ON NULL = countries_with_high_emission.iso_code
LIMIT 0, 1000
: Fetching...
[73, 13:53:51] SELECT *
FROM countries_with_high_deaths LEFT OUTER JOIN countries_with_high_emission
ON NULL = countries_with_high_emission.iso_code
LIMIT 0, 1000
: 29 row(s) returned
[74, 13:54:03] SELECT *
FROM countries_with_high_deaths LEFT OUTER JOIN countries_with_high_emission
ON NULL = countries_with_high_deaths.iso_code
LIMIT 0, 1000
: Running...
[74, 13:54:03] SELECT *
FROM countries_with_high_deaths LEFT OUTER JOIN countries_with_high_emission
ON NULL = countries_with_high_deaths.iso_code
LIMIT 0, 1000
: Fetching...
[74, 13:54:03] SELECT *
FROM countries_with_high_deaths LEFT OUTER JOIN countries_with_high_emission
ON NULL = countries_with_high_deaths.iso_code
LIMIT 0, 1000
: 29 row(s) returned
[75, 13:54:18] SELECT *
FROM countries_with_high_deaths LEFT OUTER JOIN countries_with_high_emission
ON countries_with_high_deaths.iso_code = NULL
LIMIT 0, 1000
: Running...
[75, 13:54:18] SELECT *
FROM countries_with_high_deaths LEFT OUTER JOIN countries_with_high_emission
ON countries_with_high_deaths.iso_code = NULL
LIMIT 0, 1000
: Fetching...
[75, 13:54:18] SELECT *
FROM countries_with_high_deaths LEFT OUTER JOIN countries_with_high_emission
ON countries_with_high_deaths.iso_code = NULL
LIMIT 0, 1000
: 29 row(s) returned
[76, 13:54:26] SELECT COUNT(*)
FROM countries_with_high_deaths LEFT OUTER JOIN countries_with_high_emission
ON countries_with_high_deaths.iso_code = NULL
LIMIT 0, 1000
: Running...
[76, 13:54:26] SELECT COUNT(*)
FROM countries_with_high_deaths LEFT OUTER JOIN countries_with_high_emission
ON countries_with_high_deaths.iso_code = NULL
LIMIT 0, 1000
: Fetching...
[76, 13:54:26] SELECT COUNT(*)
FROM countries_with_high_deaths LEFT OUTER JOIN countries_with_high_emission
ON countries_with_high_deaths.iso_code = NULL
LIMIT 0, 1000
: 1 row(s) returned
[77, 13:56:01] SELECT COUNT(*)
FROM countries_with_high_deaths LEFT INNER JOIN countries_with_high_emission
ON countries_with_high_deaths.iso_code = NULL: Running...
[77, 13:56:01] SELECT COUNT(*)
FROM countries_with_high_deaths LEFT INNER JOIN countries_with_high_emission
ON countries_with_high_deaths.iso_code = NULL: Error Code: 1064. You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'INNER JOIN countries_with_high_emission
ON countries_with_high_deaths.iso_code =' at line 2
[78, 13:56:32] SELECT COUNT(*)
FROM countries_with_high_deaths LEFT  JOIN countries_with_high_emission
ON countries_with_high_deaths.iso_code = NULL
LIMIT 0, 1000
: Running...
[78, 13:56:32] SELECT COUNT(*)
FROM countries_with_high_deaths LEFT  JOIN countries_with_high_emission
ON countries_with_high_deaths.iso_code = NULL
LIMIT 0, 1000
: Fetching...
[78, 13:56:32] SELECT COUNT(*)
FROM countries_with_high_deaths LEFT  JOIN countries_with_high_emission
ON countries_with_high_deaths.iso_code = NULL
LIMIT 0, 1000
: 1 row(s) returned
[79, 13:56:41] SELECT *
FROM countries_with_high_deaths LEFT  JOIN countries_with_high_emission
ON countries_with_high_deaths.iso_code = NULL
LIMIT 0, 1000
: Running...
[79, 13:56:41] SELECT *
FROM countries_with_high_deaths LEFT  JOIN countries_with_high_emission
ON countries_with_high_deaths.iso_code = NULL
LIMIT 0, 1000
: Fetching...
[79, 13:56:41] SELECT *
FROM countries_with_high_deaths LEFT  JOIN countries_with_high_emission
ON countries_with_high_deaths.iso_code = NULL
LIMIT 0, 1000
: 29 row(s) returned
[80, 13:56:51] SELECT *
FROM countries_with_high_deaths LEFT  JOIN countries_with_high_emission
ON iso_code
LIMIT 0, 1000
: Running...
[80, 13:56:51] SELECT *
FROM countries_with_high_deaths LEFT  JOIN countries_with_high_emission
ON iso_code
LIMIT 0, 1000
: Error Code: 1052. Column 'iso_code' in on clause is ambiguous
[81, 13:59:53] SELECT *
FROM countries_with_high_deaths JOIN countries_with_high_emission
ON iso_code
LIMIT 0, 1000
: Running...
[81, 13:59:53] SELECT *
FROM countries_with_high_deaths JOIN countries_with_high_emission
ON iso_code
LIMIT 0, 1000
: Error Code: 1052. Column 'iso_code' in on clause is ambiguous
[82, 14:00:01] SELECT *
FROM countries_with_high_deaths JOIN countries_with_high_emission
ON countries_with_high_deaths.iso_code
LIMIT 0, 1000
: Running...
[82, 14:00:01] SELECT *
FROM countries_with_high_deaths JOIN countries_with_high_emission
ON countries_with_high_deaths.iso_code
LIMIT 0, 1000
: Fetching...
[82, 14:00:01] SELECT *
FROM countries_with_high_deaths JOIN countries_with_high_emission
ON countries_with_high_deaths.iso_code
LIMIT 0, 1000
: 0 row(s) returned
[83, 14:00:18] SELECT *
FROM countries_with_high_deaths JOIN countries_with_high_emission
ON countries_with_high_deaths.iso_code = countries_with_high_emission.iso_code
LIMIT 0, 1000
: Running...
[83, 14:00:18] SELECT *
FROM countries_with_high_deaths JOIN countries_with_high_emission
ON countries_with_high_deaths.iso_code = countries_with_high_emission.iso_code
LIMIT 0, 1000
: Fetching...
[83, 14:00:18] SELECT *
FROM countries_with_high_deaths JOIN countries_with_high_emission
ON countries_with_high_deaths.iso_code = countries_with_high_emission.iso_code
LIMIT 0, 1000
: 10 row(s) returned
[84, 14:00:27] SELECT COUNT(*)
FROM countries_with_high_deaths JOIN countries_with_high_emission
ON countries_with_high_deaths.iso_code = countries_with_high_emission.iso_code
LIMIT 0, 1000
: Running...
[84, 14:00:27] SELECT COUNT(*)
FROM countries_with_high_deaths JOIN countries_with_high_emission
ON countries_with_high_deaths.iso_code = countries_with_high_emission.iso_code
LIMIT 0, 1000
: Fetching...
[84, 14:00:27] SELECT COUNT(*)
FROM countries_with_high_deaths JOIN countries_with_high_emission
ON countries_with_high_deaths.iso_code = countries_with_high_emission.iso_code
LIMIT 0, 1000
: 1 row(s) returned
[85, 14:00:30] SELECT COUNT(*)
FROM Left_Outer
LIMIT 0, 1000
: Running...
[85, 14:00:30] SELECT COUNT(*)
FROM Left_Outer
LIMIT 0, 1000
: Fetching...
[85, 14:00:30] SELECT COUNT(*)
FROM Left_Outer
LIMIT 0, 1000
: 1 row(s) returned
[86, 14:00:35] SELECT COUNT(*)
FROM countries_with_high_deaths JOIN countries_with_high_emission
ON countries_with_high_deaths.iso_code != countries_with_high_emission.iso_code
LIMIT 0, 1000
: Running...
[86, 14:00:35] SELECT COUNT(*)
FROM countries_with_high_deaths JOIN countries_with_high_emission
ON countries_with_high_deaths.iso_code != countries_with_high_emission.iso_code
LIMIT 0, 1000
: Fetching...
[86, 14:00:35] SELECT COUNT(*)
FROM countries_with_high_deaths JOIN countries_with_high_emission
ON countries_with_high_deaths.iso_code != countries_with_high_emission.iso_code
LIMIT 0, 1000
: 1 row(s) returned
[87, 14:01:11] SELECT COUNT(*)
FROM countries_with_high_deaths JOIN countries_with_high_emission
ON countries_with_high_deaths.iso_code != countries_with_high_emission.iso_code
AND countries_with_high_deaths.iso_code != NULL
AND countries_with_high_emission.iso_code != NULL
LIMIT 0, 1000
: Running...
[87, 14:01:11] SELECT COUNT(*)
FROM countries_with_high_deaths JOIN countries_with_high_emission
ON countries_with_high_deaths.iso_code != countries_with_high_emission.iso_code
AND countries_with_high_deaths.iso_code != NULL
AND countries_with_high_emission.iso_code != NULL
LIMIT 0, 1000
: Fetching...
[87, 14:01:11] SELECT COUNT(*)
FROM countries_with_high_deaths JOIN countries_with_high_emission
ON countries_with_high_deaths.iso_code != countries_with_high_emission.iso_code
AND countries_with_high_deaths.iso_code != NULL
AND countries_with_high_emission.iso_code != NULL
LIMIT 0, 1000
: 1 row(s) returned
[88, 14:05:36] SELECT COUNT(*)
FROM Left_Outer
LIMIT 0, 1000
: Running...
[88, 14:05:36] SELECT COUNT(*)
FROM Left_Outer
LIMIT 0, 1000
: Fetching...
[88, 14:05:36] SELECT COUNT(*)
FROM Left_Outer
LIMIT 0, 1000
: 1 row(s) returned
[89, 14:06:22] SELECT *
FROM countries_with_high_deaths LEFT JOIN countries_with_high_emission
ON countries_with_high_emission.iso_code IS NOT NULL
LIMIT 0, 1000
: Running...
[89, 14:06:23] SELECT *
FROM countries_with_high_deaths LEFT JOIN countries_with_high_emission
ON countries_with_high_emission.iso_code IS NOT NULL
LIMIT 0, 1000
: Fetching...
[89, 14:06:23] SELECT *
FROM countries_with_high_deaths LEFT JOIN countries_with_high_emission
ON countries_with_high_emission.iso_code IS NOT NULL
LIMIT 0, 1000
: 928 row(s) returned
[90, 14:06:53] SELECT *
FROM countries_with_high_deaths LEFT JOIN countries_with_high_emission
ON countries_with_high_emission.iso_code IS NOT NULL
WHERE countries_with_high_emission.iso_code = countries_with_high_deaths.iso_code
LIMIT 0, 1000
: Running...
[90, 14:06:53] SELECT *
FROM countries_with_high_deaths LEFT JOIN countries_with_high_emission
ON countries_with_high_emission.iso_code IS NOT NULL
WHERE countries_with_high_emission.iso_code = countries_with_high_deaths.iso_code
LIMIT 0, 1000
: Fetching...
[90, 14:06:53] SELECT *
FROM countries_with_high_deaths LEFT JOIN countries_with_high_emission
ON countries_with_high_emission.iso_code IS NOT NULL
WHERE countries_with_high_emission.iso_code = countries_with_high_deaths.iso_code
LIMIT 0, 1000
: 10 row(s) returned
[91, 14:07:02] SELECT COUNT(*)
FROM countries_with_high_deaths LEFT JOIN countries_with_high_emission
ON countries_with_high_emission.iso_code IS NOT NULL
WHERE countries_with_high_emission.iso_code = countries_with_high_deaths.iso_code
LIMIT 0, 1000
: Running...
[91, 14:07:02] SELECT COUNT(*)
FROM countries_with_high_deaths LEFT JOIN countries_with_high_emission
ON countries_with_high_emission.iso_code IS NOT NULL
WHERE countries_with_high_emission.iso_code = countries_with_high_deaths.iso_code
LIMIT 0, 1000
: Fetching...
[91, 14:07:02] SELECT COUNT(*)
FROM countries_with_high_deaths LEFT JOIN countries_with_high_emission
ON countries_with_high_emission.iso_code IS NOT NULL
WHERE countries_with_high_emission.iso_code = countries_with_high_deaths.iso_code
LIMIT 0, 1000
: 1 row(s) returned
[92, 14:08:31] SELECT COUNT(*)
FROM countries_with_high_deaths LEFT JOIN countries_with_high_emission
ON countries_with_high_emission.iso_code IS  NULL
WHERE countries_with_high_emission.iso_code = countries_with_high_deaths.iso_code
LIMIT 0, 1000
: Running...
[92, 14:08:31] SELECT COUNT(*)
FROM countries_with_high_deaths LEFT JOIN countries_with_high_emission
ON countries_with_high_emission.iso_code IS  NULL
WHERE countries_with_high_emission.iso_code = countries_with_high_deaths.iso_code
LIMIT 0, 1000
: Fetching...
[92, 14:08:31] SELECT COUNT(*)
FROM countries_with_high_deaths LEFT JOIN countries_with_high_emission
ON countries_with_high_emission.iso_code IS  NULL
WHERE countries_with_high_emission.iso_code = countries_with_high_deaths.iso_code
LIMIT 0, 1000
: 1 row(s) returned
[93, 14:09:08] SELECT COUNT(*)
FROM countries_with_high_deaths LEFT JOIN countries_with_high_emission
ON countries_with_high_emission.iso_code = countries_with_high_deaths.iso_code 
WHERE countries_with_high_deaths.iso_code IS NULL
LIMIT 0, 1000
: Running...
[93, 14:09:08] SELECT COUNT(*)
FROM countries_with_high_deaths LEFT JOIN countries_with_high_emission
ON countries_with_high_emission.iso_code = countries_with_high_deaths.iso_code 
WHERE countries_with_high_deaths.iso_code IS NULL
LIMIT 0, 1000
: Fetching...
[93, 14:09:08] SELECT COUNT(*)
FROM countries_with_high_deaths LEFT JOIN countries_with_high_emission
ON countries_with_high_emission.iso_code = countries_with_high_deaths.iso_code 
WHERE countries_with_high_deaths.iso_code IS NULL
LIMIT 0, 1000
: 1 row(s) returned
[94, 14:09:17] SELECT COUNT(*)
FROM countries_with_high_deaths LEFT JOIN countries_with_high_emission
ON countries_with_high_emission.iso_code = countries_with_high_deaths.iso_code 
WHERE countries_with_high_emission.iso_code IS NULL
LIMIT 0, 1000
: Running...
[94, 14:09:17] SELECT COUNT(*)
FROM countries_with_high_deaths LEFT JOIN countries_with_high_emission
ON countries_with_high_emission.iso_code = countries_with_high_deaths.iso_code 
WHERE countries_with_high_emission.iso_code IS NULL
LIMIT 0, 1000
: Fetching...
[94, 14:09:17] SELECT COUNT(*)
FROM countries_with_high_deaths LEFT JOIN countries_with_high_emission
ON countries_with_high_emission.iso_code = countries_with_high_deaths.iso_code 
WHERE countries_with_high_emission.iso_code IS NULL
LIMIT 0, 1000
: 1 row(s) returned
[95, 14:09:38] SELECT * -- has 19 countries
FROM Left_Outer
LIMIT 0, 1000
: Running...
[95, 14:09:38] SELECT * -- has 19 countries
FROM Left_Outer
LIMIT 0, 1000
: Fetching...
[95, 14:09:38] SELECT * -- has 19 countries
FROM Left_Outer
LIMIT 0, 1000
: 19 row(s) returned
[96, 14:09:38] SELECT * -- has 19 countries
FROM countries_with_high_deaths LEFT JOIN countries_with_high_emission
ON countries_with_high_emission.iso_code = countries_with_high_deaths.iso_code 
WHERE countries_with_high_emission.iso_code IS NULL
LIMIT 0, 1000
: Running...
[96, 14:09:38] SELECT * -- has 19 countries
FROM countries_with_high_deaths LEFT JOIN countries_with_high_emission
ON countries_with_high_emission.iso_code = countries_with_high_deaths.iso_code 
WHERE countries_with_high_emission.iso_code IS NULL
LIMIT 0, 1000
: Fetching...
[96, 14:09:39] SELECT * -- has 19 countries
FROM countries_with_high_deaths LEFT JOIN countries_with_high_emission
ON countries_with_high_emission.iso_code = countries_with_high_deaths.iso_code 
WHERE countries_with_high_emission.iso_code IS NULL
LIMIT 0, 1000
: 19 row(s) returned
[97, 14:09:47] SELECT * -- has 19 countries
FROM Left_Outer
LIMIT 0, 1000
: Running...
[97, 14:09:47] SELECT * -- has 19 countries
FROM Left_Outer
LIMIT 0, 1000
: Fetching...
[97, 14:09:47] SELECT * -- has 19 countries
FROM Left_Outer
LIMIT 0, 1000
: 19 row(s) returned
[98, 14:10:10] SELECT * -- has 19 countries
FROM countries_with_high_deaths LEFT JOIN countries_with_high_emission
ON countries_with_high_emission.iso_code = countries_with_high_deaths.iso_code 
WHERE countries_with_high_emission.iso_code IS NULL
LIMIT 0, 1000
: Running...
[98, 14:10:10] SELECT * -- has 19 countries
FROM countries_with_high_deaths LEFT JOIN countries_with_high_emission
ON countries_with_high_emission.iso_code = countries_with_high_deaths.iso_code 
WHERE countries_with_high_emission.iso_code IS NULL
LIMIT 0, 1000
: Fetching...
[98, 14:10:10] SELECT * -- has 19 countries
FROM countries_with_high_deaths LEFT JOIN countries_with_high_emission
ON countries_with_high_emission.iso_code = countries_with_high_deaths.iso_code 
WHERE countries_with_high_emission.iso_code IS NULL
LIMIT 0, 1000
: 19 row(s) returned
[99, 14:10:13] SELECT * -- has 19 countries
FROM Left_Outer
LIMIT 0, 1000
: Running...
[99, 14:10:13] SELECT * -- has 19 countries
FROM Left_Outer
LIMIT 0, 1000
: Fetching...
[99, 14:10:13] SELECT * -- has 19 countries
FROM Left_Outer
LIMIT 0, 1000
: 19 row(s) returned
[100, 14:13:19] CREATE VIEW high_air_pollution_deaths AS
	SELECT iso_code -- has 23 countries
    FROM air_pollution_deaths_of_countries APC , air_pollution_deaths_worldwide APWW
	WHERE APC.Average_Deaths_by_Outdoor_Air_Pollution > APWW.Average_Deaths_by_Outdoor_Air_Pollution_worldwide: Running...
[100, 14:13:19] CREATE VIEW high_air_pollution_deaths AS
	SELECT iso_code -- has 23 countries
    FROM air_pollution_deaths_of_countries APC , air_pollution_deaths_worldwide APWW
	WHERE APC.Average_Deaths_by_Outdoor_Air_Pollution > APWW.Average_Deaths_by_Outdoor_Air_Pollution_worldwide: 0 row(s) affected
[101, 14:13:36] SELECT COUNT(*)
FROM high_air_pollution_deaths
LIMIT 0, 1000
: Running...
[101, 14:13:36] SELECT COUNT(*)
FROM high_air_pollution_deaths
LIMIT 0, 1000
: Fetching...
[101, 14:13:36] SELECT COUNT(*)
FROM high_air_pollution_deaths
LIMIT 0, 1000
: 1 row(s) returned
[102, 14:14:11] CREATE VIEW high_household_air_pollution_deaths AS
	SELECT iso_code -- has 23 countries
    FROM air_pollution_deaths_of_countries APC , air_pollution_deaths_worldwide APWW
	WHERE APC.Average_Deaths_by_Outdoor_Air_Pollution > APWW.Average_Deaths_by_Outdoor_Air_Pollution_worldwide: Running...
[102, 14:14:11] CREATE VIEW high_household_air_pollution_deaths AS
	SELECT iso_code -- has 23 countries
    FROM air_pollution_deaths_of_countries APC , air_pollution_deaths_worldwide APWW
	WHERE APC.Average_Deaths_by_Outdoor_Air_Pollution > APWW.Average_Deaths_by_Outdoor_Air_Pollution_worldwide: 0 row(s) affected
[103, 14:14:27] SELECT COUNT(*)
FROM high_air_pollution_deaths

SELECT COUNT(*)
FROM high_household_air_pollution_deaths: Running...
[103, 14:14:27] SELECT COUNT(*)
FROM high_air_pollution_deaths

SELECT COUNT(*)
FROM high_household_air_pollution_deaths: Error Code: 1064. You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'SELECT COUNT(*)
FROM high_household_air_pollution_deaths' at line 4
[104, 14:14:33] SELECT COUNT(*)
FROM high_household_air_pollution_deaths
LIMIT 0, 1000
: Running...
[104, 14:14:33] SELECT COUNT(*)
FROM high_household_air_pollution_deaths
LIMIT 0, 1000
: Fetching...
[104, 14:14:33] SELECT COUNT(*)
FROM high_household_air_pollution_deaths
LIMIT 0, 1000
: 1 row(s) returned
[105, 14:15:17] SELECT *
FROM high_air_pollution_deaths APD, high_household_air_pollution_deaths HHAPD
LIMIT 0, 1000
: Running...
[105, 14:15:17] SELECT *
FROM high_air_pollution_deaths APD, high_household_air_pollution_deaths HHAPD
LIMIT 0, 1000
: Fetching...
[105, 14:15:17] SELECT *
FROM high_air_pollution_deaths APD, high_household_air_pollution_deaths HHAPD
LIMIT 0, 1000
: 529 row(s) returned
[106, 14:15:48] SELECT *
FROM high_air_pollution_deaths APD, high_household_air_pollution_deaths HHAPD
WHERE APD.iso_code = HHAPD.iso_code
LIMIT 0, 1000
: Running...
[106, 14:15:48] SELECT *
FROM high_air_pollution_deaths APD, high_household_air_pollution_deaths HHAPD
WHERE APD.iso_code = HHAPD.iso_code
LIMIT 0, 1000
: Fetching...
[106, 14:15:48] SELECT *
FROM high_air_pollution_deaths APD, high_household_air_pollution_deaths HHAPD
WHERE APD.iso_code = HHAPD.iso_code
LIMIT 0, 1000
: 23 row(s) returned
[107, 14:15:59] SELECT COUNT(*)
FROM high_air_pollution_deaths APD, high_household_air_pollution_deaths HHAPD
WHERE APD.iso_code = HHAPD.iso_code
LIMIT 0, 1000
: Running...
[107, 14:15:59] SELECT COUNT(*)
FROM high_air_pollution_deaths APD, high_household_air_pollution_deaths HHAPD
WHERE APD.iso_code = HHAPD.iso_code
LIMIT 0, 1000
: Fetching...
[107, 14:15:59] SELECT COUNT(*)
FROM high_air_pollution_deaths APD, high_household_air_pollution_deaths HHAPD
WHERE APD.iso_code = HHAPD.iso_code
LIMIT 0, 1000
: 1 row(s) returned
[108, 14:16:14] DROP TABLE high_household_air_pollution_deaths: Running...
[108, 14:16:14] DROP TABLE high_household_air_pollution_deaths: Error Code: 1051. Unknown table 'cs306-project.high_household_air_pollution_deaths'
[109, 14:16:22] DROP VIEW high_household_air_pollution_deaths: Running...
[109, 14:16:22] DROP VIEW high_household_air_pollution_deaths: 0 row(s) affected
[110, 14:17:08] CREATE VIEW high_household_air_pollution_deaths AS
	SELECT iso_code -- has 21 countries
	FROM air_pollution_deaths_of_countries APC , air_pollution_deaths_worldwide APWW
	WHERE APC.Average_Deaths_by_Household_Air_Pollution > APWW.Average_Deaths_by_Household_Air_Pollution_worldwide: Running...
[110, 14:17:08] CREATE VIEW high_household_air_pollution_deaths AS
	SELECT iso_code -- has 21 countries
	FROM air_pollution_deaths_of_countries APC , air_pollution_deaths_worldwide APWW
	WHERE APC.Average_Deaths_by_Household_Air_Pollution > APWW.Average_Deaths_by_Household_Air_Pollution_worldwide: 0 row(s) affected
[111, 14:17:20] SELECT COUNT(*)
FROM high_household_air_pollution_deaths
LIMIT 0, 1000
: Running...
[111, 14:17:20] SELECT COUNT(*)
FROM high_household_air_pollution_deaths
LIMIT 0, 1000
: Fetching...
[111, 14:17:20] SELECT COUNT(*)
FROM high_household_air_pollution_deaths
LIMIT 0, 1000
: 1 row(s) returned
[112, 14:17:25] SELECT COUNT(*)
FROM high_air_pollution_deaths APD, high_household_air_pollution_deaths HHAPD
WHERE APD.iso_code = HHAPD.iso_code
LIMIT 0, 1000
: Running...
[112, 14:17:25] SELECT COUNT(*)
FROM high_air_pollution_deaths APD, high_household_air_pollution_deaths HHAPD
WHERE APD.iso_code = HHAPD.iso_code
LIMIT 0, 1000
: Fetching...
[112, 14:17:25] SELECT COUNT(*)
FROM high_air_pollution_deaths APD, high_household_air_pollution_deaths HHAPD
WHERE APD.iso_code = HHAPD.iso_code
LIMIT 0, 1000
: 1 row(s) returned
[113, 14:18:39] SELECT iso_code
FROM high_air_pollution_deaths APD
WHERE APD.iso_code IN 
(
	SELECT iso_code -- has 21 countries
		FROM air_pollution_deaths_of_countries APC , air_pollution_deaths_worldwide APWW
		WHERE APC.Average_Deaths_by_Household_Air_Pollution > APWW.Average_Deaths_by_Household_Air_Pollution_worldwide: Running...
[113, 14:18:39] SELECT iso_code
FROM high_air_pollution_deaths APD
WHERE APD.iso_code IN 
(
	SELECT iso_code -- has 21 countries
		FROM air_pollution_deaths_of_countries APC , air_pollution_deaths_worldwide APWW
		WHERE APC.Average_Deaths_by_Household_Air_Pollution > APWW.Average_Deaths_by_Household_Air_Pollution_worldwide: Error Code: 1064. You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' at line 7
[114, 14:18:57] SELECT iso_code -- has 21 countries
		FROM air_pollution_deaths_of_countries APC , air_pollution_deaths_worldwide APWW
		WHERE APC.Average_Deaths_by_Household_Air_Pollution > APWW.Average_Deaths_by_Household_Air_Pollution_worldwide
LIMIT 0, 1000
: Running...
[114, 14:18:57] SELECT iso_code -- has 21 countries
		FROM air_pollution_deaths_of_countries APC , air_pollution_deaths_worldwide APWW
		WHERE APC.Average_Deaths_by_Household_Air_Pollution > APWW.Average_Deaths_by_Household_Air_Pollution_worldwide
LIMIT 0, 1000
: Fetching...
[114, 14:18:57] SELECT iso_code -- has 21 countries
		FROM air_pollution_deaths_of_countries APC , air_pollution_deaths_worldwide APWW
		WHERE APC.Average_Deaths_by_Household_Air_Pollution > APWW.Average_Deaths_by_Household_Air_Pollution_worldwide
LIMIT 0, 1000
: 21 row(s) returned
[115, 14:19:57] SELECT iso_code
FROM high_air_pollution_deaths APD
WHERE APD.iso_code IN 
(
		SELECT iso_code -- has 21 countries
		FROM air_pollution_deaths_of_countries APC , air_pollution_deaths_worldwide APWW
		WHERE APC.Average_Deaths_by_Household_Air_Pollution > APWW.Average_Deaths_by_Household_Air_Pollution_worldwide
	)
LIMIT 0, 1000
: Running...
[115, 14:19:57] SELECT iso_code
FROM high_air_pollution_deaths APD
WHERE APD.iso_code IN 
(
		SELECT iso_code -- has 21 countries
		FROM air_pollution_deaths_of_countries APC , air_pollution_deaths_worldwide APWW
		WHERE APC.Average_Deaths_by_Household_Air_Pollution > APWW.Average_Deaths_by_Household_Air_Pollution_worldwide
	)
LIMIT 0, 1000
: Fetching...
[115, 14:19:57] SELECT iso_code
FROM high_air_pollution_deaths APD
WHERE APD.iso_code IN 
(
		SELECT iso_code -- has 21 countries
		FROM air_pollution_deaths_of_countries APC , air_pollution_deaths_worldwide APWW
		WHERE APC.Average_Deaths_by_Household_Air_Pollution > APWW.Average_Deaths_by_Household_Air_Pollution_worldwide
	)
LIMIT 0, 1000
: 15 row(s) returned
[116, 14:20:07] SELECT COUNT(*)
FROM high_air_pollution_deaths APD
WHERE APD.iso_code IN 
(
		SELECT iso_code -- has 21 countries
		FROM air_pollution_deaths_of_countries APC , air_pollution_deaths_worldwide APWW
		WHERE APC.Average_Deaths_by_Household_Air_Pollution > APWW.Average_Deaths_by_Household_Air_Pollution_worldwide
	)
LIMIT 0, 1000
: Running...
[116, 14:20:07] SELECT COUNT(*)
FROM high_air_pollution_deaths APD
WHERE APD.iso_code IN 
(
		SELECT iso_code -- has 21 countries
		FROM air_pollution_deaths_of_countries APC , air_pollution_deaths_worldwide APWW
		WHERE APC.Average_Deaths_by_Household_Air_Pollution > APWW.Average_Deaths_by_Household_Air_Pollution_worldwide
	)
LIMIT 0, 1000
: Fetching...
[116, 14:20:07] SELECT COUNT(*)
FROM high_air_pollution_deaths APD
WHERE APD.iso_code IN 
(
		SELECT iso_code -- has 21 countries
		FROM air_pollution_deaths_of_countries APC , air_pollution_deaths_worldwide APWW
		WHERE APC.Average_Deaths_by_Household_Air_Pollution > APWW.Average_Deaths_by_Household_Air_Pollution_worldwide
	)
LIMIT 0, 1000
: 1 row(s) returned
[117, 14:20:44] SELECT COUNT(*)
FROM high_air_pollution_deaths APD, high_household_air_pollution_deaths HHAPD
WHERE APD.iso_code = HHAPD.iso_code
LIMIT 0, 1000
: Running...
[117, 14:20:44] SELECT COUNT(*)
FROM high_air_pollution_deaths APD, high_household_air_pollution_deaths HHAPD
WHERE APD.iso_code = HHAPD.iso_code
LIMIT 0, 1000
: Fetching...
[117, 14:20:44] SELECT COUNT(*)
FROM high_air_pollution_deaths APD, high_household_air_pollution_deaths HHAPD
WHERE APD.iso_code = HHAPD.iso_code
LIMIT 0, 1000
: 1 row(s) returned
[118, 14:21:37] SELECT iso_code -- has 15 countries as well
FROM high_air_pollution_deaths APD
WHERE APD.iso_code EXISTS 
(
		SELECT iso_code -- has 21 countries
		FROM air_pollution_deaths_of_countries APC , air_pollution_deaths_worldwide APWW
		WHERE APC.Average_Deaths_by_Household_Air_Pollution > APWW.Average_Deaths_by_Household_Air_Pollution_worldwide
	): Running...
[118, 14:21:37] SELECT iso_code -- has 15 countries as well
FROM high_air_pollution_deaths APD
WHERE APD.iso_code EXISTS 
(
		SELECT iso_code -- has 21 countries
		FROM air_pollution_deaths_of_countries APC , air_pollution_deaths_worldwide APWW
		WHERE APC.Average_Deaths_by_Household_Air_Pollution > APWW.Average_Deaths_by_Household_Air_Pollution_worldwide
	): Error Code: 1064. You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'EXISTS 
(
		SELECT iso_code -- has 21 countries
		FROM air_pollution_deaths_of_c' at line 3
[119, 14:22:35] SELECT iso_code 
FROM high_air_pollution_deaths APD
WHERE  EXISTS 
(
		SELECT iso_code -- has 21 countries
		FROM air_pollution_deaths_of_countries APC , air_pollution_deaths_worldwide APWW
		WHERE APC.Average_Deaths_by_Household_Air_Pollution > APWW.Average_Deaths_by_Household_Air_Pollution_worldwide
        AND APD.iso_code = iso_code
	)
LIMIT 0, 1000
: Running...
[119, 14:22:35] SELECT iso_code 
FROM high_air_pollution_deaths APD
WHERE  EXISTS 
(
		SELECT iso_code -- has 21 countries
		FROM air_pollution_deaths_of_countries APC , air_pollution_deaths_worldwide APWW
		WHERE APC.Average_Deaths_by_Household_Air_Pollution > APWW.Average_Deaths_by_Household_Air_Pollution_worldwide
        AND APD.iso_code = iso_code
	)
LIMIT 0, 1000
: Fetching...
[119, 14:22:35] SELECT iso_code 
FROM high_air_pollution_deaths APD
WHERE  EXISTS 
(
		SELECT iso_code -- has 21 countries
		FROM air_pollution_deaths_of_countries APC , air_pollution_deaths_worldwide APWW
		WHERE APC.Average_Deaths_by_Household_Air_Pollution > APWW.Average_Deaths_by_Household_Air_Pollution_worldwide
        AND APD.iso_code = iso_code
	)
LIMIT 0, 1000
: 15 row(s) returned
[120, 14:22:43] SELECT COUNT(iso_code) 
FROM high_air_pollution_deaths APD
WHERE  EXISTS 
(
		SELECT iso_code -- has 21 countries
		FROM air_pollution_deaths_of_countries APC , air_pollution_deaths_worldwide APWW
		WHERE APC.Average_Deaths_by_Household_Air_Pollution > APWW.Average_Deaths_by_Household_Air_Pollution_worldwide
        AND APD.iso_code = iso_code
	)
LIMIT 0, 1000
: Running...
[120, 14:22:43] SELECT COUNT(iso_code) 
FROM high_air_pollution_deaths APD
WHERE  EXISTS 
(
		SELECT iso_code -- has 21 countries
		FROM air_pollution_deaths_of_countries APC , air_pollution_deaths_worldwide APWW
		WHERE APC.Average_Deaths_by_Household_Air_Pollution > APWW.Average_Deaths_by_Household_Air_Pollution_worldwide
        AND APD.iso_code = iso_code
	)
LIMIT 0, 1000
: Fetching...
[120, 14:22:43] SELECT COUNT(iso_code) 
FROM high_air_pollution_deaths APD
WHERE  EXISTS 
(
		SELECT iso_code -- has 21 countries
		FROM air_pollution_deaths_of_countries APC , air_pollution_deaths_worldwide APWW
		WHERE APC.Average_Deaths_by_Household_Air_Pollution > APWW.Average_Deaths_by_Household_Air_Pollution_worldwide
        AND APD.iso_code = iso_code
	)
LIMIT 0, 1000
: 1 row(s) returned
[121, 14:41:28] PRINT N'The current database is master.': Running...
[121, 14:41:28] PRINT N'The current database is master.': Error Code: 1064. You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'PRINT N'The current database is master.'' at line 1
[122, 14:45:37] CREATE PROCEDURE check_country(p1 VARCHAR)
BEGIN
	IF p1 IN countries_with_high_deaths
		SELECT 'Given country has high death numbers' AS message
	ELSE 
		SELECT 'Yoo' AS message
END: Running...
[122, 14:45:37] CREATE PROCEDURE check_country(p1 VARCHAR)
BEGIN
	IF p1 IN countries_with_high_deaths
		SELECT 'Given country has high death numbers' AS message
	ELSE 
		SELECT 'Yoo' AS message
END: Error Code: 1064. You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ')
BEGIN
	IF p1 IN countries_with_high_deaths
		SELECT 'Given country has high de' at line 1
[123, 14:46:40] CREATE PROCEDURE check_country(p1 VARCHAR)
BEGIN
	SELECT * 
    FROM countries_with_high_deaths
    Where countries_with_high_deaths.iso_code = p1
END: Running...
[123, 14:46:40] CREATE PROCEDURE check_country(p1 VARCHAR)
BEGIN
	SELECT * 
    FROM countries_with_high_deaths
    Where countries_with_high_deaths.iso_code = p1
END: Error Code: 1064. You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ')
BEGIN
	SELECT * 
    FROM countries_with_high_deaths
    Where countries_with_' at line 1
[124, 15:03:46] SELECT *
FROM countries_with_high_emission
LIMIT 0, 1000
: Running...
[124, 15:03:46] SELECT *
FROM countries_with_high_emission
LIMIT 0, 1000
: Fetching...
[124, 15:03:46] SELECT *
FROM countries_with_high_emission
LIMIT 0, 1000
: 32 row(s) returned
[125, 15:04:10] SELECT *
FROM locatedin
LIMIT 0, 1000
: Running...
[125, 15:04:10] SELECT *
FROM locatedin
LIMIT 0, 1000
: Fetching...
[125, 15:04:10] SELECT *
FROM locatedin
LIMIT 0, 1000
: 228 row(s) returned
[126, 15:04:17] SELECT *
FROM locatedin L, countries_with_high_emission C
WHERE L.iso_code = countries_with_high_emission.iso_code
GROUP BY continent_code
HAVING COUNT(*) > 2
LIMIT 0, 1000
: Running...
[126, 15:04:17] SELECT *
FROM locatedin L, countries_with_high_emission C
WHERE L.iso_code = countries_with_high_emission.iso_code
GROUP BY continent_code
HAVING COUNT(*) > 2
LIMIT 0, 1000
: Error Code: 1054. Unknown column 'countries_with_high_emission.iso_code' in 'where clause'
[127, 15:04:29] SELECT *
FROM locatedin
LIMIT 0, 1000
: Running...
[127, 15:04:29] SELECT *
FROM locatedin
LIMIT 0, 1000
: Fetching...
[127, 15:04:29] SELECT *
FROM locatedin
LIMIT 0, 1000
: 228 row(s) returned
[128, 15:04:43] SELECT *
FROM locatedin L, countries_with_high_emission C
WHERE L.iso_code = C.iso_code
GROUP BY continent_code
HAVING COUNT(*) > 2
LIMIT 0, 1000
: Running...
[128, 15:04:43] SELECT *
FROM locatedin L, countries_with_high_emission C
WHERE L.iso_code = C.iso_code
GROUP BY continent_code
HAVING COUNT(*) > 2
LIMIT 0, 1000
: Error Code: 1055. Expression #1 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'cs306-project.L.iso_code' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by
[129, 15:05:37] SELECT L.iso_code, L.continent_code
FROM locatedin L, countries_with_high_emission C
WHERE L.iso_code = C.iso_code
GROUP BY L.continent_code
HAVING COUNT(*) > 2
LIMIT 0, 1000
: Running...
[129, 15:05:37] SELECT L.iso_code, L.continent_code
FROM locatedin L, countries_with_high_emission C
WHERE L.iso_code = C.iso_code
GROUP BY L.continent_code
HAVING COUNT(*) > 2
LIMIT 0, 1000
: Error Code: 1055. Expression #1 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'cs306-project.L.iso_code' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by
[130, 15:06:39] SELECT COUNT(*)
FROM locatedin L, countries_with_high_emission C
WHERE L.iso_code = C.iso_code
GROUP BY L.continent_code
HAVING COUNT(*) > 2
LIMIT 0, 1000
: Running...
[130, 15:06:39] SELECT COUNT(*)
FROM locatedin L, countries_with_high_emission C
WHERE L.iso_code = C.iso_code
GROUP BY L.continent_code
HAVING COUNT(*) > 2
LIMIT 0, 1000
: Fetching...
[130, 15:06:39] SELECT COUNT(*)
FROM locatedin L, countries_with_high_emission C
WHERE L.iso_code = C.iso_code
GROUP BY L.continent_code
HAVING COUNT(*) > 2
LIMIT 0, 1000
: 5 row(s) returned
[131, 15:06:53] SELECT COUNT(*), L.continent_code
FROM locatedin L, countries_with_high_emission C
WHERE L.iso_code = C.iso_code
GROUP BY L.continent_code
HAVING COUNT(*) > 2
LIMIT 0, 1000
: Running...
[131, 15:06:53] SELECT COUNT(*), L.continent_code
FROM locatedin L, countries_with_high_emission C
WHERE L.iso_code = C.iso_code
GROUP BY L.continent_code
HAVING COUNT(*) > 2
LIMIT 0, 1000
: Fetching...
[131, 15:06:53] SELECT COUNT(*), L.continent_code
FROM locatedin L, countries_with_high_emission C
WHERE L.iso_code = C.iso_code
GROUP BY L.continent_code
HAVING COUNT(*) > 2
LIMIT 0, 1000
: 5 row(s) returned
[132, 15:07:53] SELECT  L.continent_code, COUNT(*) AS "Number of Countries With High Emissions",
COUNT(*) / COUNT(continent_code) as "Ratio"
FROM locatedin L, countries_with_high_emission C
WHERE L.iso_code = C.iso_code
GROUP BY L.continent_code
HAVING COUNT(*) > 2
LIMIT 0, 1000
: Running...
[132, 15:07:53] SELECT  L.continent_code, COUNT(*) AS "Number of Countries With High Emissions",
COUNT(*) / COUNT(continent_code) as "Ratio"
FROM locatedin L, countries_with_high_emission C
WHERE L.iso_code = C.iso_code
GROUP BY L.continent_code
HAVING COUNT(*) > 2
LIMIT 0, 1000
: Fetching...
[132, 15:07:53] SELECT  L.continent_code, COUNT(*) AS "Number of Countries With High Emissions",
COUNT(*) / COUNT(continent_code) as "Ratio"
FROM locatedin L, countries_with_high_emission C
WHERE L.iso_code = C.iso_code
GROUP BY L.continent_code
HAVING COUNT(*) > 2
LIMIT 0, 1000
: 5 row(s) returned
[133, 15:09:50] SELECT  L.continent_code, COUNT(*) AS "Number of Countries With High Emissions from Given Region",
COUNT(*) / COUNT(L.iso_code) as "Ratio"
FROM locatedin L, countries_with_high_emission C
WHERE L.iso_code = C.iso_code
GROUP BY L.continent_code
HAVING COUNT(*) > 2
LIMIT 0, 1000
: Running...
[133, 15:09:50] SELECT  L.continent_code, COUNT(*) AS "Number of Countries With High Emissions from Given Region",
COUNT(*) / COUNT(L.iso_code) as "Ratio"
FROM locatedin L, countries_with_high_emission C
WHERE L.iso_code = C.iso_code
GROUP BY L.continent_code
HAVING COUNT(*) > 2
LIMIT 0, 1000
: Fetching...
[133, 15:09:50] SELECT  L.continent_code, COUNT(*) AS "Number of Countries With High Emissions from Given Region",
COUNT(*) / COUNT(L.iso_code) as "Ratio"
FROM locatedin L, countries_with_high_emission C
WHERE L.iso_code = C.iso_code
GROUP BY L.continent_code
HAVING COUNT(*) > 2
LIMIT 0, 1000
: 5 row(s) returned
[134, 15:09:58] SELECT  L.continent_code, COUNT(*) AS "Number of Countries With High Emissions from Given Region",
COUNT(*) / COUNT(L.continent_code) as "Ratio"
FROM locatedin L, countries_with_high_emission C
WHERE L.iso_code = C.iso_code
GROUP BY L.continent_code
HAVING COUNT(*) > 2
LIMIT 0, 1000
: Running...
[134, 15:09:58] SELECT  L.continent_code, COUNT(*) AS "Number of Countries With High Emissions from Given Region",
COUNT(*) / COUNT(L.continent_code) as "Ratio"
FROM locatedin L, countries_with_high_emission C
WHERE L.iso_code = C.iso_code
GROUP BY L.continent_code
HAVING COUNT(*) > 2
LIMIT 0, 1000
: Fetching...
[134, 15:09:58] SELECT  L.continent_code, COUNT(*) AS "Number of Countries With High Emissions from Given Region",
COUNT(*) / COUNT(L.continent_code) as "Ratio"
FROM locatedin L, countries_with_high_emission C
WHERE L.iso_code = C.iso_code
GROUP BY L.continent_code
HAVING COUNT(*) > 2
LIMIT 0, 1000
: 5 row(s) returned
[135, 15:12:44] SELECT COUNT(*) -- has 29 countries that have above average death numbers due to air pollution
FROM countries_with_high_deaths
LIMIT 0, 1000
: Running...
[135, 15:12:44] SELECT COUNT(*) -- has 29 countries that have above average death numbers due to air pollution
FROM countries_with_high_deaths
LIMIT 0, 1000
: Fetching...
[135, 15:12:45] SELECT COUNT(*) -- has 29 countries that have above average death numbers due to air pollution
FROM countries_with_high_deaths
LIMIT 0, 1000
: 1 row(s) returned
[136, 15:12:57] SELECT COUNT(*) -- has 29 countries that have above average emission numbers
FROM countries_with_high_emission
LIMIT 0, 1000
: Running...
[136, 15:12:57] SELECT COUNT(*) -- has 29 countries that have above average emission numbers
FROM countries_with_high_emission
LIMIT 0, 1000
: Fetching...
[136, 15:12:57] SELECT COUNT(*) -- has 29 countries that have above average emission numbers
FROM countries_with_high_emission
LIMIT 0, 1000
: 1 row(s) returned
[137, 15:14:47] SELECT * FROM `cs306-project`.nature_deaths
LIMIT 0, 1000
: Running...
[137, 15:14:47] SELECT * FROM `cs306-project`.nature_deaths
LIMIT 0, 1000
: Fetching...
[137, 15:14:47] SELECT * FROM `cs306-project`.nature_deaths
LIMIT 0, 1000
: 1000 row(s) returned
[138, 15:36:12] ALTER TABLE nature_deaths ADD CONSTRAINT check_interval CHECK (deaths_by_unsafe_water_source >= MIN(deaths_by_unsafe_water_source)  AND deaths_by_unsafe_water_source <= MAX(deaths_by_unsafe_water_source)): Running...
[138, 15:36:12] ALTER TABLE nature_deaths ADD CONSTRAINT check_interval CHECK (deaths_by_unsafe_water_source >= MIN(deaths_by_unsafe_water_source)  AND deaths_by_unsafe_water_source <= MAX(deaths_by_unsafe_water_source)): Error Code: 1111. Invalid use of group function
[139, 15:37:24] ALTER TABLE nature_deaths ADD CONSTRAINT check_interval CHECK (deaths_by_unsafe_water_source >= @bottom  AND deaths_by_unsafe_water_source <= @top): Running...
[139, 15:37:24] ALTER TABLE nature_deaths ADD CONSTRAINT check_interval CHECK (deaths_by_unsafe_water_source >= @bottom  AND deaths_by_unsafe_water_source <= @top): Error Code: 3816. An expression of a check constraint 'check_interval' cannot refer to a user or system variable.
[140, 15:37:48] ALTER TABLE nature_deaths ADD CONSTRAINT check_interval CHECK (deaths_by_unsafe_water_source >= MIN(deaths_by_unsafe_water_source)  AND deaths_by_unsafe_water_source <= MAX(deaths_by_unsafe_water_source)): Running...
[140, 15:37:48] ALTER TABLE nature_deaths ADD CONSTRAINT check_interval CHECK (deaths_by_unsafe_water_source >= MIN(deaths_by_unsafe_water_source)  AND deaths_by_unsafe_water_source <= MAX(deaths_by_unsafe_water_source)): Error Code: 1111. Invalid use of group function
[1, 16:56:18] SELECT * FROM `cs306-project`.nature_deaths
LIMIT 0, 1000
: Running...
[1, 16:56:18] SELECT * FROM `cs306-project`.nature_deaths
LIMIT 0, 1000
: Fetching...
[1, 16:56:18] SELECT * FROM `cs306-project`.nature_deaths
LIMIT 0, 1000
: 1000 row(s) returned
[2, 17:16:32] DROP Procedure IF EXISTS get_death_numbers: Running...
[2, 17:16:32] DROP Procedure IF EXISTS get_death_numbers: 0 row(s) affected, 1 warning(s):
1305 PROCEDURE cs306-project.get_death_numbers does not exist
[3, 17:16:32] CREATE PROCEDURE get_death_numbers (IN iso_code1 VARCHAR(5))  
BEGIN  
    SELECT iso_code as "Country Code", "year", 
    deaths_by_unsafe_water_source as "Deaths by Unsafe Water Source", 
    deaths_by_unsafe_sanitation as "Deaths by Unsafe Sanitation"
    FROM nature_deaths nd
    WHERE nd.iso_code = iso_code1;     
END: Running...
[3, 17:16:32] CREATE PROCEDURE get_death_numbers (IN iso_code1 VARCHAR(5))  
BEGIN  
    SELECT iso_code as "Country Code", "year", 
    deaths_by_unsafe_water_source as "Deaths by Unsafe Water Source", 
    deaths_by_unsafe_sanitation as "Deaths by Unsafe Sanitation"
    FROM nature_deaths nd
    WHERE nd.iso_code = iso_code1;     
END: 0 row(s) affected
[4, 17:16:36] CALL get_death_numbers("AFG"): Running...
[4, 17:16:36] CALL get_death_numbers("AFG"): Fetching...
[4, 17:16:36] CALL get_death_numbers("AFG"): 30 row(s) returned
[5, 17:16:46] DROP Procedure IF EXISTS get_death_numbers: Running...
[5, 17:16:46] DROP Procedure IF EXISTS get_death_numbers: 0 row(s) affected
[6, 17:16:46] CREATE PROCEDURE get_death_numbers (IN iso_code1 VARCHAR(5))  
BEGIN  
    SELECT iso_code as "Country Code", year, 
    deaths_by_unsafe_water_source as "Deaths by Unsafe Water Source", 
    deaths_by_unsafe_sanitation as "Deaths by Unsafe Sanitation"
    FROM nature_deaths nd
    WHERE nd.iso_code = iso_code1;     
END: Running...
[6, 17:16:46] CREATE PROCEDURE get_death_numbers (IN iso_code1 VARCHAR(5))  
BEGIN  
    SELECT iso_code as "Country Code", year, 
    deaths_by_unsafe_water_source as "Deaths by Unsafe Water Source", 
    deaths_by_unsafe_sanitation as "Deaths by Unsafe Sanitation"
    FROM nature_deaths nd
    WHERE nd.iso_code = iso_code1;     
END: 0 row(s) affected
[7, 17:16:49] CALL get_death_numbers("AFG"): Running...
[7, 17:16:49] CALL get_death_numbers("AFG"): Fetching...
[7, 17:16:49] CALL get_death_numbers("AFG"): 30 row(s) returned
[8, 17:19:31] SELECT * FROM `cs306-project`.diet_deaths
LIMIT 0, 1000
: Running...
[8, 17:19:31] SELECT * FROM `cs306-project`.diet_deaths
LIMIT 0, 1000
: Fetching...
[8, 17:19:31] SELECT * FROM `cs306-project`.diet_deaths
LIMIT 0, 1000
: 1000 row(s) returned
[9, 17:21:33] SELECT * -- has 19 countries
FROM countries_with_high_deaths LEFT JOIN countries_with_high_emission
ON countries_with_high_emission.iso_code = countries_with_high_deaths.iso_code 
WHERE countries_with_high_emission.iso_code IS NULL
LIMIT 0, 1000
: Running...
[9, 17:21:33] SELECT * -- has 19 countries
FROM countries_with_high_deaths LEFT JOIN countries_with_high_emission
ON countries_with_high_emission.iso_code = countries_with_high_deaths.iso_code 
WHERE countries_with_high_emission.iso_code IS NULL
LIMIT 0, 1000
: Fetching...
[9, 17:21:33] SELECT * -- has 19 countries
FROM countries_with_high_deaths LEFT JOIN countries_with_high_emission
ON countries_with_high_emission.iso_code = countries_with_high_deaths.iso_code 
WHERE countries_with_high_emission.iso_code IS NULL
LIMIT 0, 1000
: 19 row(s) returned
[10, 17:21:45] SELECT countries_with_high_deaths.iso_code -- has 19 countries
FROM countries_with_high_deaths LEFT JOIN countries_with_high_emission
ON countries_with_high_emission.iso_code = countries_with_high_deaths.iso_code 
WHERE countries_with_high_emission.iso_code IS NULL
LIMIT 0, 1000
: Running...
[10, 17:21:45] SELECT countries_with_high_deaths.iso_code -- has 19 countries
FROM countries_with_high_deaths LEFT JOIN countries_with_high_emission
ON countries_with_high_emission.iso_code = countries_with_high_deaths.iso_code 
WHERE countries_with_high_emission.iso_code IS NULL
LIMIT 0, 1000
: Fetching...
[10, 17:21:45] SELECT countries_with_high_deaths.iso_code -- has 19 countries
FROM countries_with_high_deaths LEFT JOIN countries_with_high_emission
ON countries_with_high_emission.iso_code = countries_with_high_deaths.iso_code 
WHERE countries_with_high_emission.iso_code IS NULL
LIMIT 0, 1000
: 19 row(s) returned
[11, 17:22:07] SELECT countries_with_high_deaths.iso_code -- has 19 countries
FROM countries_with_high_deaths LEFT JOIN countries_with_high_emission
ON countries_with_high_emission.iso_code = countries_with_high_deaths.iso_code 
-- tam olarak nasil calisiyor anlamadim // soru
LIMIT 0, 1000
: Running...
[11, 17:22:07] SELECT countries_with_high_deaths.iso_code -- has 19 countries
FROM countries_with_high_deaths LEFT JOIN countries_with_high_emission
ON countries_with_high_emission.iso_code = countries_with_high_deaths.iso_code 
-- tam olarak nasil calisiyor anlamadim // soru
LIMIT 0, 1000
: Fetching...
[11, 17:22:07] SELECT countries_with_high_deaths.iso_code -- has 19 countries
FROM countries_with_high_deaths LEFT JOIN countries_with_high_emission
ON countries_with_high_emission.iso_code = countries_with_high_deaths.iso_code 
-- tam olarak nasil calisiyor anlamadim // soru
LIMIT 0, 1000
: 29 row(s) returned
[12, 17:22:20] SELECT * -- has 19 countries
FROM countries_with_high_deaths LEFT JOIN countries_with_high_emission
ON countries_with_high_emission.iso_code = countries_with_high_deaths.iso_code 
-- tam o
LIMIT 0, 1000
: Running...
[12, 17:22:20] SELECT * -- has 19 countries
FROM countries_with_high_deaths LEFT JOIN countries_with_high_emission
ON countries_with_high_emission.iso_code = countries_with_high_deaths.iso_code 
-- tam o
LIMIT 0, 1000
: Fetching...
[12, 17:22:21] SELECT * -- has 19 countries
FROM countries_with_high_deaths LEFT JOIN countries_with_high_emission
ON countries_with_high_emission.iso_code = countries_with_high_deaths.iso_code 
-- tam o
LIMIT 0, 1000
: 29 row(s) returned
[13, 17:23:13] SELECT COUNT(*) -- has 29 countries that have above average death numbers due to air pollution
FROM countries_with_high_deaths
LIMIT 0, 1000
: Running...
[13, 17:23:13] SELECT COUNT(*) -- has 29 countries that have above average death numbers due to air pollution
FROM countries_with_high_deaths
LIMIT 0, 1000
: Fetching...
[13, 17:23:13] SELECT COUNT(*) -- has 29 countries that have above average death numbers due to air pollution
FROM countries_with_high_deaths
LIMIT 0, 1000
: 1 row(s) returned
[14, 17:23:23] SELECT iso_code -- has 29 countries that have above average death numbers due to air pollution
FROM countries_with_high_deaths
LIMIT 0, 1000
: Running...
[14, 17:23:23] SELECT iso_code -- has 29 countries that have above average death numbers due to air pollution
FROM countries_with_high_deaths
LIMIT 0, 1000
: Fetching...
[14, 17:23:23] SELECT iso_code -- has 29 countries that have above average death numbers due to air pollution
FROM countries_with_high_deaths
LIMIT 0, 1000
: 29 row(s) returned
[15, 17:24:50] SELECT * -- has 19 countries
FROM countries_with_high_deaths JOIN countries_with_high_emission
ON countries_with_high_emission.iso_code = countries_with_high_deaths.iso_code
LIMIT 0, 1000
: Running...
[15, 17:24:50] SELECT * -- has 19 countries
FROM countries_with_high_deaths JOIN countries_with_high_emission
ON countries_with_high_emission.iso_code = countries_with_high_deaths.iso_code
LIMIT 0, 1000
: Fetching...
[15, 17:24:50] SELECT * -- has 19 countries
FROM countries_with_high_deaths JOIN countries_with_high_emission
ON countries_with_high_emission.iso_code = countries_with_high_deaths.iso_code
LIMIT 0, 1000
: 10 row(s) returned
[16, 17:25:57] SELECT countries_with_high_deaths .iso_code -- has 19 countries
FROM countries_with_high_deaths LEFT JOIN countries_with_high_emission
ON countries_with_high_emission.iso_code = countries_with_high_deaths.iso_code 
WHERE countries_with_high_emission.iso_code IS NULL
LIMIT 0, 1000
: Running...
[16, 17:25:57] SELECT countries_with_high_deaths .iso_code -- has 19 countries
FROM countries_with_high_deaths LEFT JOIN countries_with_high_emission
ON countries_with_high_emission.iso_code = countries_with_high_deaths.iso_code 
WHERE countries_with_high_emission.iso_code IS NULL
LIMIT 0, 1000
: Fetching...
[16, 17:25:57] SELECT countries_with_high_deaths .iso_code -- has 19 countries
FROM countries_with_high_deaths LEFT JOIN countries_with_high_emission
ON countries_with_high_emission.iso_code = countries_with_high_deaths.iso_code 
WHERE countries_with_high_emission.iso_code IS NULL
LIMIT 0, 1000
: 19 row(s) returned
[17, 17:26:12] SELECT count(*) -- has 19 countries
FROM countries_with_high_deaths JOIN countries_with_high_emission
ON countries_with_high_emission.iso_code = countries_with_high_deaths.iso_code 
WHERE countries_with_high_emission.iso_code IS NULL
-- tam olarak nasil calisiyor anlamadim // soru
LIMIT 0, 1000
: Running...
[17, 17:26:12] SELECT count(*) -- has 19 countries
FROM countries_with_high_deaths JOIN countries_with_high_emission
ON countries_with_high_emission.iso_code = countries_with_high_deaths.iso_code 
WHERE countries_with_high_emission.iso_code IS NULL
-- tam olarak nasil calisiyor anlamadim // soru
LIMIT 0, 1000
: Fetching...
[17, 17:26:12] SELECT count(*) -- has 19 countries
FROM countries_with_high_deaths JOIN countries_with_high_emission
ON countries_with_high_emission.iso_code = countries_with_high_deaths.iso_code 
WHERE countries_with_high_emission.iso_code IS NULL
-- tam olarak nasil calisiyor anlamadim // soru
LIMIT 0, 1000
: 1 row(s) returned
[18, 17:26:19] SELECT count(*) -- has 19 countries
FROM countries_with_high_deaths JOIN countries_with_high_emission
ON countries_with_high_emission.iso_code = countries_with_high_deaths.iso_code
LIMIT 0, 1000
: Running...
[18, 17:26:19] SELECT count(*) -- has 19 countries
FROM countries_with_high_deaths JOIN countries_with_high_emission
ON countries_with_high_emission.iso_code = countries_with_high_deaths.iso_code
LIMIT 0, 1000
: Fetching...
[18, 17:26:19] SELECT count(*) -- has 19 countries
FROM countries_with_high_deaths JOIN countries_with_high_emission
ON countries_with_high_emission.iso_code = countries_with_high_deaths.iso_code
LIMIT 0, 1000
: 1 row(s) returned
[19, 17:29:11] SELECT count(*) -- has 19 countries
FROM countries_with_high_deaths JOIN countries_with_high_emission
ON countries_with_high_emission.iso_code = countries_with_high_deaths.iso_code 
WHERE countries_with_high_emission.iso_code IS NULL
LIMIT 0, 1000
: Running...
[19, 17:29:11] SELECT count(*) -- has 19 countries
FROM countries_with_high_deaths JOIN countries_with_high_emission
ON countries_with_high_emission.iso_code = countries_with_high_deaths.iso_code 
WHERE countries_with_high_emission.iso_code IS NULL
LIMIT 0, 1000
: Fetching...
[19, 17:29:11] SELECT count(*) -- has 19 countries
FROM countries_with_high_deaths JOIN countries_with_high_emission
ON countries_with_high_emission.iso_code = countries_with_high_deaths.iso_code 
WHERE countries_with_high_emission.iso_code IS NULL
LIMIT 0, 1000
: 1 row(s) returned
[20, 17:29:20] SELECT count(*) -- has 19 countries
FROM countries_with_high_deaths LEFT JOIN countries_with_high_emission
ON countries_with_high_emission.iso_code = countries_with_high_deaths.iso_code 
WHERE countries_with_high_emission.iso_code IS NULL
LIMIT 0, 1000
: Running...
[20, 17:29:20] SELECT count(*) -- has 19 countries
FROM countries_with_high_deaths LEFT JOIN countries_with_high_emission
ON countries_with_high_emission.iso_code = countries_with_high_deaths.iso_code 
WHERE countries_with_high_emission.iso_code IS NULL
LIMIT 0, 1000
: Fetching...
[20, 17:29:20] SELECT count(*) -- has 19 countries
FROM countries_with_high_deaths LEFT JOIN countries_with_high_emission
ON countries_with_high_emission.iso_code = countries_with_high_deaths.iso_code 
WHERE countries_with_high_emission.iso_code IS NULL
LIMIT 0, 1000
: 1 row(s) returned
[21, 17:29:32] SELECT * -- has 19 countries
FROM countries_with_high_deaths LEFT JOIN countries_with_high_emission
ON countries_with_high_emission.iso_code = countries_with_high_deaths.iso_code 
WHERE countries_with_high_emission.iso_code IS NULL
LIMIT 0, 1000
: Running...
[21, 17:29:32] SELECT * -- has 19 countries
FROM countries_with_high_deaths LEFT JOIN countries_with_high_emission
ON countries_with_high_emission.iso_code = countries_with_high_deaths.iso_code 
WHERE countries_with_high_emission.iso_code IS NULL
LIMIT 0, 1000
: Fetching...
[21, 17:29:32] SELECT * -- has 19 countries
FROM countries_with_high_deaths LEFT JOIN countries_with_high_emission
ON countries_with_high_emission.iso_code = countries_with_high_deaths.iso_code 
WHERE countries_with_high_emission.iso_code IS NULL
LIMIT 0, 1000
: 19 row(s) returned
[22, 17:36:06] SELECT  L.continent_code, COUNT(*) AS "Number of Countries With High Emissions from Given Region",
COUNT(*) / COUNT(L.continent_code) as "Ratio"
FROM locatedin L, countries_with_high_emission C
WHERE L.iso_code = C.iso_code
GROUP BY L.continent_code
HAVING COUNT(*) > 2
LIMIT 0, 1000
: Running...
[22, 17:36:06] SELECT  L.continent_code, COUNT(*) AS "Number of Countries With High Emissions from Given Region",
COUNT(*) / COUNT(L.continent_code) as "Ratio"
FROM locatedin L, countries_with_high_emission C
WHERE L.iso_code = C.iso_code
GROUP BY L.continent_code
HAVING COUNT(*) > 2
LIMIT 0, 1000
: Fetching...
[22, 17:36:06] SELECT  L.continent_code, COUNT(*) AS "Number of Countries With High Emissions from Given Region",
COUNT(*) / COUNT(L.continent_code) as "Ratio"
FROM locatedin L, countries_with_high_emission C
WHERE L.iso_code = C.iso_code
GROUP BY L.continent_code
HAVING COUNT(*) > 2
LIMIT 0, 1000
: 5 row(s) returned
[23, 17:36:29] SELECT * FROM `cs306-project`.continents
LIMIT 0, 1000
: Running...
[23, 17:36:29] SELECT * FROM `cs306-project`.continents
LIMIT 0, 1000
: Fetching...
[23, 17:36:29] SELECT * FROM `cs306-project`.continents
LIMIT 0, 1000
: 8 row(s) returned
[24, 17:36:31] SELECT * FROM `cs306-project`.locatedin
LIMIT 0, 1000
: Running...
[24, 17:36:31] SELECT * FROM `cs306-project`.locatedin
LIMIT 0, 1000
: Fetching...
[24, 17:36:32] SELECT * FROM `cs306-project`.locatedin
LIMIT 0, 1000
: 228 row(s) returned
[25, 17:40:25] set @bottom = MIN(deaths_by_unsafe_water_source): Running...
[25, 17:40:25] set @bottom = MIN(deaths_by_unsafe_water_source): Error Code: 1111. Invalid use of group function
[26, 17:42:00] SELECT * FROM `cs306-project`.nature_deaths
LIMIT 0, 1000
: Running...
[26, 17:42:00] SELECT * FROM `cs306-project`.nature_deaths
LIMIT 0, 1000
: Fetching...
[26, 17:42:00] SELECT * FROM `cs306-project`.nature_deaths
LIMIT 0, 1000
: 1000 row(s) returned
[27, 17:46:04] select  MIN(deaths_by_unsafe_water_source)
from nature_deaths
LIMIT 0, 1000
: Running...
[27, 17:46:04] select  MIN(deaths_by_unsafe_water_source)
from nature_deaths
LIMIT 0, 1000
: Fetching...
[27, 17:46:04] select  MIN(deaths_by_unsafe_water_source)
from nature_deaths
LIMIT 0, 1000
: 1 row(s) returned
[28, 17:46:17] select  MIN(deaths_by_unsafe_water_source), MAX(deaths_by_unsafe_water_source) 
from nature_deaths
LIMIT 0, 1000
: Running...
[28, 17:46:17] select  MIN(deaths_by_unsafe_water_source), MAX(deaths_by_unsafe_water_source) 
from nature_deaths
LIMIT 0, 1000
: Fetching...
[28, 17:46:17] select  MIN(deaths_by_unsafe_water_source), MAX(deaths_by_unsafe_water_source) 
from nature_deaths
LIMIT 0, 1000
: 1 row(s) returned
[29, 17:47:20] ALTER TABLE nature_deaths 
ADD CONSTRAINT check_interval 
CHECK (deaths_by_unsafe_water_source >= MIN(deaths_by_unsafe_water_source)  ): Running...
[29, 17:47:20] ALTER TABLE nature_deaths 
ADD CONSTRAINT check_interval 
CHECK (deaths_by_unsafe_water_source >= MIN(deaths_by_unsafe_water_source)  ): Error Code: 1111. Invalid use of group function
[30, 17:49:59] set @bottom = MIN(deaths_by_unsafe_water_source): Running...
[30, 17:49:59] set @bottom = MIN(deaths_by_unsafe_water_source): Error Code: 1111. Invalid use of group function
[31, 17:50:06] set @bottom = MIN(deaths_by_unsafe_water_source): Running...
[31, 17:50:06] set @bottom = MIN(deaths_by_unsafe_water_source): Error Code: 1111. Invalid use of group function
[32, 17:50:32] set @bottom = select  MIN(deaths_by_unsafe_water_source): Running...
[32, 17:50:32] set @bottom = select  MIN(deaths_by_unsafe_water_source): Error Code: 1064. You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'select  MIN(deaths_by_unsafe_water_source)' at line 1
[33, 17:51:07] set @bottom = (SELECT MIN(deaths_by_unsafe_water_source) FROM nature_deaths): Running...
[33, 17:51:07] set @bottom = (SELECT MIN(deaths_by_unsafe_water_source) FROM nature_deaths): 0 row(s) affected
[34, 17:51:21] set @top = (SELECT MAX(deaths_by_unsafe_water_source) FROM nature_deaths): Running...
[34, 17:51:21] set @top = (SELECT MAX(deaths_by_unsafe_water_source) FROM nature_deaths): 0 row(s) affected
[35, 17:51:45] ALTER TABLE nature_deaths 
ADD CONSTRAINT check_interval 
CHECK (deaths_by_unsafe_water_source >= @bottom AND deaths_by_unsafe_water_source <= @top): Running...
[35, 17:51:45] ALTER TABLE nature_deaths 
ADD CONSTRAINT check_interval 
CHECK (deaths_by_unsafe_water_source >= @bottom AND deaths_by_unsafe_water_source <= @top): Error Code: 3816. An expression of a check constraint 'check_interval' cannot refer to a user or system variable.
[36, 17:52:30] SELECT @bottom
LIMIT 0, 1000
: Running...
[36, 17:52:30] SELECT @bottom
LIMIT 0, 1000
: Fetching...
[36, 17:52:30] SELECT @bottom
LIMIT 0, 1000
: 1 row(s) returned
[37, 17:52:37] SELECT @bottom, @top
LIMIT 0, 1000
: Running...
[37, 17:52:37] SELECT @bottom, @top
LIMIT 0, 1000
: Fetching...
[37, 17:52:37] SELECT @bottom, @top
LIMIT 0, 1000
: 1 row(s) returned
[38, 17:55:08] ALTER TABLE nature_deaths 
ADD CONSTRAINT check_interval 
CHECK (deaths_by_unsafe_water_source >= (SELECT MIN(deaths_by_unsafe_water_source) FROM nature_deaths) AND deaths_by_unsafe_water_source <= (SELECT MAX(deaths_by_unsafe_water_source) FROM nature_deaths)): Running...
[38, 17:55:08] ALTER TABLE nature_deaths 
ADD CONSTRAINT check_interval 
CHECK (deaths_by_unsafe_water_source >= (SELECT MIN(deaths_by_unsafe_water_source) FROM nature_deaths) AND deaths_by_unsafe_water_source <= (SELECT MAX(deaths_by_unsafe_water_source) FROM nature_deaths)): Error Code: 3815. An expression of a check constraint 'check_interval' contains disallowed function.
[39, 17:56:26] ALTER TABLE nature_deaths 
ADD CONSTRAINT check_interval 
CHECK ((deaths_by_unsafe_water_source >= (SELECT MIN(deaths_by_unsafe_water_source) FROM nature_deaths)) AND (deaths_by_unsafe_water_source <= (SELECT MAX(deaths_by_unsafe_water_source) FROM nature_deaths))): Running...
[39, 17:56:26] ALTER TABLE nature_deaths 
ADD CONSTRAINT check_interval 
CHECK ((deaths_by_unsafe_water_source >= (SELECT MIN(deaths_by_unsafe_water_source) FROM nature_deaths)) AND (deaths_by_unsafe_water_source <= (SELECT MAX(deaths_by_unsafe_water_source) FROM nature_deaths))): Error Code: 3815. An expression of a check constraint 'check_interval' contains disallowed function.
[40, 17:58:24] SELECT @bottom, @top
LIMIT 0, 1000
: Running...
[40, 17:58:24] SELECT @bottom, @top
LIMIT 0, 1000
: Fetching...
[40, 17:58:24] SELECT @bottom, @top
LIMIT 0, 1000
: 1 row(s) returned
[41, 17:58:42] ALTER TABLE nature_deaths 
ADD CONSTRAINT check_interval 
CHECK (deaths_by_unsafe_water_source >= 0 AND deaths_by_unsafe_water_source <= 2450944): Running...
[41, 17:58:42] ALTER TABLE nature_deaths 
ADD CONSTRAINT check_interval 
CHECK (deaths_by_unsafe_water_source >= 0 AND deaths_by_unsafe_water_source <= 2450944): 6840 row(s) affected
Records: 6840  Duplicates: 0  Warnings: 0
[42, 18:00:01] ALTER TABLE nature_deaths 
DROP CONSTRAINT IF EXISTS check_interval: Running...
[42, 18:00:01] ALTER TABLE nature_deaths 
DROP CONSTRAINT IF EXISTS check_interval: Error Code: 1064. You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'IF EXISTS check_interval' at line 2
[43, 18:00:12] ALTER TABLE nature_deaths 
DROP CONSTRAINT check_interval: Running...
[43, 18:00:12] ALTER TABLE nature_deaths 
DROP CONSTRAINT check_interval: 0 row(s) affected
Records: 0  Duplicates: 0  Warnings: 0
[44, 18:00:18] ALTER TABLE nature_deaths 
ADD CONSTRAINT check_interval 
CHECK (deaths_by_unsafe_water_source >= 0 AND deaths_by_unsafe_water_source <= 2450943): Running...
[44, 18:00:18] ALTER TABLE nature_deaths 
ADD CONSTRAINT check_interval 
CHECK (deaths_by_unsafe_water_source >= 0 AND deaths_by_unsafe_water_source <= 2450943): Error Code: 3819. Check constraint 'check_interval' is violated.
[45, 18:00:31] ALTER TABLE nature_deaths 
ADD CONSTRAINT check_interval 
CHECK (deaths_by_unsafe_water_source >= 0 AND deaths_by_unsafe_water_source <= 2450944): Running...
[45, 18:00:31] ALTER TABLE nature_deaths 
ADD CONSTRAINT check_interval 
CHECK (deaths_by_unsafe_water_source >= 0 AND deaths_by_unsafe_water_source <= 2450944): 6840 row(s) affected
Records: 6840  Duplicates: 0  Warnings: 0
[46, 20:58:31] CREATE TRIGGER control BEFORE INSERT ON `nature_deaths`
FOR EACH ROW
BEGIN
	set @bottom = MIN(nature_deaths.deaths_by_unsafe_water_source);
	set @top = MAX(nature_deaths.deaths_by_unsafe_water_source);
    IF new.deaths_by_unsafe_water_source > top THEN SET new.deaths_by_unsafe_water_source = top; END IF;
    IF new.deaths_by_unsafe_water_source < bottom THEN SET new.deaths_by_unsafe_water_source = bottom; END IF;
END;: Running...
[46, 20:58:31] CREATE TRIGGER control BEFORE INSERT ON `nature_deaths`
FOR EACH ROW
BEGIN
	set @bottom = MIN(nature_deaths.deaths_by_unsafe_water_source);
	set @top = MAX(nature_deaths.deaths_by_unsafe_water_source);
    IF new.deaths_by_unsafe_water_source > top THEN SET new.deaths_by_unsafe_water_source = top; END IF;
    IF new.deaths_by_unsafe_water_source < bottom THEN SET new.deaths_by_unsafe_water_source = bottom; END IF;
END;: 0 row(s) affected
[47, 20:59:38] DROP TRIGGER IF EXISTS control: Running...
[47, 20:59:38] DROP TRIGGER IF EXISTS control: 0 row(s) affected
[48, 20:59:49] CALL get_death_numbers("GBR"): Running...
[48, 20:59:49] CALL get_death_numbers("GBR"): Fetching...
[48, 20:59:49] CALL get_death_numbers("GBR"): 30 row(s) returned
[49, 21:00:37] SELECT * FROM `cs306-project`.nature_deaths
LIMIT 0, 1000
: Running...
[49, 21:00:37] SELECT * FROM `cs306-project`.nature_deaths
LIMIT 0, 1000
: Fetching...
[49, 21:00:37] SELECT * FROM `cs306-project`.nature_deaths
LIMIT 0, 1000
: 1000 row(s) returned
[50, 21:00:59] INSERT INTO nature_deaths VALUES ("AFG", 2020, 10, -1, 10, 10, 10) -- expecting to get error: Running...
[50, 21:00:59] INSERT INTO nature_deaths VALUES ("AFG", 2020, 10, -1, 10, 10, 10) -- expecting to get error: Error Code: 3819. Check constraint 'check_interval' is violated.
[51, 21:02:10] INSERT INTO nature_deaths VALUES ("AFG", 2020, 10, 2450945, 10, 10, 10): Running...
[51, 21:02:10] INSERT INTO nature_deaths VALUES ("AFG", 2020, 10, 2450945, 10, 10, 10): Error Code: 3819. Check constraint 'check_interval' is violated.
[52, 21:02:55] DROP TRIGGER IF EXISTS control: Running...
[52, 21:02:55] DROP TRIGGER IF EXISTS control: 0 row(s) affected, 1 warning(s):
1360 Trigger does not exist
[53, 21:03:28] CREATE TRIGGER control BEFORE INSERT ON `nature_deaths`
FOR EACH ROW
BEGIN
	set @bottom = MIN(nature_deaths.deaths_by_unsafe_water_source);
	set @top = MAX(nature_deaths.deaths_by_unsafe_water_source);
    IF new.deaths_by_unsafe_water_source > top THEN SET new.deaths_by_unsafe_water_source = top; END IF;
    IF new.deaths_by_unsafe_water_source < bottom THEN SET new.deaths_by_unsafe_water_source = bottom; END IF;
END;: Running...
[53, 21:03:28] CREATE TRIGGER control BEFORE INSERT ON `nature_deaths`
FOR EACH ROW
BEGIN
	set @bottom = MIN(nature_deaths.deaths_by_unsafe_water_source);
	set @top = MAX(nature_deaths.deaths_by_unsafe_water_source);
    IF new.deaths_by_unsafe_water_source > top THEN SET new.deaths_by_unsafe_water_source = top; END IF;
    IF new.deaths_by_unsafe_water_source < bottom THEN SET new.deaths_by_unsafe_water_source = bottom; END IF;
END;: 0 row(s) affected
[54, 21:03:32] CREATE TRIGGER control BEFORE UPDATE ON `nature_deaths`
FOR EACH ROW
BEGIN
	set @bottom = MIN(nature_deaths.deaths_by_unsafe_water_source);
	set @top = MAX(nature_deaths.deaths_by_unsafe_water_source);
    IF new.deaths_by_unsafe_water_source > top THEN SET new.deaths_by_unsafe_water_source = top; END IF;
    IF new.deaths_by_unsafe_water_source < bottom THEN SET new.deaths_by_unsafe_water_source = bottom; END IF;
END;: Running...
[54, 21:03:32] CREATE TRIGGER control BEFORE UPDATE ON `nature_deaths`
FOR EACH ROW
BEGIN
	set @bottom = MIN(nature_deaths.deaths_by_unsafe_water_source);
	set @top = MAX(nature_deaths.deaths_by_unsafe_water_source);
    IF new.deaths_by_unsafe_water_source > top THEN SET new.deaths_by_unsafe_water_source = top; END IF;
    IF new.deaths_by_unsafe_water_source < bottom THEN SET new.deaths_by_unsafe_water_source = bottom; END IF;
END;: Error Code: 1359. Trigger already exists
[55, 21:04:12] DROP TRIGGER IF EXISTS control: Running...
[55, 21:04:12] DROP TRIGGER IF EXISTS control: 0 row(s) affected
[56, 21:04:18] CREATE TRIGGER control_insert BEFORE INSERT ON `nature_deaths`
FOR EACH ROW
BEGIN
	set @bottom = MIN(nature_deaths.deaths_by_unsafe_water_source);
	set @top = MAX(nature_deaths.deaths_by_unsafe_water_source);
    IF new.deaths_by_unsafe_water_source > top THEN SET new.deaths_by_unsafe_water_source = top; END IF;
    IF new.deaths_by_unsafe_water_source < bottom THEN SET new.deaths_by_unsafe_water_source = bottom; END IF;
END;: Running...
[56, 21:04:18] CREATE TRIGGER control_insert BEFORE INSERT ON `nature_deaths`
FOR EACH ROW
BEGIN
	set @bottom = MIN(nature_deaths.deaths_by_unsafe_water_source);
	set @top = MAX(nature_deaths.deaths_by_unsafe_water_source);
    IF new.deaths_by_unsafe_water_source > top THEN SET new.deaths_by_unsafe_water_source = top; END IF;
    IF new.deaths_by_unsafe_water_source < bottom THEN SET new.deaths_by_unsafe_water_source = bottom; END IF;
END;: 0 row(s) affected
[57, 21:05:04] INSERT INTO nature_deaths VALUES("TUR", 2020, 10, -1, 10, 10, 10): Running...
[57, 21:05:04] INSERT INTO nature_deaths VALUES("TUR", 2020, 10, -1, 10, 10, 10): Error Code: 1111. Invalid use of group function
[58, 21:09:46] CREATE TRIGGER control_insert BEFORE INSERT ON `nature_deaths`
FOR EACH ROW
BEGIN
	set @bottom = (SELECT MIN(nature_deaths.deaths_by_unsafe_water_source) FROM nature_deaths);
	set @bottom = (SELECT MAX(nature_deaths.deaths_by_unsafe_water_source) FROM nature_deaths);
    IF new.deaths_by_unsafe_water_source > @top THEN SET new.deaths_by_unsafe_water_source = @top; END IF;
    IF new.deaths_by_unsafe_water_source < @bottom THEN SET new.deaths_by_unsafe_water_source = @bottom; END IF;
END;: Running...
[58, 21:09:46] CREATE TRIGGER control_insert BEFORE INSERT ON `nature_deaths`
FOR EACH ROW
BEGIN
	set @bottom = (SELECT MIN(nature_deaths.deaths_by_unsafe_water_source) FROM nature_deaths);
	set @bottom = (SELECT MAX(nature_deaths.deaths_by_unsafe_water_source) FROM nature_deaths);
    IF new.deaths_by_unsafe_water_source > @top THEN SET new.deaths_by_unsafe_water_source = @top; END IF;
    IF new.deaths_by_unsafe_water_source < @bottom THEN SET new.deaths_by_unsafe_water_source = @bottom; END IF;
END;: Error Code: 1359. Trigger already exists
[59, 21:09:55] DROP TRIGGER IF EXISTS control_insert: Running...
[59, 21:09:55] DROP TRIGGER IF EXISTS control_insert: 0 row(s) affected
[60, 21:09:58] CREATE TRIGGER control_insert BEFORE INSERT ON `nature_deaths`
FOR EACH ROW
BEGIN
	set @bottom = (SELECT MIN(nature_deaths.deaths_by_unsafe_water_source) FROM nature_deaths);
	set @bottom = (SELECT MAX(nature_deaths.deaths_by_unsafe_water_source) FROM nature_deaths);
    IF new.deaths_by_unsafe_water_source > @top THEN SET new.deaths_by_unsafe_water_source = @top; END IF;
    IF new.deaths_by_unsafe_water_source < @bottom THEN SET new.deaths_by_unsafe_water_source = @bottom; END IF;
END;: Running...
[60, 21:09:58] CREATE TRIGGER control_insert BEFORE INSERT ON `nature_deaths`
FOR EACH ROW
BEGIN
	set @bottom = (SELECT MIN(nature_deaths.deaths_by_unsafe_water_source) FROM nature_deaths);
	set @bottom = (SELECT MAX(nature_deaths.deaths_by_unsafe_water_source) FROM nature_deaths);
    IF new.deaths_by_unsafe_water_source > @top THEN SET new.deaths_by_unsafe_water_source = @top; END IF;
    IF new.deaths_by_unsafe_water_source < @bottom THEN SET new.deaths_by_unsafe_water_source = @bottom; END IF;
END;: 0 row(s) affected
[61, 21:10:29] DROP TRIGGER IF EXISTS control_update: Running...
[61, 21:10:29] DROP TRIGGER IF EXISTS control_update: 0 row(s) affected, 1 warning(s):
1360 Trigger does not exist
[62, 21:10:40] CREATE TRIGGER control_update BEFORE UPDATE ON `nature_deaths`
FOR EACH ROW
BEGIN
	set @bottom = MIN(nature_deaths.deaths_by_unsafe_water_source);
	set @top = MAX(nature_deaths.deaths_by_unsafe_water_source);
    IF new.deaths_by_unsafe_water_source > top THEN SET new.deaths_by_unsafe_water_source = top; END IF;
    IF new.deaths_by_unsafe_water_source < bottom THEN SET new.deaths_by_unsafe_water_source = bottom; END IF;
END;: Running...
[62, 21:10:40] CREATE TRIGGER control_update BEFORE UPDATE ON `nature_deaths`
FOR EACH ROW
BEGIN
	set @bottom = MIN(nature_deaths.deaths_by_unsafe_water_source);
	set @top = MAX(nature_deaths.deaths_by_unsafe_water_source);
    IF new.deaths_by_unsafe_water_source > top THEN SET new.deaths_by_unsafe_water_source = top; END IF;
    IF new.deaths_by_unsafe_water_source < bottom THEN SET new.deaths_by_unsafe_water_source = bottom; END IF;
END;: 0 row(s) affected
[63, 21:10:45] INSERT INTO nature_deaths VALUES("TUR", 2020, 10, -1, 10, 10, 10): Running...
[63, 21:10:45] INSERT INTO nature_deaths VALUES("TUR", 2020, 10, -1, 10, 10, 10): 1 row(s) affected
[64, 21:11:15] CALL get_death_numbers("TUR"): Running...
[64, 21:11:15] CALL get_death_numbers("TUR"): Fetching...
[64, 21:11:15] CALL get_death_numbers("TUR"): 31 row(s) returned
[65, 21:12:09] INSERT INTO nature_deaths VALUES("TUR", 2020, 10, 2450945, 10, 10, 10): Running...
[65, 21:12:09] INSERT INTO nature_deaths VALUES("TUR", 2020, 10, 2450945, 10, 10, 10): Error Code: 1062. Duplicate entry 'TUR-2020' for key 'nature_deaths.PRIMARY'
[66, 21:12:24] INSERT INTO nature_deaths VALUES("TUR", 2021, 10, 2450945, 10, 10, 10): Running...
[66, 21:12:24] INSERT INTO nature_deaths VALUES("TUR", 2021, 10, 2450945, 10, 10, 10): 1 row(s) affected
[67, 21:12:27] CALL get_death_numbers("TUR"): Running...
[67, 21:12:27] CALL get_death_numbers("TUR"): Fetching...
[67, 21:12:27] CALL get_death_numbers("TUR"): 32 row(s) returned
[68, 21:15:16] DROP TRIGGER IF EXISTS control_insert: Running...
[68, 21:15:16] DROP TRIGGER IF EXISTS control_insert: 0 row(s) affected
[69, 21:15:26] DROP TRIGGER IF EXISTS control_update: Running...
[69, 21:15:26] DROP TRIGGER IF EXISTS control_update: 0 row(s) affected
[70, 21:16:00] DELETE FROM nature_deaths WHERE year = 2020 or year = 2021: Running...
[70, 21:16:00] DELETE FROM nature_deaths WHERE year = 2020 or year = 2021: Error Code: 1175. You are using safe update mode and you tried to update a table without a WHERE that uses a KEY column. 
To disable safe mode, toggle the option in Preferences -> SQL Editor and reconnect.
[71, 21:16:34] SET SQL_SAFE_UPDATES = 0: Running...
[71, 21:16:34] SET SQL_SAFE_UPDATES = 0: 0 row(s) affected
[72, 21:16:44] DELETE FROM nature_deaths WHERE year = 2020 or year = 2021: Running...
[72, 21:16:44] DELETE FROM nature_deaths WHERE year = 2020 or year = 2021: 2 row(s) affected
[73, 21:16:48] CALL get_death_numbers("TUR"): Running...
[73, 21:16:48] CALL get_death_numbers("TUR"): Fetching...
[73, 21:16:48] CALL get_death_numbers("TUR"): 30 row(s) returned
[74, 21:16:59] CREATE TRIGGER control_update BEFORE UPDATE ON `nature_deaths`
FOR EACH ROW
BEGIN
	SET @bottom = CAST((SELECT MIN(CAST(deaths_by_unsafe_water_source AS SIGNED)) FROM nature_deaths) AS UNSIGNED);
	SET @top = CAST((SELECT MAX(CAST(deaths_by_unsafe_water_source AS SIGNED)) FROM nature_deaths) AS UNSIGNED);
    IF new.deaths_by_unsafe_water_source > top THEN SET new.deaths_by_unsafe_water_source = top; END IF;
    IF new.deaths_by_unsafe_water_source < bottom THEN SET new.deaths_by_unsafe_water_source = bottom; END IF;
END;: Running...
[74, 21:16:59] CREATE TRIGGER control_update BEFORE UPDATE ON `nature_deaths`
FOR EACH ROW
BEGIN
	SET @bottom = CAST((SELECT MIN(CAST(deaths_by_unsafe_water_source AS SIGNED)) FROM nature_deaths) AS UNSIGNED);
	SET @top = CAST((SELECT MAX(CAST(deaths_by_unsafe_water_source AS SIGNED)) FROM nature_deaths) AS UNSIGNED);
    IF new.deaths_by_unsafe_water_source > top THEN SET new.deaths_by_unsafe_water_source = top; END IF;
    IF new.deaths_by_unsafe_water_source < bottom THEN SET new.deaths_by_unsafe_water_source = bottom; END IF;
END;: 0 row(s) affected
[75, 21:17:05] CREATE TRIGGER control_insert BEFORE INSERT ON `nature_deaths`
FOR EACH ROW
BEGIN
	SET @bottom = CAST((SELECT MIN(CAST(deaths_by_unsafe_water_source AS SIGNED)) FROM nature_deaths) AS UNSIGNED);
	SET @top = CAST((SELECT MAX(CAST(deaths_by_unsafe_water_source AS SIGNED)) FROM nature_deaths) AS UNSIGNED);
    IF new.deaths_by_unsafe_water_source > @top THEN SET new.deaths_by_unsafe_water_source = @top; END IF;
    IF new.deaths_by_unsafe_water_source < @bottom THEN SET new.deaths_by_unsafe_water_source = @bottom; END IF;
END;: Running...
[75, 21:17:05] CREATE TRIGGER control_insert BEFORE INSERT ON `nature_deaths`
FOR EACH ROW
BEGIN
	SET @bottom = CAST((SELECT MIN(CAST(deaths_by_unsafe_water_source AS SIGNED)) FROM nature_deaths) AS UNSIGNED);
	SET @top = CAST((SELECT MAX(CAST(deaths_by_unsafe_water_source AS SIGNED)) FROM nature_deaths) AS UNSIGNED);
    IF new.deaths_by_unsafe_water_source > @top THEN SET new.deaths_by_unsafe_water_source = @top; END IF;
    IF new.deaths_by_unsafe_water_source < @bottom THEN SET new.deaths_by_unsafe_water_source = @bottom; END IF;
END;: 0 row(s) affected
[76, 21:17:17] CALL get_death_numbers("TUR"): Running...
[76, 21:17:17] CALL get_death_numbers("TUR"): Fetching...
[76, 21:17:17] CALL get_death_numbers("TUR"): 30 row(s) returned
[77, 21:17:26] INSERT INTO nature_deaths VALUES("TUR", 2020, 10, -1, 10, 10, 10): Running...
[77, 21:17:26] INSERT INTO nature_deaths VALUES("TUR", 2020, 10, -1, 10, 10, 10): 1 row(s) affected
[78, 21:17:29] CALL get_death_numbers("TUR"): Running...
[78, 21:17:29] CALL get_death_numbers("TUR"): Fetching...
[78, 21:17:29] CALL get_death_numbers("TUR"): 31 row(s) returned
[79, 21:22:00] INSERT INTO nature_deaths VALUES("TUR", 2022, 10, 10, 10, 10, 10): Running...
[79, 21:22:00] INSERT INTO nature_deaths VALUES("TUR", 2022, 10, 10, 10, 10, 10): 1 row(s) affected
[80, 21:22:00] INSERT INTO nature_deaths VALUES("TUR", 2023, 10, 10, 10, 10, 10): Running...
[80, 21:22:00] INSERT INTO nature_deaths VALUES("TUR", 2023, 10, 10, 10, 10, 10): 1 row(s) affected
[81, 21:22:08] UPDATE nature_deaths
SET 
    "Deaths by Unsafe Water Source" = -10 -- which will be rounded up to 0
WHERE
    year = 2022: Running...
[81, 21:22:08] UPDATE nature_deaths
SET 
    "Deaths by Unsafe Water Source" = -10 -- which will be rounded up to 0
WHERE
    year = 2022: Error Code: 1064. You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '"Deaths by Unsafe Water Source" = -10 -- which will be rounded up to 0
WHERE
   ' at line 3
[82, 21:23:38] UPDATE nature_deaths
SET 
    `Deaths by Unsafe Water Source` = -10 -- which will be rounded up to 0
WHERE
    year = 2022: Running...
[82, 21:23:38] UPDATE nature_deaths
SET 
    `Deaths by Unsafe Water Source` = -10 -- which will be rounded up to 0
WHERE
    year = 2022: Error Code: 1054. Unknown column 'Deaths by Unsafe Water Source' in 'field list'
[83, 21:23:40] UPDATE nature_deaths
SET 
    `Deaths by Unsafe Water Source` = -10 -- which will be rounded up to 0
WHERE
    year = 2022: Running...
[83, 21:23:40] UPDATE nature_deaths
SET 
    `Deaths by Unsafe Water Source` = -10 -- which will be rounded up to 0
WHERE
    year = 2022: Error Code: 1054. Unknown column 'Deaths by Unsafe Water Source' in 'field list'
[84, 21:23:59] UPDATE nature_deaths
SET 
    `deaths_by_unsafe_water_source` = -10 -- which will be rounded up to 0
WHERE
    year = 2022: Running...
[84, 21:23:59] UPDATE nature_deaths
SET 
    `deaths_by_unsafe_water_source` = -10 -- which will be rounded up to 0
WHERE
    year = 2022: Error Code: 1054. Unknown column 'top' in 'field list'
[85, 21:24:23] DROP TRIGGER IF EXISTS control_update: Running...
[85, 21:24:23] DROP TRIGGER IF EXISTS control_update: 0 row(s) affected
[86, 21:24:23] CREATE TRIGGER control_update BEFORE UPDATE ON `nature_deaths`
FOR EACH ROW
BEGIN
	SET @bottom = CAST((SELECT MIN(CAST(deaths_by_unsafe_water_source AS SIGNED)) FROM nature_deaths) AS UNSIGNED);
	SET @top = CAST((SELECT MAX(CAST(deaths_by_unsafe_water_source AS SIGNED)) FROM nature_deaths) AS UNSIGNED);
    IF new.deaths_by_unsafe_water_source > @top THEN SET new.deaths_by_unsafe_water_source = @top; END IF;
    IF new.deaths_by_unsafe_water_source < @bottom THEN SET new.deaths_by_unsafe_water_source = @bottom; END IF;
END;: Running...
[86, 21:24:23] CREATE TRIGGER control_update BEFORE UPDATE ON `nature_deaths`
FOR EACH ROW
BEGIN
	SET @bottom = CAST((SELECT MIN(CAST(deaths_by_unsafe_water_source AS SIGNED)) FROM nature_deaths) AS UNSIGNED);
	SET @top = CAST((SELECT MAX(CAST(deaths_by_unsafe_water_source AS SIGNED)) FROM nature_deaths) AS UNSIGNED);
    IF new.deaths_by_unsafe_water_source > @top THEN SET new.deaths_by_unsafe_water_source = @top; END IF;
    IF new.deaths_by_unsafe_water_source < @bottom THEN SET new.deaths_by_unsafe_water_source = @bottom; END IF;
END;: 0 row(s) affected
[87, 21:24:28] UPDATE nature_deaths
SET 
    `deaths_by_unsafe_water_source` = -10 -- which will be rounded up to 0
WHERE
    year = 2022: Running...
[87, 21:24:28] UPDATE nature_deaths
SET 
    `deaths_by_unsafe_water_source` = -10 -- which will be rounded up to 0
WHERE
    year = 2022: 1 row(s) affected
Rows matched: 1  Changed: 1  Warnings: 0
[88, 21:24:52] UPDATE nature_deaths
SET 
    `deaths_by_unsafe_water_source` = 2450945 -- which will be rounded up to 0
WHERE
    year = 2023: Running...
[88, 21:24:52] UPDATE nature_deaths
SET 
    `deaths_by_unsafe_water_source` = 2450945 -- which will be rounded up to 0
WHERE
    year = 2023: 1 row(s) affected
Rows matched: 1  Changed: 1  Warnings: 0
[89, 21:25:37] CALL get_death_numbers("TUR"): Running...
[89, 21:25:37] CALL get_death_numbers("TUR"): Fetching...
[89, 21:25:37] CALL get_death_numbers("TUR"): 33 row(s) returned
[90, 21:26:33] SELECT  L.continent_code, COUNT(*) AS "Number of Countries With High Emissions from Given Region"
FROM locatedin L, countries_with_high_emission C
WHERE L.iso_code = C.iso_code
GROUP BY L.continent_code
HAVING COUNT(*) > 2
LIMIT 0, 1000
: Running...
[90, 21:26:33] SELECT  L.continent_code, COUNT(*) AS "Number of Countries With High Emissions from Given Region"
FROM locatedin L, countries_with_high_emission C
WHERE L.iso_code = C.iso_code
GROUP BY L.continent_code
HAVING COUNT(*) > 2
LIMIT 0, 1000
: Fetching...
[90, 21:26:33] SELECT  L.continent_code, COUNT(*) AS "Number of Countries With High Emissions from Given Region"
FROM locatedin L, countries_with_high_emission C
WHERE L.iso_code = C.iso_code
GROUP BY L.continent_code
HAVING COUNT(*) > 2
LIMIT 0, 1000
: 5 row(s) returned
[91, 21:28:25] SELECT l.continent_code, count(*) AS "Number of Countries With High Emissions from Given Region"
FROM locatedin L, countries_with_high_emission C
WHERE L.iso_code = C.iso_code
GROUP BY L.continent_code
HAVING COUNT(*) > 2
LIMIT 0, 1000
: Running...
[91, 21:28:25] SELECT l.continent_code, count(*) AS "Number of Countries With High Emissions from Given Region"
FROM locatedin L, countries_with_high_emission C
WHERE L.iso_code = C.iso_code
GROUP BY L.continent_code
HAVING COUNT(*) > 2
LIMIT 0, 1000
: Fetching...
[91, 21:28:25] SELECT l.continent_code, count(*) AS "Number of Countries With High Emissions from Given Region"
FROM locatedin L, countries_with_high_emission C
WHERE L.iso_code = C.iso_code
GROUP BY L.continent_code
HAVING COUNT(*) > 2
LIMIT 0, 1000
: 5 row(s) returned
[1, 21:40:28] SELECT * FROM `cs306-project`.nature_deaths
LIMIT 0, 1000
: Running...
[1, 21:40:28] SELECT * FROM `cs306-project`.nature_deaths
LIMIT 0, 1000
: Fetching...
[1, 21:40:29] SELECT * FROM `cs306-project`.nature_deaths
LIMIT 0, 1000
: 1000 row(s) returned
[2, 21:42:55] DROP VIEW IF EXISTS total_nature_casualties: Running...
[2, 21:42:55] DROP VIEW IF EXISTS total_nature_casualties: 0 row(s) affected, 1 warning(s):
1051 Unknown table 'cs306-project.total_nature_casualties'
[3, 21:42:55] CREATE VIEW total_nature_casualties AS 
SELECT SUM(deaths_by_outdoor_air_pollution) AS "Total Number of Deaths caused by Outdoor Air Pollution",
SUM(deaths_by_household_air_pollution_from_solid_fuels) AS "Total Number of Deaths caused by Household Air Pollution",
SUM(deaths_by_air_pollution) AS "Total Number of Deaths caused by Air Pollution",
SUM(deaths_by_unsafe_sanitation) AS "Total Number of Deaths caused by Unsafe Sanitation"
FROM nature_deaths
GROUP BY iso_code: Running...
[3, 21:42:55] CREATE VIEW total_nature_casualties AS 
SELECT SUM(deaths_by_outdoor_air_pollution) AS "Total Number of Deaths caused by Outdoor Air Pollution",
SUM(deaths_by_household_air_pollution_from_solid_fuels) AS "Total Number of Deaths caused by Household Air Pollution",
SUM(deaths_by_air_pollution) AS "Total Number of Deaths caused by Air Pollution",
SUM(deaths_by_unsafe_sanitation) AS "Total Number of Deaths caused by Unsafe Sanitation"
FROM nature_deaths
GROUP BY iso_code: 0 row(s) affected
[4, 21:43:09] SELECT * 
FROM total_nature_casualties
LIMIT 0, 1000
: Running...
[4, 21:43:09] SELECT * 
FROM total_nature_casualties
LIMIT 0, 1000
: Fetching...
[4, 21:43:09] SELECT * 
FROM total_nature_casualties
LIMIT 0, 1000
: 228 row(s) returned
[5, 21:43:37] DROP VIEW IF EXISTS total_nature_casualties: Running...
[5, 21:43:37] DROP VIEW IF EXISTS total_nature_casualties: 0 row(s) affected
[6, 21:43:37] CREATE VIEW total_nature_casualties AS 
SELECT iso_code, 
SUM(deaths_by_outdoor_air_pollution) AS "Total Number of Deaths caused by Outdoor Air Pollution",
SUM(deaths_by_household_air_pollution_from_solid_fuels) AS "Total Number of Deaths caused by Household Air Pollution",
SUM(deaths_by_air_pollution) AS "Total Number of Deaths caused by Air Pollution",
SUM(deaths_by_unsafe_sanitation) AS "Total Number of Deaths caused by Unsafe Sanitation"
FROM nature_deaths
GROUP BY iso_code: Running...
[6, 21:43:37] CREATE VIEW total_nature_casualties AS 
SELECT iso_code, 
SUM(deaths_by_outdoor_air_pollution) AS "Total Number of Deaths caused by Outdoor Air Pollution",
SUM(deaths_by_household_air_pollution_from_solid_fuels) AS "Total Number of Deaths caused by Household Air Pollution",
SUM(deaths_by_air_pollution) AS "Total Number of Deaths caused by Air Pollution",
SUM(deaths_by_unsafe_sanitation) AS "Total Number of Deaths caused by Unsafe Sanitation"
FROM nature_deaths
GROUP BY iso_code: 0 row(s) affected
[7, 21:43:40] SELECT * 
FROM total_nature_casualties
LIMIT 0, 1000
: Running...
[7, 21:43:40] SELECT * 
FROM total_nature_casualties
LIMIT 0, 1000
: Fetching...
[7, 21:43:40] SELECT * 
FROM total_nature_casualties
LIMIT 0, 1000
: 228 row(s) returned
